[{"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\index.js":"1","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\reportWebVitals.js":"2","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\App.js":"3","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Login\\index.js":"4","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Profile\\index.js":"5","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\VerifyOTP\\index.js":"6","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Registration\\index.js":"7","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard\\index.js":"8","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-collaboration\\index.js":"9","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-citizenServices\\index.js":"10","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-shareDiscussIdeas\\index.js":"11","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-sDI-StartANewIdea\\index.js":"12","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-complaintManagement\\index.js":"13","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Footer\\index.js":"14","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\DefaultMapsLoadComponent\\index.js":"15","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-sDI-ACardDetails\\index.js":"16","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-IncidentReport\\index.js":"17","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\reset-password\\index.js":"18","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\forget-password-verifyOTP\\index.js":"19","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Profile-FirstLogin\\index.js":"20","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Forget-password\\index.js":"21","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Polls_Surveys\\Collaboration-pollsSurveys\\index.js":"22","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-BecomeAVolunteer\\index.js":"23","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Polls_Surveys\\CollaborationPSDetails\\index.js":"24","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-BecomeAVolunteer\\index.js":"25","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-ACardDetails\\index.js":"26","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Sos\\Sos-Component\\index.js":"27","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-EditVolunteer\\index.js":"28","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Complaint_Management\\Log-A-Complaint\\index.js":"29","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Complaint_Management\\My-Complaints\\index.js":"30","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Complaint_Management\\Search-Complaint\\index.js":"31","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Complaint_Management\\My-Complaint-Status\\index.js":"32","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Complaint_Management\\Complaints-Details-By-ID\\index.js":"33","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\IncidentReport\\IncidentStatus\\index.js":"34","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\IncidentReport\\my-Incident-list\\index.js":"35","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\IncidentReport\\Incident-Details-By-ID\\index.js":"36","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\IncidentReport\\SearchIncident\\index.js":"37","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\NearBy\\defaultMapNearby\\index.js":"38","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Trends\\LatestTrends\\index.js":"39","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\NearBy\\nearBy-info\\index.js":"40","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-nearBy\\index.js":"41","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\IncidentReport\\Report-An-Incident\\index.js":"42","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard\\Dashboard.js":"43","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-citizenServices\\Dashboard-citizenServices.js":"44","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Login\\Login.js":"45","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-collaboration\\Dashboard-collaboration.js":"46","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-complaintManagement\\Dashboard-complaintManagement.js":"47","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-shareDiscussIdeas\\Collaboration-shareDiscussIdeas.js":"48","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-sDI-StartANewIdea\\Collaboration-sDI-StartANewIdea.js":"49","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Footer\\Footer.js":"50","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\DefaultMapsLoadComponent\\DefaultMapsLoadComponent.js":"51","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Profile\\Profile.js":"52","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Registration\\Registration.js":"53","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Polls_Surveys\\Collaboration-pollsSurveys\\Collaboration-pollsSurveys.js":"54","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Forget-password\\Forget-password.js":"55","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-IncidentReport\\Dashboard-IncidentReport.js":"56","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-ACardDetails\\Collaboration-bAV-ACardDetails.js":"57","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Profile-FirstLogin\\Profile-FirstLogin.js":"58","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-BecomeAVolunteer\\Collaboration-BecomeAVolunteer.js":"59","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Polls_Surveys\\CollaborationPSDetails\\CollaborationPSDetails.js":"60","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-BecomeAVolunteer\\Collaboration-bAV-BecomeAVolunteer.js":"61","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\reset-password\\reset-password.js":"62","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Sos\\Sos-Component\\Sos-Component.js":"63","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\VerifyOTP\\VerifyOTP.js":"64","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Complaint_Management\\My-Complaints\\My-Complaints.js":"65","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\forget-password-verifyOTP\\forget-password-verifyOTP.js":"66","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Complaint_Management\\Log-A-Complaint\\Log-A-Complaint.js":"67","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-EditVolunteer\\Collaboration-bAV-EditVolunteer.js":"68","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Complaint_Management\\Search-Complaint\\Search-Complaint.js":"69","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Complaint_Management\\My-Complaint-Status\\My-Complaint-Status.js":"70","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\IncidentReport\\IncidentStatus\\IncidentStatus.js":"71","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\IncidentReport\\Incident-Details-By-ID\\Incident-Details-By-ID.js":"72","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\IncidentReport\\SearchIncident\\SearchIncident.js":"73","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Complaint_Management\\Complaints-Details-By-ID\\Complaints-Details-By-ID.js":"74","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\IncidentReport\\my-Incident-list\\my-Incident-list.js":"75","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Trends\\LatestTrends\\LatestTrends.js":"76","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\NearBy\\defaultMapNearby\\defaultMapNearby.js":"77","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\NearBy\\nearBy-info\\nearBy-info.js":"78","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-nearBy\\Dashboard-nearBy.js":"79","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-sDI-ACardDetails\\Collaboration-sDI-ACardDetails.js":"80","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\IncidentReport\\Report-An-Incident\\Report-An-Incident.js":"81","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\jsonFiles\\DashboardInfoJson\\DashboardFooter.js":"82","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\jsonFiles\\CollaborationJson\\collaborationDetails.js":"83","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\jsonFiles\\UserInfoJson\\userLogin.js":"84","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\jsonFiles\\CollaborationTabInfoJson\\collaborationtabinfo.js":"85","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\jsonFiles\\CollaborationJson\\complaintDetails.js":"86","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-header\\index.js":"87","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-middleMainMenu\\index.js":"88","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\UserGeoMapComponent\\index.js":"89","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-middleMainMenu\\Dashboard-middleMainMenu.js":"90","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-header\\Dashboard-header.js":"91","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\jsonFiles\\DashboardInfoJson\\dashboardInfo.js":"92","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\UserGeoMapComponent\\UserGeoMapComponent.js":"93","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\jsonFiles\\CollaborationJson\\collaborationVolunteer.js":"94","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\jsonFiles\\UserInfoJson\\categoryList.js":"95","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-MostRecent\\index.js":"96","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-MostTrending\\index.js":"97","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-MostDiscussed\\index.js":"98","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\MessageParser.js":"99","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\Config.js":"100","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Polls_Surveys\\CollaborationPSMostDiscussed\\index.js":"101","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Polls_Surveys\\CollaborationPSMostTrending\\index.js":"102","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Polls_Surveys\\CollaborationPSMostRecent\\index.js":"103","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Profile-changePassword\\index.js":"104","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\LoadMaps\\index.js":"105","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Profile-myProfile\\index.js":"106","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-MostDiscussed\\Collaboration-bAV-MostDiscussed.js":"107","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-MostTrending\\Collaboration-bAV-MostTrending.js":"108","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-MostRecent\\Collaboration-bAV-MostRecent.js":"109","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-sDI-MostDiscussed\\index.js":"110","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-sDI-MostRecent\\index.js":"111","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-sDI-MostTrending\\index.js":"112","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Polls_Surveys\\CollaborationPSMostDiscussed\\CollaborationPSMostDiscussed.js":"113","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Polls_Surveys\\CollaborationPSMostTrending\\CollaborationPSMostTrending.js":"114","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\chatbot\\BotAvatar\\BotAvatar.jsx":"115","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\chatbot\\CollaborationComponent\\CollaborationOptions.jsx":"116","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\chatbot\\ComplainManagement\\ComplainOptions.jsx":"117","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\chatbot\\ComplainManagement\\SearchComplain.jsx":"118","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\chatbot\\ComplainManagement\\LogComplain.jsx":"119","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\chatbot\\ComplainManagement\\ComplainStatus.jsx":"120","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\chatbot\\CitizenServices\\CitizenOptions.jsx":"121","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\chatbot\\CollaborationComponent\\ShareDiscuss.jsx":"122","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\chatbot\\RootOptions\\Root.jsx":"123","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Polls_Surveys\\CollaborationPSMostRecent\\CollaborationPSMostRecent.js":"124","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Profile-changePassword\\Profile-changePassword.js":"125","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\LoadMaps\\LoadMaps.js":"126","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Profile-myProfile\\Profile-myProfile.js":"127","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-sDI-MostDiscussed\\Collaboration-sDI-MostDiscussed.js":"128","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-sDI-MostRecent\\Collaboration-sDI-MostRecent.js":"129","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-sDI-MostTrending\\Collaboration-sDI-MostTrending.js":"130","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\ActionProvider.js":"131"},{"size":690,"mtime":1638270044291,"results":"132","hashOfConfig":"133"},{"size":375,"mtime":1638270044291,"results":"134","hashOfConfig":"133"},{"size":6285,"mtime":1638270043082,"results":"135","hashOfConfig":"133"},{"size":36,"mtime":1638270043853,"results":"136","hashOfConfig":"133"},{"size":38,"mtime":1638270043961,"results":"137","hashOfConfig":"133"},{"size":40,"mtime":1638270043991,"results":"138","hashOfConfig":"133"},{"size":43,"mtime":1638270043961,"results":"139","hashOfConfig":"133"},{"size":40,"mtime":1638270043837,"results":"140","hashOfConfig":"133"},{"size":54,"mtime":1638270043837,"results":"141","hashOfConfig":"133"},{"size":56,"mtime":1638270043822,"results":"142","hashOfConfig":"133"},{"size":62,"mtime":1638270043822,"results":"143","hashOfConfig":"133"},{"size":62,"mtime":1638270043822,"results":"144","hashOfConfig":"133"},{"size":60,"mtime":1638270043837,"results":"145","hashOfConfig":"133"},{"size":37,"mtime":1638270043837,"results":"146","hashOfConfig":"133"},{"size":55,"mtime":1638270043837,"results":"147","hashOfConfig":"133"},{"size":61,"mtime":1638270043806,"results":"148","hashOfConfig":"133"},{"size":55,"mtime":1638270043822,"results":"149","hashOfConfig":"133"},{"size":45,"mtime":1638270043991,"results":"150","hashOfConfig":"133"},{"size":56,"mtime":1638270043991,"results":"151","hashOfConfig":"133"},{"size":49,"mtime":1638270043960,"results":"152","hashOfConfig":"133"},{"size":46,"mtime":1638270043837,"results":"153","hashOfConfig":"133"},{"size":57,"mtime":1638270043853,"results":"154","hashOfConfig":"133"},{"size":61,"mtime":1638270043784,"results":"155","hashOfConfig":"133"},{"size":53,"mtime":1638270043853,"results":"156","hashOfConfig":"133"},{"size":65,"mtime":1638270043791,"results":"157","hashOfConfig":"133"},{"size":61,"mtime":1638270043791,"results":"158","hashOfConfig":"133"},{"size":44,"mtime":1638270043961,"results":"159","hashOfConfig":"133"},{"size":62,"mtime":1638270043791,"results":"160","hashOfConfig":"133"},{"size":46,"mtime":1638270043822,"results":"161","hashOfConfig":"133"},{"size":44,"mtime":1638270043822,"results":"162","hashOfConfig":"133"},{"size":47,"mtime":1638270043822,"results":"163","hashOfConfig":"133"},{"size":50,"mtime":1638270043822,"results":"164","hashOfConfig":"133"},{"size":55,"mtime":1638270043822,"results":"165","hashOfConfig":"133"},{"size":45,"mtime":1638270043853,"results":"166","hashOfConfig":"133"},{"size":47,"mtime":1638270043853,"results":"167","hashOfConfig":"133"},{"size":53,"mtime":1638270043837,"results":"168","hashOfConfig":"133"},{"size":45,"mtime":1638270043853,"results":"169","hashOfConfig":"133"},{"size":47,"mtime":1638270043853,"results":"170","hashOfConfig":"133"},{"size":43,"mtime":1638270043961,"results":"171","hashOfConfig":"133"},{"size":42,"mtime":1638270043853,"results":"172","hashOfConfig":"133"},{"size":47,"mtime":1638270043837,"results":"173","hashOfConfig":"133"},{"size":49,"mtime":1638270043853,"results":"174","hashOfConfig":"133"},{"size":10078,"mtime":1638270043837,"results":"175","hashOfConfig":"133"},{"size":34313,"mtime":1641450852294,"results":"176","hashOfConfig":"133"},{"size":40363,"mtime":1641450262404,"results":"177","hashOfConfig":"133"},{"size":20218,"mtime":1641446919053,"results":"178","hashOfConfig":"133"},{"size":22135,"mtime":1641450867673,"results":"179","hashOfConfig":"133"},{"size":29805,"mtime":1641393741056,"results":"180","hashOfConfig":"133"},{"size":40030,"mtime":1641278177986,"results":"181","hashOfConfig":"133"},{"size":11320,"mtime":1641544363332,"results":"182","hashOfConfig":"133"},{"size":10080,"mtime":1640239431084,"results":"183","hashOfConfig":"133"},{"size":4132,"mtime":1639487880523,"results":"184","hashOfConfig":"133"},{"size":33647,"mtime":1641282816586,"results":"185","hashOfConfig":"133"},{"size":26121,"mtime":1641393867468,"results":"186","hashOfConfig":"133"},{"size":13905,"mtime":1638270043837,"results":"187","hashOfConfig":"133"},{"size":22056,"mtime":1641450878938,"results":"188","hashOfConfig":"133"},{"size":46615,"mtime":1641534412301,"results":"189","hashOfConfig":"133"},{"size":45908,"mtime":1641453771211,"results":"190","hashOfConfig":"133"},{"size":33732,"mtime":1641456044001,"results":"191","hashOfConfig":"133"},{"size":26762,"mtime":1640762277796,"results":"192","hashOfConfig":"133"},{"size":44394,"mtime":1641278235706,"results":"193","hashOfConfig":"133"},{"size":16950,"mtime":1638270043991,"results":"194","hashOfConfig":"133"},{"size":16576,"mtime":1640149949126,"results":"195","hashOfConfig":"133"},{"size":11883,"mtime":1641302510962,"results":"196","hashOfConfig":"133"},{"size":18118,"mtime":1641542996725,"results":"197","hashOfConfig":"133"},{"size":11605,"mtime":1638270043991,"results":"198","hashOfConfig":"133"},{"size":39374,"mtime":1641283644376,"results":"199","hashOfConfig":"133"},{"size":53864,"mtime":1641369803574,"results":"200","hashOfConfig":"133"},{"size":21934,"mtime":1638270043822,"results":"201","hashOfConfig":"133"},{"size":24355,"mtime":1640239431080,"results":"202","hashOfConfig":"133"},{"size":23330,"mtime":1640239431088,"results":"203","hashOfConfig":"133"},{"size":55013,"mtime":1641544412958,"results":"204","hashOfConfig":"133"},{"size":22657,"mtime":1640159664556,"results":"205","hashOfConfig":"133"},{"size":58282,"mtime":1641543592467,"results":"206","hashOfConfig":"133"},{"size":17842,"mtime":1641544516180,"results":"207","hashOfConfig":"133"},{"size":20183,"mtime":1641619387359,"results":"208","hashOfConfig":"133"},{"size":10270,"mtime":1638270043853,"results":"209","hashOfConfig":"133"},{"size":3696,"mtime":1638270043853,"results":"210","hashOfConfig":"133"},{"size":33889,"mtime":1641450892581,"results":"211","hashOfConfig":"133"},{"size":48135,"mtime":1641534601262,"results":"212","hashOfConfig":"133"},{"size":39897,"mtime":1641302510962,"results":"213","hashOfConfig":"133"},{"size":386,"mtime":1638270044291,"results":"214","hashOfConfig":"133"},{"size":4442,"mtime":1641619293665,"results":"215","hashOfConfig":"133"},{"size":782,"mtime":1638270044291,"results":"216","hashOfConfig":"133"},{"size":9126,"mtime":1640161011597,"results":"217","hashOfConfig":"133"},{"size":3652,"mtime":1638270044291,"results":"218","hashOfConfig":"133"},{"size":47,"mtime":1638270043837,"results":"219","hashOfConfig":"133"},{"size":55,"mtime":1638270043837,"results":"220","hashOfConfig":"133"},{"size":50,"mtime":1638270043961,"results":"221","hashOfConfig":"133"},{"size":5744,"mtime":1638270043837,"results":"222","hashOfConfig":"133"},{"size":12233,"mtime":1638270043837,"results":"223","hashOfConfig":"133"},{"size":1920,"mtime":1638270044291,"results":"224","hashOfConfig":"133"},{"size":3611,"mtime":1638270043961,"results":"225","hashOfConfig":"133"},{"size":2077,"mtime":1640167714078,"results":"226","hashOfConfig":"133"},{"size":319,"mtime":1638270044291,"results":"227","hashOfConfig":"133"},{"size":59,"mtime":1638270043806,"results":"228","hashOfConfig":"133"},{"size":61,"mtime":1638270043806,"results":"229","hashOfConfig":"133"},{"size":62,"mtime":1638270043806,"results":"230","hashOfConfig":"133"},{"size":7629,"mtime":1638270043082,"results":"231","hashOfConfig":"133"},{"size":5262,"mtime":1640264118963,"results":"232","hashOfConfig":"133"},{"size":59,"mtime":1638270043853,"results":"233","hashOfConfig":"133"},{"size":58,"mtime":1638270043956,"results":"234","hashOfConfig":"133"},{"size":56,"mtime":1638270043869,"results":"235","hashOfConfig":"133"},{"size":53,"mtime":1638270043961,"results":"236","hashOfConfig":"133"},{"size":39,"mtime":1638270043853,"results":"237","hashOfConfig":"133"},{"size":48,"mtime":1638270043961,"results":"238","hashOfConfig":"133"},{"size":14463,"mtime":1641532611827,"results":"239","hashOfConfig":"133"},{"size":14475,"mtime":1641531508400,"results":"240","hashOfConfig":"133"},{"size":13679,"mtime":1641530464444,"results":"241","hashOfConfig":"133"},{"size":62,"mtime":1638270043806,"results":"242","hashOfConfig":"133"},{"size":59,"mtime":1638270043806,"results":"243","hashOfConfig":"133"},{"size":61,"mtime":1638270043806,"results":"244","hashOfConfig":"133"},{"size":10516,"mtime":1641563163972,"results":"245","hashOfConfig":"133"},{"size":10519,"mtime":1641563316048,"results":"246","hashOfConfig":"133"},{"size":176,"mtime":1638270043621,"results":"247","hashOfConfig":"133"},{"size":1805,"mtime":1640068486015,"results":"248","hashOfConfig":"133"},{"size":1476,"mtime":1640068486016,"results":"249","hashOfConfig":"133"},{"size":580,"mtime":1638270043769,"results":"250","hashOfConfig":"133"},{"size":574,"mtime":1638270043769,"results":"251","hashOfConfig":"133"},{"size":583,"mtime":1638270043769,"results":"252","hashOfConfig":"133"},{"size":5649,"mtime":1640161011555,"results":"253","hashOfConfig":"133"},{"size":962,"mtime":1638270043769,"results":"254","hashOfConfig":"133"},{"size":1050,"mtime":1638270043784,"results":"255","hashOfConfig":"133"},{"size":10209,"mtime":1641563363781,"results":"256","hashOfConfig":"133"},{"size":24206,"mtime":1638270043961,"results":"257","hashOfConfig":"133"},{"size":11403,"mtime":1638270043853,"results":"258","hashOfConfig":"133"},{"size":29030,"mtime":1641367989025,"results":"259","hashOfConfig":"133"},{"size":12794,"mtime":1641553829163,"results":"260","hashOfConfig":"133"},{"size":13176,"mtime":1641552475454,"results":"261","hashOfConfig":"133"},{"size":12789,"mtime":1641553913558,"results":"262","hashOfConfig":"133"},{"size":31948,"mtime":1640264118894,"results":"263","hashOfConfig":"133"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},"155tuvy",{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"266"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"266"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"266"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"266"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"266"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"266"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"266"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"266"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"266"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"266"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"266"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"266"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"266"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"266"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"266"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"266"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"266"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"266"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"266"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"266"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"266"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"266"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"266"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"266"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"266"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"266"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":55,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"266"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"266"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"266"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"266"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"266"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"266"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"266"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"266"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"451","messages":"452","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"266"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"266"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"266"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"266"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"266"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"266"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"266"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"266"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"266"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"266"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"266"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"266"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"266"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"266"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"266"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546","usedDeprecatedRules":"266"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"266"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"266"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"266"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568","usedDeprecatedRules":"266"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571","usedDeprecatedRules":"266"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"266"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577","usedDeprecatedRules":"266"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"266"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"266"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"266"},"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\index.js",[],["587","588"],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\reportWebVitals.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\App.js",["589"],"import './App.css';\r\nimport { Route,HashRouter } from \"react-router-dom\";\r\nimport Login from \"./component/Login\";\r\nimport ForgetPassword from \"./component/Forget-password\";\r\nimport Registration from \"./component/Registration\";\r\nimport VerifyOTP from './component/VerifyOTP';\r\nimport Profile from './component/Profile';\r\nimport Dashboard from \"./component/Dashboard\";\r\nimport Footer from \"./component/Footer\";\r\nimport CollaborationShareDiscussIdeas from \"./component/Collaboration-shareDiscussIdeas\";\r\nimport CollaborationPollsSurveys from \"./component/Polls_Surveys/Collaboration-pollsSurveys\";\r\nimport DashboardCollaboration from \"./component/Dashboard-collaboration\";\r\nimport CollaborationBecomeAVolunteer from \"./component/Collaboration-Volunteer/Collaboration-BecomeAVolunteer\";\r\nimport CollaborationPSDetails from \"./component/Polls_Surveys/CollaborationPSDetails\";\r\nimport DashboardComplaintManagement from \"./component/Dashboard-complaintManagement\";\r\nimport SoS from \"./component/Sos/Sos-Component\";\r\nimport DashboardCitizenServices from \"./component/Dashboard-citizenServices\";\r\nimport DashboardNearBy from \"./component/Dashboard-nearBy\";\r\nimport SearchComplaint from \"./component/Complaint_Management/Search-Complaint\";\r\nimport MyComplaintStatus from \"./component/Complaint_Management/My-Complaint-Status\";\r\nimport CollaborationSDIStartANewIdea from \"./component/Collaboration-sDI-StartANewIdea\";\r\nimport CollaborationBAVBecomeAVolunteer from \"./component/Collaboration-Volunteer/Collaboration-bAV-BecomeAVolunteer\";\r\nimport CollaborationSDIACardDetails from \"./component/Collaboration-sDI-ACardDetails\";\r\nimport CollaborationBAVACardDetails from \"./component/Collaboration-Volunteer/Collaboration-bAV-ACardDetails\";\r\nimport LogAComplaint from \"./component/Complaint_Management/Log-A-Complaint\";\r\nimport MyComplaints from \"./component/Complaint_Management/My-Complaints\";\r\nimport ComplaintsDetailsByID from \"./component/Complaint_Management/Complaints-Details-By-ID\";\r\nimport DashboardIncidentReport from \"./component/Dashboard-IncidentReport\";\r\nimport ReportAnIncident from \"./component/IncidentReport/Report-An-Incident\";\r\nimport IncidentStatus from \"./component/IncidentReport/IncidentStatus\";\r\nimport SearchIncident from \"./component/IncidentReport/SearchIncident\";\r\nimport MyIncidentList from \"./component/IncidentReport/my-Incident-list\";\r\nimport IncidentDetailsByID from \"./component/IncidentReport/Incident-Details-By-ID\";\r\nimport DefaultMaps from \"./component/DefaultMapsLoadComponent\";\r\nimport NearByInfo from \"./component/NearBy/nearBy-info\";\r\nimport DefaultMapNearby from \"./component/NearBy/defaultMapNearby\";\r\nimport LatestTrends from \"./component/Trends/LatestTrends\";\r\nimport ForgetPasswordVerifyOTP from \"./component/forget-password-verifyOTP\";\r\nimport ResetPassword from \"./component/reset-password\";\r\nimport CollaborationBAVEditVolunteer from \"./component/Collaboration-Volunteer/Collaboration-bAV-EditVolunteer\";\r\nimport ProfileFirstLogin from \"./component/Profile-FirstLogin\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <HashRouter>\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route exact path=\"/dashboard\" component={Dashboard} />\r\n        <Route exact path=\"/forgetPassword\" component={ForgetPassword} />\r\n        <Route exact path=\"/registration\" component={Registration} />\r\n        <Route exact path=\"/verifyotp\" component={VerifyOTP} />\r\n        <Route exact path=\"/profile\" component={Profile} />\r\n        <Route exact path=\"/collaboration-shareDiscussIdeas\" component={CollaborationShareDiscussIdeas} />\r\n        <Route exact path=\"/collaboration-pollsSurveys\" component={CollaborationPollsSurveys} />\r\n        <Route exact path=\"/collaboration-pollsSurveysDetails\" component={CollaborationPSDetails} />\r\n        <Route exact path=\"/dashboard-collaboration\" component={DashboardCollaboration} />\r\n        <Route exact path=\"/collaboration-becomeAVolunteer\" component={CollaborationBecomeAVolunteer} />\r\n        <Route exact path=\"/footer\" component={Footer} />\r\n        <Route exact path=\"/emergencyServices\" component={SoS} />\r\n        <Route exact path=\"/dashboard-complaintManagement\" component={DashboardComplaintManagement} />\r\n        <Route exact path=\"/dashboard-citizenServices\" component={DashboardCitizenServices} />\r\n        <Route exact path=\"/dashboard-nearBy\" component={DashboardNearBy} />\r\n        <Route exact path=\"/search-complaint\" component={SearchComplaint} />\r\n        <Route exact path=\"/complaintStatus\" component={MyComplaintStatus} />\r\n        <Route exact path=\"/collaboration-StartANewIdea\" component={CollaborationSDIStartANewIdea} />\r\n        <Route exact path=\"/collaboration-SubmitAVolunteer\" component={CollaborationBAVBecomeAVolunteer} />\r\n        <Route exact path=\"/collaboration-ACardDetails\" component={CollaborationSDIACardDetails} />\r\n        <Route exact path=\"/volunteer-ACardDetails\" component={CollaborationBAVACardDetails} />\r\n        <Route exact path=\"/log-complaint\" component={LogAComplaint} />\r\n        <Route exact path=\"/my-complaints\" component={MyComplaints} />\r\n        <Route exact path=\"/ComplaintsDetailsByID\" component={ComplaintsDetailsByID} />\r\n        <Route exact path=\"/incidentReport\" component={DashboardIncidentReport} />\r\n        <Route exact path=\"/reportAnIncident\" component={ReportAnIncident} />\r\n        <Route exact path=\"/incident-status\" component={IncidentStatus} />\r\n        <Route exact path=\"/search-incident\" component={SearchIncident} />\r\n        <Route exact path=\"/My-incident-list\" component={MyIncidentList} />\r\n        <Route exact path=\"/IncidentDetailsByID\" component={IncidentDetailsByID} />\r\n        <Route exact path=\"/Maps\" component={DefaultMaps} />\r\n        <Route exact path=\"/nearBy-info\" component={DefaultMapNearby} />\r\n        <Route exact path=\"/LatestTrends\" component={LatestTrends} />\r\n        <Route exact path=\"/ForgetPasswordVerifyOTP\" component={ForgetPasswordVerifyOTP} />\r\n        <Route exact path=\"/ResetPassword\" component={ResetPassword} />\r\n        <Route exact path=\"/CollaborationBAVEditVolunteer\" component={CollaborationBAVEditVolunteer} />\r\n        <Route exact path=\"/ProfileFirstLogin\" component={ProfileFirstLogin} />\r\n        \r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Login\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Profile\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\VerifyOTP\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Registration\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-collaboration\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-citizenServices\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-shareDiscussIdeas\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-sDI-StartANewIdea\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-complaintManagement\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Footer\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\DefaultMapsLoadComponent\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-sDI-ACardDetails\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-IncidentReport\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\reset-password\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\forget-password-verifyOTP\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Profile-FirstLogin\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Forget-password\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Polls_Surveys\\Collaboration-pollsSurveys\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-BecomeAVolunteer\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Polls_Surveys\\CollaborationPSDetails\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-BecomeAVolunteer\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-ACardDetails\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Sos\\Sos-Component\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-EditVolunteer\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Complaint_Management\\Log-A-Complaint\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Complaint_Management\\My-Complaints\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Complaint_Management\\Search-Complaint\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Complaint_Management\\My-Complaint-Status\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Complaint_Management\\Complaints-Details-By-ID\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\IncidentReport\\IncidentStatus\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\IncidentReport\\my-Incident-list\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\IncidentReport\\Incident-Details-By-ID\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\IncidentReport\\SearchIncident\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\NearBy\\defaultMapNearby\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Trends\\LatestTrends\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\NearBy\\nearBy-info\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-nearBy\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\IncidentReport\\Report-An-Incident\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard\\Dashboard.js",["590","591","592","593","594","595","596","597","598","599","600"],"import React, { Component } from \"react\";\r\nimport DashboardMiddleMainMenu from \"../Dashboard-middleMainMenu\";\r\nimport Header from \"../Dashboard-header\";\r\nimport Footer from \"../Footer\";\r\nimport \"./Dashboard.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport footer_data from \"../../jsonFiles/DashboardInfoJson/DashboardFooter\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport HeaderLogo from \"../../assets/HeaderLogo.png\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.style = \"background-image: url();\";\r\n    document.body.style = \"background: #F9F9F9\";\r\n    console.log(\r\n      \"my profile picture\" + sessionStorage.getItem(\"yourProfileImage\")\r\n    );\r\n    if ( sessionStorage.getItem(\"yourProfileImage\") != null || sessionStorage.getItem(\"yourProfileImage\") != undefined){\r\n    if (sessionStorage.getItem(\"yourProfileImage\").indexOf(\"https\") !== -1) {\r\n      console.log(\"https present\");\r\n    } else {\r\n      console.log(\"https absent\");\r\n      sessionStorage.setItem(\r\n        \"yourProfileImage\",\r\n        \"https://scity.gmmspl.com:3000/\" +\r\n          sessionStorage.getItem(\"yourProfileImage\")\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <div><Header ></Header></div> */}\r\n        {/* <Container className=\"header-space\"></Container> */}\r\n        {/* <div className=\"middleCardMenu \"> */}\r\n\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"header-height-style_SAT header-dashboard-height-style_SAT\">\r\n            {/* <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\" className=\"back-icon-div-allignemnt\">\r\n              <div class=\"back-icon-circle-style\">\r\n                <Link to = \"/collaboration-shareDiscussIdeas\">\r\n                  <Tooltip title=\"Dashboard\" placement=\"top\" TransitionProps={{ timeout: 600 }}>\r\n                    <MDBIcon icon=\"chevron-circle-left\" size=\"2x\" className=\"back-arrow-icon pt-1\"/>\r\n                  </Tooltip>\r\n                </Link>\r\n                </div>\r\n            </Col> */}\r\n\r\n            <Col\r\n              xs=\"10\"\r\n              sm=\"10\"\r\n              md=\"10\"\r\n              lg=\"10\"\r\n              xl=\"10\"\r\n              xxl=\"10\"\r\n              className=\"align-left header-title-style_SAT\"\r\n            >\r\n              {/* <label class=\"header-heading-label-style\">Menu</label> */}\r\n              <img\r\n                className=\"forgetheader-profile-image-style\"\r\n                src={HeaderLogo}\r\n                alt=\"\"\r\n              />\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 pt-1\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <div class=\"pt-5\">\r\n          <DashboardMiddleMainMenu></DashboardMiddleMainMenu>\r\n        </div>\r\n        <div>\r\n          <Footer></Footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-citizenServices\\Dashboard-citizenServices.js",["601","602","603","604","605","606","607","608","609","610","611"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Header from \"../Dashboard-header\";\r\nimport CollaborationHeadings from \"../../jsonFiles/CollaborationTabInfoJson/collaborationtabinfo\";\r\nimport DashboardIcons from \"../../jsonFiles/CollaborationTabInfoJson/collaborationtabinfo\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"../Footer\";\r\nimport AppLink from \"react-native-app-link\";\r\nimport { Linking, Platform } from \"react-native\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./Dashboard-citizenServices.css\";\r\nimport CollabBannerImg from \"../../assets/submenu banners/Citizen Services.svg\";\r\nimport citizenServices2 from \"../../assets/settins3.png\";\r\n\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../assets/defaultprofile.png\";\r\nimport HeaderLogo from \"../../assets/HeaderLogo.png\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nclass DashboardCitizenServices extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collabIcons: CollaborationHeadings.CitizenServicesIcons,\r\n      dashIcons: DashboardIcons.DashIcons,\r\n      collabTitleImg: CollaborationHeadings.Collaboration_Title_Image,\r\n    };\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.openMenu = this.openMenu.bind(this);\r\n    this.menuClose = this.menuClose.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n\r\n    // this.AppClick = this.AppClick.bind(this);\r\n  }\r\n\r\n  AppClick = (url, appName, appStoreId, appStoreLocale, playStoreId) => {\r\n    // check if appStoreLocale is set\r\n\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login to use the service\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      if (url != null && url != \"\") {\r\n        Linking.openURL(url);\r\n      } else if (playStoreId != null && playStoreId != \"\") {\r\n        Linking.openURL(\r\n          `https://play.google.com/store/apps/details?id=${playStoreId}`\r\n        );\r\n      } else {\r\n        const locale =\r\n          typeof appStoreLocale === \"undefined\" ? \"us\" : appStoreLocale;\r\n        Linking.openURL(\r\n          `https://apps.apple.com/${locale}/app/${appName}/id${appStoreId}`\r\n        );\r\n      }\r\n    }\r\n\r\n    //  const locale = typeof appStoreLocale === 'undefined'\r\n    //  ? 'us'\r\n    //  : appStoreLocale;\r\n    // Linking.openURL(url).catch(err => {\r\n    //   if (err.code === 'EUNSPECIFIED') {\r\n    //     if (Platform.OS === 'ios') {\r\n    //       Linking.openURL(`https://apps.apple.com/${locale}/app/${appName}/id${appStoreId}`);\r\n    //     } else {\r\n    //       Linking.openURL(\r\n    //         `https://play.google.com/store/apps/details?id=${playStoreId}`\r\n    //       );\r\n    //     }\r\n    //   } else {\r\n    //    // throw new Error(`Could not open ${appName}. ${err.toString()}`);\r\n    //    if (Platform.OS === 'ios') {\r\n    //     Linking.openURL(`https://apps.apple.com/${locale}/app/${appName}/id${appStoreId}`);\r\n    //   } else {\r\n    //     Linking.openURL(\r\n    //       `https://play.google.com/store/apps/details?id=${playStoreId}`\r\n    //     );\r\n    //   }\r\n    //   }\r\n    // });\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.body.style = \"background-image: url();\";\r\n    document.body.style = \"background: #F9F9F9\";\r\n  }\r\n\r\n  EmergencyServices() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login to access this service.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/emergencyServices\");\r\n    }\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    <ToastContainer\r\n      position=\"top-center\"\r\n      autoClose={5000}\r\n      hideProgressBar={false}\r\n      newestOnTop\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n      pauseOnHover={true}\r\n      toastClassName=\"toaster-style\"\r\n    />;\r\n    return (\r\n      <div>\r\n        {/* <Header></Header>\r\n        <Container className=\"header-space\"></Container> */}\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"dashboard-tytle-allign-style_Header\">\r\n            {/* <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n          <Link to='/dashboard'>\r\n            <Tooltip title=\"Dashboard\" placement=\"top\" TransitionProps={{ timeout: 600 }}>\r\n              <HomeOutlinedIcon className=\"header-menu-icon-style\" fontSize=\"medium\"/>\r\n            </Tooltip>\r\n              </Link>\r\n            </Col> */}\r\n            <Col\r\n              xs=\"10\"\r\n              sm=\"10\"\r\n              md=\"10\"\r\n              lg=\"10\"\r\n              xl=\"10\"\r\n              xxl=\"10\"\r\n              className=\"align-left dashboard-header-title-style_SAT pr-0\"\r\n            >\r\n              {/* <label class=\"header-heading-label-style\">{DashboardHeadings.Dashboard_HEADING_SAT}</label> */}\r\n              <img\r\n                className=\"forgetheader-profile-image-style\"\r\n                src={HeaderLogo}\r\n                alt=\"\"\r\n              />\r\n            </Col>\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 pt-1\"\r\n            >\r\n              {/* <MenuIcon className=\"header-menu-icon-style\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={this.openMenu}/>\r\n              <Menu\r\n                className=\"menu-box-style\"\r\n                // id=\"simple-menu\"\r\n                anchorEl={this.state.eventTarget}\r\n                // keepMounted\r\n                open={this.openMenu}\r\n                onClose={this.menuClose}\r\n              >\r\n              <MenuItem onClick={this.menuClose}>Profile</MenuItem>\r\n              <MenuItem onClick={this.menuClose}>Logout</MenuItem>\r\n              </Menu> */}\r\n              <Dropdown menuAlign=\"right\" className=\"dropdown-profile-style\">\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n           <Row style={{textAlign:'center'}}>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[0].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[0].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[1].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[1].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[2].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[2].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[3].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2 selected-tab-from-dashboard\"\r\n                        src={this.state.dashIcons[3].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[4].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[4].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                </Row>\r\n        </Container>\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"8\"\r\n            xl=\"8\"\r\n            xxl=\"8\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            <Container fluid className=\"collaboration-main-div\">\r\n              <div class=\"body-style-height\">\r\n                {/* <Row>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[0].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[0].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[1].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[1].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[2].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[2].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[3].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2 selected-tab-from-dashboard\"\r\n                        src={this.state.dashIcons[3].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[4].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[4].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                </Row> */}\r\n              </div>\r\n\r\n              <div class=\"inner-container-style\">\r\n                <Row>\r\n                  {/* <Col  xs=\"0\" sm=\"0\" md=\"0\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col> */}\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"12\"\r\n                    xl=\"12\"\r\n                    xxl=\"12\"\r\n                    className=\"banner-submenu-style-header2\"\r\n                  >\r\n                    <img\r\n                      src={CollabBannerImg}\r\n                      alt=\"\"\r\n                      class=\"banner-image-style\"\r\n                    />\r\n                  </Col>\r\n                  {/* <Col  xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col> */}\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n                  <Col\r\n                    xs=\"2\"\r\n                    sm=\"2\"\r\n                    md=\"2\"\r\n                    lg=\"2\"\r\n                    xl=\"2\"\r\n                    xxl=\"2\"\r\n                    className=\"heading-image-style\"\r\n                  >\r\n                    <img\r\n                      alt=\"\"\r\n                      className=\"collabImageStyle\"\r\n                      src={citizenServices2}\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"10\" sm=\"10\" md=\"8\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                    <label class=\"collab-title-text\">Citizen Services</label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n                </Row>\r\n\r\n                <hr className=\"collab-hr pb-2\"></hr>\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    {/* <Link to=\"/emergencyServices\"> */}\r\n                    <Card\r\n                      className=\"collaboration-card grab\"\r\n                      onClick={() => this.EmergencyServices()}\r\n                    >\r\n                      <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                        <Row>\r\n                          <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                            {\" \"}\r\n                            <Card.Img\r\n                              className=\"collaborationImageStyle\"\r\n                              src={this.state.collabIcons.Cards[7].Image}\r\n                            />\r\n                          </Col>\r\n                          <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                            <Card.Title className=\"cardIconsTitleCollab\">\r\n                              {this.state.collabIcons.Cards[7].Title}\r\n                            </Card.Title>\r\n                          </Col>\r\n                        </Row>\r\n                      </Card.Body>\r\n                    </Card>\r\n                    {/* </Link> */}\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Card\r\n                      className=\"collaboration-card grab\"\r\n                      onClick={() =>\r\n                        this.AppClick(\r\n                          `https://tax.lsgkerala.gov.in/epayment/mainPage.php`,\r\n                          null,\r\n                          null,\r\n                          null,\r\n                          null\r\n                        )\r\n                      }\r\n                    >\r\n                      <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                        <Row>\r\n                          <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                            {\" \"}\r\n                            <Card.Img\r\n                              className=\"collaborationImageStyle\"\r\n                              src={this.state.collabIcons.Cards[0].Image}\r\n                            />\r\n                          </Col>\r\n                          <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                            <Card.Title className=\"cardIconsTitleCollab\">\r\n                              {this.state.collabIcons.Cards[0].Title}\r\n                            </Card.Title>\r\n                          </Col>\r\n                        </Row>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Card\r\n                      className=\"collaboration-card grab\"\r\n                      onClick={() =>\r\n                        this.AppClick(\r\n                          `https://kwa.kerala.gov.in/en/service/new-water-connection/`,\r\n                          null,\r\n                          null,\r\n                          null,\r\n                          null\r\n                        )\r\n                      }\r\n                    >\r\n                      <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                        <Row>\r\n                          <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                            {\" \"}\r\n                            <Card.Img\r\n                              className=\"collaborationImageStyle\"\r\n                              src={this.state.collabIcons.Cards[1].Image}\r\n                            />\r\n                          </Col>\r\n                          <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                            <Card.Title className=\"cardIconsTitleCollab\">\r\n                              {this.state.collabIcons.Cards[1].Title}\r\n                            </Card.Title>\r\n                          </Col>\r\n                        </Row>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n\r\n                                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Card\r\n                      className=\"collaboration-card grab\"\r\n                      onClick={() =>\r\n                        this.AppClick(\r\n                          `https://wss.kseb.in/selfservices/ncHome`,\r\n                          null,\r\n                          null,\r\n                          null,\r\n                          null\r\n                        )\r\n                      }\r\n                    >\r\n                      <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                        <Row>\r\n                          <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                            {\" \"}\r\n                            <Card.Img\r\n                              className=\"collaborationImageStyle\"\r\n                              src={this.state.collabIcons.Cards[9].Image}\r\n                            />\r\n                          </Col>\r\n                          <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                            <Card.Title className=\"cardIconsTitleCollab\">\r\n                              {this.state.collabIcons.Cards[9].Title}\r\n                            </Card.Title>\r\n                          </Col>\r\n                        </Row>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Card\r\n                      className=\"collaboration-card grab\"\r\n                      onClick={() =>\r\n                        this.AppClick(\r\n                          `https://cr.lsgkerala.gov.in/Content.php?id=B`,\r\n                          null,\r\n                          null,\r\n                          null,\r\n                          null\r\n                        )\r\n                      }\r\n                    >\r\n                      <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                        <Row>\r\n                          <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                            {\" \"}\r\n                            <Card.Img\r\n                              className=\"collaborationImageStyle\"\r\n                              src={this.state.collabIcons.Cards[2].Image}\r\n                            />\r\n                          </Col>\r\n                          <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                            <Card.Title className=\"cardIconsTitleCollab\">\r\n                              {this.state.collabIcons.Cards[2].Title}\r\n                            </Card.Title>\r\n                          </Col>\r\n                        </Row>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Card\r\n                      className=\"collaboration-card grab\"\r\n                      onClick={() =>\r\n                        this.AppClick(\r\n                          `https://cr.lsgkerala.gov.in/Content.php?id=D`,\r\n                          null,\r\n                          null,\r\n                          null,\r\n                          null\r\n                        )\r\n                      }\r\n                    >\r\n                      <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                        <Row>\r\n                          <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                            {\" \"}\r\n                            <Card.Img\r\n                              className=\"collaborationImageStyle\"\r\n                              src={this.state.collabIcons.Cards[3].Image}\r\n                            />\r\n                          </Col>\r\n                          <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                            <Card.Title className=\"cardIconsTitleCollab\">\r\n                              {this.state.collabIcons.Cards[3].Title}\r\n                            </Card.Title>\r\n                          </Col>\r\n                        </Row>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Card\r\n                      className=\"collaboration-card grab\"\r\n                      onClick={() =>\r\n                        this.AppClick(\r\n                          `https://cr.lsgkerala.gov.in/Content.php?id=B`,\r\n                          null,\r\n                          null,\r\n                          null,\r\n                          null\r\n                        )\r\n                      }\r\n                    >\r\n                      <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                        <Row>\r\n                          <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                            {\" \"}\r\n                            <Card.Img\r\n                              className=\"collaborationImageStyle\"\r\n                              src={this.state.collabIcons.Cards[4].Image}\r\n                            />\r\n                          </Col>\r\n                          <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                            <Card.Title className=\"cardIconsTitleCollab\">\r\n                              {this.state.collabIcons.Cards[4].Title}\r\n                            </Card.Title>\r\n                          </Col>\r\n                        </Row>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n\r\n                 <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Card\r\n                      className=\"collaboration-card grab\"\r\n                      onClick={() =>\r\n                        this.AppClick(\r\n                          null,\r\n                          null,\r\n                          null,\r\n                          null,\r\n                          `com.smart.trivandrum&hl=en_IN&gl=US`\r\n                        )\r\n                      }\r\n                    >\r\n                      <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                        <Row>\r\n                          <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                            {\" \"}\r\n                            <Card.Img\r\n                              className=\"collaborationImageStyle\"\r\n                              src={this.state.collabIcons.Cards[8].Image}\r\n                            />\r\n                          </Col>\r\n                          <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                            <Card.Title className=\"cardIconsTitleCollab\">\r\n                              {this.state.collabIcons.Cards[8].Title}\r\n                            </Card.Title>\r\n                          </Col>\r\n                        </Row>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n\r\n\r\n              </div>\r\n            </Container>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardCitizenServices;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Login\\Login.js",["612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport LoginHeadings from \"../../jsonFiles/UserInfoJson/userLogin\";\r\nimport \"./Login.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport PhoneOutlinedIcon from \"@material-ui/icons/PhoneOutlined\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport fb_img from \"../../assets/fb.png\";\r\nimport tweet_img from \"../../assets/tweet.png\";\r\nimport googlePlus_img from \"../../assets/gplus.png\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Background from \"../../assets/curvebg2.png\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport { loadModules } from \"esri-loader\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport HeaderLogo from \"../../assets/HeaderLogo.png\";\r\n// import { GoogleLogin } from 'react-google-login';\r\n// import FacebookLogin from 'react-facebook-login';\r\nimport { GoogleAuth } from \"@codetrix-studio/capacitor-google-auth\";\r\nimport { FacebookLogin } from \"@capacitor-community/facebook-login\";\r\n\r\nconst options = {\r\n  url: \"https://js.arcgis.com/4.20/\",\r\n};\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      emailValue_SAT: \"\",\r\n      emailValidate_SAT: false,\r\n      phone_numberValue_SAT: \"\",\r\n      phone_numberValidate_SAT: false,\r\n      passValue_SAT: \"\",\r\n      keepMeLogInValue_SAT: false,\r\n      passwordValidate_SAT: false,\r\n      APIResponse: \"\",\r\n      SubmitAlert: false,\r\n      dialogBoxStatus: false,\r\n      accountIsDisable: false,\r\n      emptyFields: false,\r\n      passwordVisible: false,\r\n    };\r\n    this.emailValidate_SAT = this.emailValidate_SAT.bind(this);\r\n    this.phone_numberValidate_SAT = this.phone_numberValidate_SAT.bind(this);\r\n    this.passwordValidate_SAT = this.passwordValidate_SAT.bind(this);\r\n    this.submit_SAT = this.submit_SAT.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.CheckboxToggle_SAT = this.CheckboxToggle_SAT.bind(this);\r\n    this.passwordVisible = this.passwordVisible.bind(this);\r\n    this.socialLogin = this.socialLogin.bind(this);\r\n  }\r\n\r\n  // componentDidUpdate(){\r\n  //   var lat,long;\r\n  //   navigator.geolocation.getCurrentPosition(function(position) {\r\n  //     lat=position.coords.latitude;\r\n  //     long=position.coords.longitude;\r\n  //     sessionStorage.setItem(\"currentLatitude\", lat);\r\n  //     sessionStorage.setItem(\"currentLongitude\", long);\r\n  //   });\r\n  // }\r\n\r\n  async signIn() {\r\n    // GoogleAuth.init();\r\n    const result = await GoogleAuth.signIn();\r\n    // console.log(result);\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        // \"email\": this.state.emailValue_SAT,\r\n        email: result.email,\r\n        familyName: result.familyName,\r\n        givenName: result.givenName,\r\n        Id: result.id,\r\n        imageUrl: result.imageUrl,\r\n        name: result.name,\r\n        login_type: \"google\",\r\n        longitude: sessionStorage.getItem(\"currentLongitude\"),\r\n        latitude: sessionStorage.getItem(\"currentLatitude\"),\r\n        address: sessionStorage.getItem(\"currentAddress\")\r\n      }),\r\n      // body: response.profileObj,\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/googlelogin/googlelogin\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"this.state.APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.message === \"Logged in successfully\") {\r\n          var JsonData = this.state.APIResponse.data;\r\n          if (this.state.keepMeLogInValue_SAT) {\r\n            sessionStorage.setItem(\"email\", JsonData.email);\r\n          }\r\n          sessionStorage.setItem(\"user_id\", JsonData.user_id);\r\n          sessionStorage.setItem(\"ward_id\", JsonData.ward_id);\r\n          sessionStorage.setItem(\"token\", JsonData.token);\r\n          sessionStorage.setItem(\"login_type\", JsonData.login_type);\r\n          sessionStorage.setItem(\"yourProfileImage\", JsonData.image);\r\n          if(!sessionStorage.getItem(\"yourProfileImage\") || sessionStorage.getItem(\"yourProfileImage\").indexOf('https')!== -1 || sessionStorage.getItem(\"yourProfileImage\")==\"\"){\r\n            console.log(\"https present\");\r\n          }\r\n          else{\r\n            console.log(\"https absent\");\r\n            sessionStorage.setItem(\r\n              \"yourProfileImage\",\"https://scity.gmmspl.com:3000/\" +\r\n              sessionStorage.getItem(\"yourProfileImage\")\r\n            );\r\n          }\r\n\r\n\r\n          sessionStorage.setItem(\"keepLoginFlag\", JsonData.user_id);\r\n          sessionStorage.setItem(\r\n            \"is_profile_complete\",\r\n            JsonData.is_profile_complete\r\n          );\r\n\r\n          if (JsonData.is_profile_complete === false) {\r\n            // Profile\r\n            this.props.history.push(\"/ProfileFirstLogin\");\r\n          } else {\r\n            this.props.history.push(\"/Dashboard\");\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  async facebooksignIn() {\r\n    const FACEBOOK_PERMISSIONS = [\"public_profile\", \"email\"];\r\n    const result = await FacebookLogin.login({\r\n      permissions: FACEBOOK_PERMISSIONS,\r\n    });\r\n    console.log(\"Result = \", result);\r\n    const response = await fetch(\r\n      `https://graph.facebook.com/v12.0/me?fields=id,name,first_name,last_name,email,picture&access_token=${result.accessToken.token}`\r\n    );\r\n    const myJson = await response.json();\r\n    console.log(myJson);\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        // \"email\": this.state.emailValue_SAT,\r\n        email: myJson.email,\r\n        familyName: myJson.last_name,\r\n        givenName: myJson.first_name,\r\n        Id: myJson.id,\r\n        imageUrl: myJson.picture.data.url,\r\n        name: myJson.name,\r\n        login_type: \"facebook\",\r\n        longitude: sessionStorage.getItem(\"currentLongitude\"),\r\n        latitude: sessionStorage.getItem(\"currentLatitude\"),\r\n        address: sessionStorage.getItem(\"currentAddress\")\r\n      }),\r\n      // body: response.profileObj,\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/googlelogin/googlelogin\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"this.state.APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.message === \"Logged in successfully\") {\r\n          var JsonData = this.state.APIResponse.data;\r\n          console.log(\r\n            \"my facebook login credential :\" + JSON.stringify(JsonData)\r\n          );\r\n          if (this.state.keepMeLogInValue_SAT) {\r\n            sessionStorage.setItem(\"email\", JsonData.email);\r\n          }\r\n          sessionStorage.setItem(\"user_id\", JsonData.user_id);\r\n          sessionStorage.setItem(\"ward_id\", JsonData.ward_id);\r\n          sessionStorage.setItem(\"token\", JsonData.token);\r\n          sessionStorage.setItem(\"login_type\", JsonData.login_type);\r\n          sessionStorage.setItem(\"yourProfileImage\", JsonData.image);\r\n          if(!sessionStorage.getItem(\"yourProfileImage\")|| sessionStorage.getItem(\"yourProfileImage\").indexOf('https')!== -1 || sessionStorage.getItem(\"yourProfileImage\")==\"\"){\r\n            console.log(\"https present\");\r\n          }\r\n          else{\r\n            console.log(\"https absent\");\r\n            sessionStorage.setItem(\r\n              \"yourProfileImage\",\"https://scity.gmmspl.com:3000/\" +\r\n              sessionStorage.getItem(\"yourProfileImage\")\r\n            );\r\n          }\r\n          sessionStorage.setItem(\"keepLoginFlag\", JsonData.user_id);\r\n          sessionStorage.setItem(\r\n            \"is_profile_complete\",\r\n            JsonData.is_profile_complete\r\n          );\r\n\r\n          if (JsonData.is_profile_complete === false) {\r\n            // Profile\r\n            console.log(JSON.stringify(sessionStorage));\r\n            this.props.history.push(\"/ProfileFirstLogin\");\r\n          } else {\r\n            this.props.history.push(\"/Dashboard\");\r\n          }\r\n        } else if (\r\n          this.state.APIResponse.message ===\r\n          \"Please update your email id in your Facebook account to login. Or please login using your Gmail ID or register as new user.\"\r\n        ) {\r\n          toast.error(\r\n            \"Please update your email id in your Facebook account to login. Or please login using your Gmail ID or register as new user.\",\r\n            {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    var latitude, longitude;\r\n    document.body.style = \"background: none\";\r\n\r\n    navigator.geolocation.getCurrentPosition(function (position) {\r\n      latitude = position.coords.latitude;\r\n      longitude = position.coords.longitude;\r\n      sessionStorage.setItem(\"currentLatitude\", latitude);\r\n      sessionStorage.setItem(\"currentLongitude\", longitude);\r\n    });\r\n\r\n    // document.body.style = 'background-image: url(../../assets/loginBg.png);';\r\n    loadModules(\r\n      [\r\n        \"esri/config\",\r\n        \"esri/Map\",\r\n        \"esri/views/MapView\",\r\n        \"esri/tasks/Locator\",\r\n        \"esri/widgets/Locate\",\r\n        \"esri/widgets/Search\",\r\n        \"esri/Graphic\",\r\n        \"esri/layers/GraphicsLayer\",\r\n        \"esri/geometry/Point\",\r\n        \"esri/symbols/WebStyleSymbol\",\r\n        \"esri/rest/locator\",\r\n      ],\r\n      options\r\n    ).then(\r\n      ([\r\n        esriConfig,\r\n        Map,\r\n        MapView,\r\n        Locator,\r\n        Locate,\r\n        Search,\r\n        Graphic,\r\n        GraphicsLayer,\r\n        Point,\r\n        WebStyleSymbol,\r\n        locator,\r\n      ]) => {\r\n        esriConfig.apiKey =\r\n          \"AAPKa808b66b329d4c20bedf21c30bfea58dkc4s6BDpyyhENXyDlewV2OAkuxnAGDz3LgnOk9Px1LWQBQNG3giBD5f5hX7aRB2R\";\r\n\r\n        const point = {\r\n          //Create a point\r\n          location: [longitude, latitude],\r\n        };\r\n\r\n        const locatorUrl =\r\n          \"https://geocode-api.arcgis.com/arcgis/rest/services/World/GeocodeServer\";\r\n\r\n        locator\r\n          .locationToAddress(locatorUrl, point)\r\n          .then((response) => {\r\n            // If an address is successfully found, show it in the popup's content\r\n            sessionStorage.setItem(\"currentAddress\", response.address);\r\n            sessionStorage.setItem(\"compliantLocation\", response.address);\r\n            sessionStorage.setItem(\"incidentLocation\", response.address);\r\n            sessionStorage.setItem(\"ideasLocation\", response.address);\r\n            sessionStorage.setItem(\"volunterLocation\", response.address);\r\n          })\r\n          .catch(() => {\r\n            navigator.geolocation.getCurrentPosition(function (position) {\r\n              latitude = position.coords.latitude;\r\n              longitude = position.coords.longitude;\r\n              sessionStorage.setItem(\"currentLatitude\", latitude);\r\n              sessionStorage.setItem(\"currentLongitude\", longitude);\r\n\r\n              const point = {\r\n                //Create a point\r\n                location: [longitude, latitude],\r\n              };\r\n\r\n              locator.locationToAddress(locatorUrl, point).then((response) => {\r\n                // If an address is successfully found, show it in the popup's content\r\n                sessionStorage.setItem(\"currentAddress\", response.address);\r\n                sessionStorage.setItem(\"compliantLocation\", response.address);\r\n                sessionStorage.setItem(\"incidentLocation\", response.address);\r\n                sessionStorage.setItem(\"ideasLocation\", response.address);\r\n                sessionStorage.setItem(\"volunterLocation\", response.address);\r\n              });\r\n            });\r\n\r\n            // toast.error('Failed to fetch location', {\r\n            //   position: \"top-center\",\r\n            //     autoClose: 3000,\r\n            //     hideProgressBar: false,\r\n            //     closeOnClick: true,\r\n            //     pauseOnHover: true,\r\n            //     draggable: true,\r\n            //     progress: undefined,\r\n            //     theme: \"light\",\r\n            //   });\r\n            // If the promise fails and no result is found, show a generic message\r\n            //  view.popup.content = \"No address was found for this location\";\r\n\r\n            //   sessionStorage.setItem(\"currentAddress\", \"No address was found for this location\");\r\n          });\r\n      }\r\n    );\r\n\r\n    var KeepMeLogIn = sessionStorage.getItem(\"keepLoginFlag\");\r\n    if (KeepMeLogIn === \"true\") {\r\n      this.props.history.push(\"/Dashboard\");\r\n    }\r\n  }\r\n\r\n  socialLogin() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n    fetch(\"https://scity.gmmspl.com:3000/google\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // if (this.state.APIResponse.status === true) {\r\n        //   var JsonDate = this.state.APIResponse.data;\r\n        //   this.setState({\r\n        //     shareIcons: JsonDate\r\n        //   })\r\n        // }\r\n      });\r\n  }\r\n\r\n  emailValidate_SAT = (e) => {\r\n    var email = e.target.value.trim();\r\n    if (email != null || email !== \"\") {\r\n      this.setState({\r\n        emailValidate_SAT: true,\r\n        emailValue_SAT: email,\r\n      });\r\n    }\r\n  };\r\n\r\n  phone_numberValidate_SAT = (e) => {\r\n    var phone_number = e.target.value.trim();\r\n    phone_number = phone_number.slice(0, 10);\r\n    if (phone_number != null || phone_number !== \"\") {\r\n      this.setState({\r\n        phone_numberValue_SAT: phone_number,\r\n        phone_numberValidate_SAT: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        phone_numberValue_SAT: phone_number,\r\n        phone_numberValidate_SAT: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  passwordValidate_SAT = (e) => {\r\n    var passwordCurrent_SAT = e.target.value;\r\n    if (passwordCurrent_SAT != null || passwordCurrent_SAT != \"\") {\r\n      this.setState({\r\n        passValue_SAT: passwordCurrent_SAT,\r\n        passwordValidate_SAT: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        passValue_SAT: passwordCurrent_SAT,\r\n        passwordValidate_SAT: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  CheckboxToggle_SAT = (e) => {\r\n    if (this.state.keepMeLogInValue_SAT == false) {\r\n      this.setState({\r\n        keepMeLogInValue_SAT: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        keepMeLogInValue_SAT: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  passwordVisible = (e) => {\r\n    if (this.state.passwordVisible == false) {\r\n      this.setState({\r\n        passwordVisible: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        passwordVisible: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  LoginSucessToasterClose() {\r\n    this.props.history.push(\"/Dashboard\");\r\n  }\r\n\r\n  submit_SAT() {\r\n    // console.log(this.state.keepMeLogInValue_SAT);\r\n    if (sessionStorage.getItem(\"phonenumber\")) {\r\n      // this.state.emailValue_SAT = sessionStorage.getItem(\"email\");\r\n      this.state.phone_numberValue_SAT = sessionStorage.getItem(\"phonenumber\");\r\n      this.state.passValue_SAT = sessionStorage.getItem(\"password\");\r\n    }\r\n    if (this.state.phone_numberValue_SAT && this.state.passwordValidate_SAT) {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          // \"email\": this.state.emailValue_SAT,\r\n          phonenumber: this.state.phone_numberValue_SAT,\r\n          password: this.state.passValue_SAT,\r\n          address: sessionStorage.getItem(\"currentAddress\"),\r\n          longitude: sessionStorage.getItem(\"currentLongitude\"),\r\n          latitude: sessionStorage.getItem(\"currentLatitude\"),\r\n        }),\r\n      };\r\n\r\n      // fetch('https://scity.gmmspl.com:3000/smartcity/login', requestOptions)\r\n      fetch(\"https://scity.gmmspl.com:3000/smartcity/logintemp\", requestOptions)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          if (this.state.APIResponse.message === \"Logged in successfully\") {\r\n            if (this.state.keepMeLogInValue_SAT) {\r\n              sessionStorage.setItem(\"email\", this.state.emailValue_SAT);\r\n              sessionStorage.setItem(\"password\", this.state.passValue_SAT);\r\n            }\r\n            sessionStorage.setItem(\r\n              \"user_id\",\r\n              this.state.APIResponse.data.user_id\r\n            );\r\n            sessionStorage.setItem(\r\n              \"ward_id\",\r\n              this.state.APIResponse.data.ward_id\r\n            );\r\n            sessionStorage.setItem(\"token\", this.state.APIResponse.data.token);\r\n            sessionStorage.setItem(\r\n              \"yourProfileImage\",\r\n              this.state.APIResponse.data.image\r\n            );\r\n            if(!sessionStorage.getItem(\"yourProfileImage\") || sessionStorage.getItem(\"yourProfileImage\").indexOf('https')!== -1 || sessionStorage.getItem(\"yourProfileImage\")==\"\"){\r\n              console.log(\"https present\");\r\n            }\r\n            else{\r\n              console.log(\"https absent\");\r\n              sessionStorage.setItem(\r\n                \"yourProfileImage\",\"https://scity.gmmspl.com:3000/\" +\r\n                sessionStorage.getItem(\"yourProfileImage\")\r\n              );\r\n            }\r\n            sessionStorage.setItem(\r\n              \"keepLoginFlag\",\r\n              this.state.keepMeLogInValue_SAT\r\n            );\r\n            sessionStorage.setItem(\r\n              \"login_type\",\r\n              this.state.APIResponse.data.login_type\r\n            );\r\n            sessionStorage.setItem(\r\n              \"is_profile_complete\",\r\n              this.state.APIResponse.data.is_profile_complete\r\n            );\r\n            // toast.success('Login Successfull', {\r\n            //   position: \"top-center\",\r\n            //   autoClose: 3000,\r\n            //   hideProgressBar: false,\r\n            //   closeOnClick: true,\r\n            //   pauseOnHover: true,\r\n            //   draggable: true,\r\n            //   progress: undefined,\r\n            //   theme: \"light\",\r\n            //   onClose: () => this.props.history.push(\"/Dashboard\")\r\n            //   });\r\n            if (this.state.APIResponse.data.is_profile_complete === false) {\r\n              // Profile\r\n              this.props.history.push(\"/ProfileFirstLogin\");\r\n            } else {\r\n              this.props.history.push(\"/Dashboard\");\r\n            }\r\n          } else if (\r\n            this.state.APIResponse.message ===\r\n            \"Inactive account,please verify mobile number first!!\"\r\n          ) {\r\n            sessionStorage.setItem(\r\n              \"phoneNumber\",\r\n              this.state.phone_numberValue_SAT\r\n            );\r\n            // console.log(\"PhoneNumber\", this.state.APIResponse.data.user_id);\r\n            toast.warn(\"Your account is not activated please verify OTP\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              onClose: () => this.props.history.push(\"/verifyotp\"),\r\n            });\r\n            // this.props.history.push(\"/verifyotp\");\r\n          } else if (\r\n            this.state.APIResponse.message ===\r\n            \"Data Not Found/Account is disable\"\r\n          ) {\r\n            toast.warn(\r\n              \"You are not registered user or your account is deleted, please register again\",\r\n              {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              }\r\n            );\r\n          } else if (\r\n            this.state.APIResponse.message === \"Sorry!! You are not a user!!!\"\r\n          ) {\r\n            toast.warn(\"You are not an authorised user.\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n          } else {\r\n            toast.error(\"Invalid Credentials.\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n          }\r\n        })\r\n        .catch(function () {\r\n          toast.error(\"Server is down. please try again after sometime\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n        });\r\n    } else {\r\n      toast.error(\"Please fill all mandatory fields\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      dialogBoxStatus: false,\r\n      emptyFields: false,\r\n    });\r\n  }\r\n\r\n  responseFacebook = (response) => {\r\n    console.log(response);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        // \"email\": this.state.emailValue_SAT,\r\n        email: response.email,\r\n        imageUrl: response.picture.data.url,\r\n        name: response.name,\r\n        login_type: response.graphDomain,\r\n      }),\r\n      // body: response.profileObj,\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/googlelogin/googlelogin\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        console.log(\"this.state.APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.message === \"Logged in successfully\") {\r\n          var JsonData = this.state.APIResponse.data;\r\n          if (this.state.keepMeLogInValue_SAT) {\r\n            sessionStorage.setItem(\"email\", JsonData.email);\r\n          }\r\n          sessionStorage.setItem(\"user_id\", JsonData.user_id);\r\n          sessionStorage.setItem(\"ward_id\", JsonData.ward_id);\r\n          sessionStorage.setItem(\"token\", JsonData.token);\r\n          sessionStorage.setItem(\"yourProfileImage\", JsonData.image);\r\n          sessionStorage.setItem(\"keepLoginFlag\", JsonData.user_id);\r\n          sessionStorage.setItem(\r\n            \"is_profile_complete\",\r\n            JsonData.is_profile_complete\r\n          );\r\n          sessionStorage.setItem(\"login_type\", JsonData.login_type);\r\n\r\n          if (JsonData.is_profile_complete === false) {\r\n            // Profile\r\n            this.props.history.push(\"/ProfileFirstLogin\");\r\n          } else {\r\n            this.props.history.push(\"/Dashboard\");\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  responseGoogle = (response) => {\r\n    // console.log(response.profileObj);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        // \"email\": this.state.emailValue_SAT,\r\n        email: response.profileObj.email,\r\n        familyName: response.profileObj.familyName,\r\n        givenName: response.profileObj.givenName,\r\n        googleId: response.profileObj.googleId,\r\n        imageUrl: response.profileObj.imageUrl,\r\n        name: response.profileObj.name,\r\n      }),\r\n      // body: response.profileObj,\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/googlelogin/googlelogin\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        console.log(\"this.state.APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.message === \"Logged in successfully\") {\r\n          var JsonData = this.state.APIResponse.data;\r\n          if (this.state.keepMeLogInValue_SAT) {\r\n            sessionStorage.setItem(\"email\", JsonData.email);\r\n          }\r\n          sessionStorage.setItem(\"user_id\", JsonData.user_id);\r\n          sessionStorage.setItem(\"ward_id\", JsonData.ward_id);\r\n          sessionStorage.setItem(\"token\", JsonData.token);\r\n          sessionStorage.setItem(\"login_type\", JsonData.login_type);\r\n          sessionStorage.setItem(\"yourProfileImage\", JsonData.image);\r\n          sessionStorage.setItem(\"keepLoginFlag\", JsonData.user_id);\r\n          sessionStorage.setItem(\r\n            \"is_profile_complete\",\r\n            JsonData.is_profile_complete\r\n          );\r\n\r\n          if (JsonData.is_profile_complete === false) {\r\n            // Profile\r\n            this.props.history.push(\"/ProfileFirstLogin\");\r\n          } else {\r\n            this.props.history.push(\"/Dashboard\");\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  responseGoogleFailed() {\r\n    // toast.error('Login Failed, please try again', {\r\n    //   position: \"top-center\",\r\n    //   autoClose: 3000,\r\n    //   hideProgressBar: false,\r\n    //   closeOnClick: true,\r\n    //   pauseOnHover: true,\r\n    //   draggable: true,\r\n    //   progress: undefined,\r\n    //   theme: \"light\",\r\n    //   });\r\n  }\r\n\r\n  render() {\r\n    const styles = (theme) => ({\r\n      asterisk: {\r\n        color: \"red\",\r\n      },\r\n    });\r\n\r\n    return (\r\n      <div class=\"pageImage-style\">\r\n        <Container className=\"bgImage-style\">\r\n          <Row>\r\n            <Col xs=\"0\" sm=\"0\" md=\"4\" lg=\"4\" xl=\"4\" xxl=\"4\"></Col>\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\">\r\n              <Row className=\"login-title-style-row_SAT\">\r\n                <Col xs=\"1\" sm=\"1\" md=\"4\" lg=\"4\" xl=\"4\" xxl=\"4\"></Col>\r\n                <Col\r\n                  xs=\"10\"\r\n                  sm=\"10\"\r\n                  md=\"4\"\r\n                  lg=\"4\"\r\n                  xl=\"4\"\r\n                  xxl=\"4\"\r\n                  className=\"p-5\"\r\n                >\r\n                  {/* <h2 class=\"login-title-style_SAT\">{LoginHeadings.Login_HEADING_SAT}</h2> */}\r\n                  <img\r\n                    className=\"forgetheader-profile-image-style\"\r\n                    src={HeaderLogo}\r\n                    alt=\"\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"1\" sm=\"1\" md=\"4\" lg=\"4\" xl=\"4\" xxl=\"4\"></Col>\r\n              </Row>\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"4\" lg=\"4\" xl=\"4\" xxl=\"4\"></Col>\r\n          </Row>\r\n          <div class=\"content-container\">\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col\r\n                xs=\"12\"\r\n                sm=\"12\"\r\n                md=\"12\"\r\n                lg=\"6\"\r\n                xl=\"6\"\r\n                xxl=\"6\"\r\n                className=\"login-welcome-text-style\"\r\n              >\r\n                <label>{LoginHeadings.Login_WELCOME_SAT}</label>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n            <Row className=\"pb-3\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col\r\n                xs=\"12\"\r\n                sm=\"12\"\r\n                md=\"12\"\r\n                lg=\"6\"\r\n                xl=\"6\"\r\n                xxl=\"6\"\r\n                className=\"login-text-message-style\"\r\n              >\r\n                <label>{LoginHeadings.Login_MESSAGE_SAT}</label>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n            <Row className=\"pt-3\" >\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <PhoneOutlinedIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-field-width-style\" >\r\n                    <TextField\r\n                      type=\"number\"\r\n                      inputmode=\"numeric\"\r\n                      id=\"input-with-icon-grid\"\r\n                      maxLength=\"10\"\r\n                      pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{3}\"\r\n                      label=\"Phone Number\"\r\n                      value={this.state.value}\r\n                      onChange={this.phone_numberValidate_SAT}\r\n                      onInput={(e) =>\r\n                        (e.target.value = e.target.value.slice(0, 10))\r\n                      }\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n            <Row className=\"pt-3\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <LockOutlinedIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-password-field-width-style\" style={{width:'90%'}}>\r\n                    {!this.state.passwordVisible && (\r\n                      <TextField\r\n                        type=\"password\"\r\n                        id=\"input-with-icon-grid\"\r\n                        label=\"Password\"\r\n                        minlength=\"6\"\r\n                        maxLength=\"15\"\r\n                        value={this.state.passValue_SAT}\r\n                        onChange={this.passwordValidate_SAT}\r\n                        autofocus\r\n                        required\r\n                        InputProps={{\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\" className=\"p-0\">\r\n                              <IconButton>\r\n                                <VisibilityOffIcon\r\n                                  className=\"login-icon-color\"\r\n                                  onClick={this.passwordVisible}\r\n                                />\r\n                              </IconButton>\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    )}\r\n                    {this.state.passwordVisible && (\r\n                      <TextField\r\n                        type=\"text\"\r\n                        id=\"input-with-icon-grid\"\r\n                        label=\"Password\"\r\n                        minlength=\"6\"\r\n                        maxLength=\"15\"\r\n                        value={this.state.passValue_SAT}\r\n                        onChange={this.passwordValidate_SAT}\r\n                        autofocus\r\n                        required\r\n                        InputProps={{\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\" className=\"p-0\">\r\n                              <IconButton>\r\n                                <VisibilityIcon\r\n                                  className=\"login-icon-color\"\r\n                                  onClick={this.passwordVisible}\r\n                                />\r\n                              </IconButton>\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n            <Row className=\"pt-2\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Row className=\"\">\r\n                  <Col\r\n                    xs=\"6\"\r\n                    sm=\"6\"\r\n                    md=\"6\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"pr-0\"\r\n                  >\r\n                    {/* <Checkbox\r\n                  checked={this.state.keepMeLogInValue_SAT}\r\n                  size=\"small\"\r\n                  className=\"login-checkbox-style\"\r\n                  inputProps={{ 'aria-label': 'checkbox with default color' }}\r\n                  onChange={this.CheckboxToggle_SAT}\r\n                />\r\n                <label class=\"keep-me-log-in-style\">Keep me logged in</label> */}\r\n                  </Col>\r\n                  <Col\r\n                    xs=\"6\"\r\n                    sm=\"6\"\r\n                    md=\"6\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"login-forgetPassword-text-style\"\r\n                  >\r\n                    <label>\r\n                      <Link\r\n                        className=\"login-forgetPassword-text-style\"\r\n                        to=\"/forgetPassword\"\r\n                      >\r\n                        {LoginHeadings.Login_FORGOT_PASSWORD_TEXT_SAT}\r\n                      </Link>\r\n                    </label>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n            <Row className=\"pt-3\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col\r\n                xs=\"12\"\r\n                sm=\"12\"\r\n                md=\"12\"\r\n                lg=\"6\"\r\n                xl=\"6\"\r\n                xxl=\"6\"\r\n                className=\"login-text-message-style\"\r\n              >\r\n                <Button\r\n                  className=\"login-button-style\"\r\n                  onClick={this.submit_SAT}\r\n                >\r\n                  {LoginHeadings.Login_BUTTON_SAT}\r\n                </Button>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col\r\n                xs=\"12\"\r\n                sm=\"12\"\r\n                md=\"12\"\r\n                lg=\"6\"\r\n                xl=\"6\"\r\n                xxl=\"6\"\r\n                className=\"Login-option-lable\"\r\n              >\r\n                <label>\r\n                  <strong>OR Login with</strong>\r\n                </label>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Row className=\"bottom-margin-space\">\r\n                  <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\" xl=\"4\"></Col>\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" className=\"pl-0\">\r\n                    <img\r\n                      src={fb_img}\r\n                      alt=\"\"\r\n                      onClick={() => this.facebooksignIn()}\r\n                    />\r\n                    {/* <FacebookLogin\r\n                appId=\"571306887629235\"\r\n                autoLoad={false}\r\n                fields=\"name,email,picture\"\r\n                callback={this.responseFacebook}\r\n                textButton=\"\"\r\n                cssClass=\"fb-btn\"\r\n                // scope=\"public_profile, email, user_birthday\"\r\n                // img src={fb_img}\r\n               /> */}\r\n                  </Col>\r\n                  {/* <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\r\n                    <img src={tweet_img} alt=\"\" />\r\n                  </Col> */}\r\n                  {/* <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" onClick={this.socialLogin}> */}\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\r\n                    <img\r\n                      src={googlePlus_img}\r\n                      alt=\"\"\r\n                      onClick={() => this.signIn()}\r\n                    />\r\n                    {/* <GoogleLogin\r\n              // web\r\n                clientId=\"448458350369-tuppq43aamk97ou2balfnrmgi01ge5ep.apps.googleusercontent.com\"\r\n                // Android\r\n                // clientId=\"448458350369-o72kirdahoov825rtribdulm0jt1h4qa.apps.googleusercontent.com\"\r\n                buttonText=\"\"\r\n                onSuccess={this.responseGoogle}\r\n                onFailure={this.responseGoogleFailed}\r\n                cookiePolicy={'single_host_origin'}\r\n                className=\"google-btn\"\r\n                theme=\"theme\"\r\n              /> */}\r\n                  </Col>\r\n\r\n                  <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\" xl=\"4\"></Col>\r\n                </Row>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n            <Row className=\"pt-4\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Link to=\"/dashboard\">\r\n                  <Button className=\"skip-button-style\">SKIP LOGIN</Button>\r\n                </Link>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n            <Row className=\"login-registration-button-style\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Navbar\r\n                  expand=\"lg\"\r\n                  sticky=\"bottom\"\r\n                  className=\"login-navbar-style\"\r\n                >\r\n                  <Row>\r\n                    <Col className=\"Reg-text-alignment\">\r\n                      <label>\r\n                        <span class=\"Question-reg-login-style\">\r\n                          {LoginHeadings.Login_REGISTRATION_SAT}\r\n                        </span>\r\n                        <Link to=\"/Registration\">\r\n                          <span class=\"register-login-style\">REGISTER</span>\r\n                        </Link>\r\n                      </label>\r\n                    </Col>\r\n                  </Row>\r\n                </Navbar>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n          </div>\r\n          <ToastContainer\r\n            position=\"top-center\"\r\n            autoClose={5000}\r\n            hideProgressBar={false}\r\n            newestOnTop\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover={true}\r\n            toastClassName=\"toaster-style\"\r\n          />\r\n          <Row className=\"last-line-style\"></Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-collaboration\\Dashboard-collaboration.js",["628","629","630","631","632","633"],"import React, { Component } from \"react\";\r\nimport \"./Dashboard-collaboration.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Header from \"../Dashboard-header\";\r\nimport CollaborationHeadings from \"../../jsonFiles/CollaborationTabInfoJson/collaborationtabinfo\";\r\nimport DashboardIcons from \"../../jsonFiles/CollaborationTabInfoJson/collaborationtabinfo\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"../Footer\";\r\nimport CollabBannerImg from \"../../assets/submenu banners/Collaboration.svg\";\r\n\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../assets/defaultprofile.png\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport HeaderLogo from \"../../assets/HeaderLogo.png\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nclass DashboardCollaboration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collabIcons: CollaborationHeadings.CollabIcons,\r\n      dashIcons: DashboardIcons.DashIcons,\r\n      collabTitleImg: CollaborationHeadings.Collaboration_Title_Image,\r\n    };\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.openMenu = this.openMenu.bind(this);\r\n    this.menuClose = this.menuClose.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   document.body.style = 'background: #d6e2e6';\r\n  // }\r\n\r\n  componentDidMount() {\r\n    document.body.style = \"background-image: url();\";\r\n    document.body.style = \"background: #F9F9F9\";\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <Header></Header> */}\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"dashboard-tytle-allign-style_Header\">\r\n            {/* <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n          <Link to='/dashboard'>\r\n            <Tooltip title=\"Dashboard\" placement=\"top\" TransitionProps={{ timeout: 600 }}>\r\n              <HomeOutlinedIcon className=\"header-menu-icon-style\" fontSize=\"medium\"/>\r\n            </Tooltip>\r\n              </Link>\r\n            </Col> */}\r\n            <Col\r\n              xs=\"10\"\r\n              sm=\"10\"\r\n              md=\"10\"\r\n              lg=\"10\"\r\n              xl=\"10\"\r\n              xxl=\"10\"\r\n              className=\"align-left dashboard-header-title-style_SAT pr-0\"\r\n            >\r\n              {/* <label class=\"header-heading-label-style\">{DashboardHeadings.Dashboard_HEADING_SAT}</label> */}\r\n              <img\r\n                className=\"forgetheader-profile-image-style\"\r\n                src={HeaderLogo}\r\n                alt=\"\"\r\n              />\r\n            </Col>\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 pt-1\"\r\n            >\r\n              {/* <MenuIcon className=\"header-menu-icon-style\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={this.openMenu}/>\r\n              <Menu\r\n                className=\"menu-box-style\"\r\n                // id=\"simple-menu\"\r\n                anchorEl={this.state.eventTarget}\r\n                // keepMounted\r\n                open={this.openMenu}\r\n                onClose={this.menuClose}\r\n              >\r\n              <MenuItem onClick={this.menuClose}>Profile</MenuItem>\r\n              <MenuItem onClick={this.menuClose}>Logout</MenuItem>\r\n              </Menu> */}\r\n              <Dropdown menuAlign=\"right\" className=\"dropdown-profile-style\">\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n          \r\n          <Row style={{textAlign:'center'}}>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[0].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2 selected-tab-from-dashboard\"\r\n                        src={this.state.dashIcons[0].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[1].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[1].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[2].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[2].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[3].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[3].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[4].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[4].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                   \r\n                </Row>\r\n               \r\n        </Container>\r\n        {/* <Container className=\"header-space\"></Container> */}\r\n\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"8\"\r\n            xl=\"8\"\r\n            xxl=\"8\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            <Container fluid className=\"collaboration-main-div\">\r\n              <div class=\"body-style-height\">\r\n                \r\n              </div>\r\n\r\n              <div class=\"inner-container-style\">\r\n                <Row>\r\n                  {/* <Col  xs=\"0\" sm=\"0\" md=\"0\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col> */}\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"12\"\r\n                    xl=\"12\"\r\n                    xxl=\"12\"\r\n                    className=\"banner-submenu-style-header2\"\r\n                  >\r\n                    <img\r\n                      src={CollabBannerImg}\r\n                      alt=\"\"\r\n                      class=\"banner-image-style\"\r\n                    />\r\n                  </Col>\r\n                  {/* <Col  xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col> */}\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n                  <Col\r\n                    xs=\"2\"\r\n                    sm=\"2\"\r\n                    md=\"2\"\r\n                    lg=\"2\"\r\n                    xl=\"2\"\r\n                    xxl=\"2\"\r\n                    className=\"heading-image-style\"\r\n                  >\r\n                    <img\r\n                      alt=\"\"\r\n                      className=\"collabImageStyle\"\r\n                      src={this.state.collabTitleImg}\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"10\" sm=\"10\" md=\"8\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                    <label class=\"collab-title-text\">Collaboration</label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n                </Row>\r\n                <hr className=\"collab-hr pb-2\"></hr>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Link to={this.state.collabIcons.Cards[0].NavigateTo}>\r\n                      <Card className=\"collaboration-card\">\r\n                        <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                          <Row className=\"cards-block-align-style\">\r\n                            <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                              {\" \"}\r\n                              <Card.Img\r\n                                className=\"collaborationImageStyle\"\r\n                                src={this.state.collabIcons.Cards[0].Image}\r\n                              />\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"10\"\r\n                              sm=\"10\"\r\n                              md=\"10\"\r\n                              lg=\"10\"\r\n                              xl=\"10\"\r\n                              xxl=\"10\"\r\n                            >\r\n                              <Card.Title className=\"cardIconsTitleCollab\">\r\n                                {this.state.collabIcons.Cards[0].Title}\r\n                              </Card.Title>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Link to={this.state.collabIcons.Cards[1].NavigateTo}>\r\n                      <Card className=\"collaboration-card\">\r\n                        <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                          <Row>\r\n                            <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                              {\" \"}\r\n                              <Card.Img\r\n                                className=\"collaborationImageStyle\"\r\n                                src={this.state.collabIcons.Cards[1].Image}\r\n                              />\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"10\"\r\n                              sm=\"10\"\r\n                              md=\"10\"\r\n                              lg=\"10\"\r\n                              xl=\"10\"\r\n                              xxl=\"10\"\r\n                            >\r\n                              <Card.Title className=\"cardIconsTitleCollab\">\r\n                                {this.state.collabIcons.Cards[1].Title}\r\n                              </Card.Title>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Link to={this.state.collabIcons.Cards[2].NavigateTo}>\r\n                      <Card className=\"collaboration-card\">\r\n                        <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                          <Row>\r\n                            <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                              {\" \"}\r\n                              <Card.Img\r\n                                className=\"collaborationImageStyle\"\r\n                                src={this.state.collabIcons.Cards[2].Image}\r\n                              />\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"10\"\r\n                              sm=\"10\"\r\n                              md=\"10\"\r\n                              lg=\"10\"\r\n                              xl=\"10\"\r\n                              xxl=\"10\"\r\n                            >\r\n                              <Card.Title className=\"cardIconsTitleCollab\">\r\n                                {this.state.collabIcons.Cards[2].Title}\r\n                              </Card.Title>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n              </div>\r\n            </Container>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardCollaboration;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-complaintManagement\\Dashboard-complaintManagement.js",["634","635","636","637","638","639","640","641","642"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Header from \"../Dashboard-header\";\r\nimport Complaint_Management2 from \"../../assets/fileedit3.png\";\r\nimport CollaborationHeadings from \"../../jsonFiles/CollaborationTabInfoJson/collaborationtabinfo\";\r\nimport DashboardIcons from \"../../jsonFiles/CollaborationTabInfoJson/collaborationtabinfo\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"../Footer\";\r\nimport CollabBannerImg from \"../../assets/submenu banners/Complaint Management.svg\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../assets/defaultprofile.png\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport HeaderLogo from \"../../assets/HeaderLogo.png\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nclass DashboardComplaintManagement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collabIcons: CollaborationHeadings.ComplaintManagemnetIcons,\r\n      dashIcons: DashboardIcons.DashIcons,\r\n      collabTitleImg: CollaborationHeadings.Collaboration_Title_Image,\r\n    };\r\n    this.openComplaintForm = this.openComplaintForm.bind(this);\r\n    this.searchComplaintForm = this.searchComplaintForm.bind(this);\r\n    this.statusComplaintForm = this.statusComplaintForm.bind(this);\r\n\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.openMenu = this.openMenu.bind(this);\r\n    this.menuClose = this.menuClose.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.style = \"background-image: url();\";\r\n    document.body.style = \"background: #F9F9F9\";\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  openComplaintForm() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please login to log a complaint.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(this.state.collabIcons.Cards[0].NavigateTo);\r\n    }\r\n  }\r\n\r\n  searchComplaintForm() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login to search complaints.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(this.state.collabIcons.Cards[1].NavigateTo);\r\n    }\r\n  }\r\n\r\n  statusComplaintForm() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login to view status of complaints.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(this.state.collabIcons.Cards[2].NavigateTo);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <Header></Header>\r\n        <Container className=\"header-space\"></Container> */}\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"dashboard-tytle-allign-style_Header\">\r\n            {/* <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n          <Link to='/dashboard'>\r\n            <Tooltip title=\"Dashboard\" placement=\"top\" TransitionProps={{ timeout: 600 }}>\r\n              <HomeOutlinedIcon className=\"header-menu-icon-style\" fontSize=\"medium\"/>\r\n            </Tooltip>\r\n              </Link>\r\n            </Col> */}\r\n            <Col\r\n              xs=\"10\"\r\n              sm=\"10\"\r\n              md=\"10\"\r\n              lg=\"10\"\r\n              xl=\"10\"\r\n              xxl=\"10\"\r\n              className=\"align-left dashboard-header-title-style_SAT pr-0\"\r\n            >\r\n              {/* <label class=\"header-heading-label-style\">{DashboardHeadings.Dashboard_HEADING_SAT}</label> */}\r\n              <img\r\n                className=\"forgetheader-profile-image-style\"\r\n                src={HeaderLogo}\r\n                alt=\"\"\r\n              />\r\n            </Col>\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 pt-1\"\r\n            >\r\n              {/* <MenuIcon className=\"header-menu-icon-style\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={this.openMenu}/>\r\n              <Menu\r\n                className=\"menu-box-style\"\r\n                // id=\"simple-menu\"\r\n                anchorEl={this.state.eventTarget}\r\n                // keepMounted\r\n                open={this.openMenu}\r\n                onClose={this.menuClose}\r\n              >\r\n              <MenuItem onClick={this.menuClose}>Profile</MenuItem>\r\n              <MenuItem onClick={this.menuClose}>Logout</MenuItem>\r\n              </Menu> */}\r\n              <Dropdown menuAlign=\"right\" className=\"dropdown-profile-style\">\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{textAlign:'center'}}>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[0].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[0].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[1].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2 selected-tab-from-dashboard\"\r\n                        src={this.state.dashIcons[1].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[2].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[2].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[3].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[3].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[4].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[4].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                </Row>\r\n        </Container>\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"8\"\r\n            xl=\"8\"\r\n            xxl=\"8\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            <Container fluid className=\"collaboration-main-div\">\r\n              <div class=\"body-style-height\">\r\n                \r\n              </div>\r\n\r\n              <div class=\"inner-container-style\">\r\n                <Row>\r\n                  {/* <Col  xs=\"0\" sm=\"0\" md=\"0\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col> */}\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"12\"\r\n                    xl=\"12\"\r\n                    xxl=\"12\"\r\n                    className=\"banner-submenu-style-header2 \"\r\n                  >\r\n                    <img\r\n                      src={CollabBannerImg}\r\n                      alt=\"\"\r\n                      class=\"banner-image-style\"\r\n                    />\r\n                  </Col>\r\n                  {/* <Col  xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col> */}\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n                  <Col\r\n                    xs=\"2\"\r\n                    sm=\"2\"\r\n                    md=\"2\"\r\n                    lg=\"2\"\r\n                    xl=\"2\"\r\n                    xxl=\"2\"\r\n                    className=\"heading-image-style\"\r\n                  >\r\n                    <img\r\n                      alt=\"\"\r\n                      className=\"collabImageStyle\"\r\n                      src={Complaint_Management2}\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"10\" sm=\"10\" md=\"8\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                    <label class=\"collab-title-text\">\r\n                      Complaint Management\r\n                    </label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n                </Row>\r\n                <hr className=\"collab-hr pb-2\"></hr>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Link onClick={this.openComplaintForm}>\r\n                      <Card className=\"collaboration-card\">\r\n                        <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                          <Row>\r\n                            <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                              {\" \"}\r\n                              <Card.Img\r\n                                className=\"collaborationImageStyle\"\r\n                                src={this.state.collabIcons.Cards[0].Image}\r\n                              />\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"10\"\r\n                              sm=\"10\"\r\n                              md=\"10\"\r\n                              lg=\"10\"\r\n                              xl=\"10\"\r\n                              xxl=\"10\"\r\n                            >\r\n                              <Card.Title className=\"cardIconsTitleCollab\">\r\n                                {this.state.collabIcons.Cards[0].Title}\r\n                              </Card.Title>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Link onClick={this.searchComplaintForm}>\r\n                      <Card className=\"collaboration-card\">\r\n                        <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                          <Row>\r\n                            <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                              {\" \"}\r\n                              <Card.Img\r\n                                className=\"collaborationImageStyle\"\r\n                                src={this.state.collabIcons.Cards[1].Image}\r\n                              />\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"10\"\r\n                              sm=\"10\"\r\n                              md=\"10\"\r\n                              lg=\"10\"\r\n                              xl=\"10\"\r\n                              xxl=\"10\"\r\n                            >\r\n                              <Card.Title className=\"cardIconsTitleCollab\">\r\n                                {this.state.collabIcons.Cards[1].Title}\r\n                              </Card.Title>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Link onClick={this.statusComplaintForm}>\r\n                      <Card className=\"collaboration-card\">\r\n                        <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                          <Row>\r\n                            <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                              {\" \"}\r\n                              <Card.Img\r\n                                className=\"collaborationImageStyle\"\r\n                                src={this.state.collabIcons.Cards[2].Image}\r\n                              />\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"10\"\r\n                              sm=\"10\"\r\n                              md=\"10\"\r\n                              lg=\"10\"\r\n                              xl=\"10\"\r\n                              xxl=\"10\"\r\n                            >\r\n                              <Card.Title className=\"cardIconsTitleCollab\">\r\n                                {this.state.collabIcons.Cards[2].Title}\r\n                              </Card.Title>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n              </div>\r\n            </Container>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardComplaintManagement;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-shareDiscussIdeas\\Collaboration-shareDiscussIdeas.js",["643","644","645","646","647","648","649","650","651","652","653","654","655"],"import React, { Component } from \"react\";\r\nimport \"./Collaboration-shareDiscussIdeas.css\";\r\nimport Header from \"../Dashboard-header\";\r\nimport CollaborationsHeadings from \"../../jsonFiles/CollaborationJson/collaborationDetails\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport CollaborationSDIMostRecent from \"../Collaboration-sDI-MostRecent\";\r\nimport CollaborationSDIMostTrending from \"../Collaboration-sDI-MostTrending\";\r\nimport CollaborationSDIMostDiscussed from \"../Collaboration-sDI-MostDiscussed\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"../Footer\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport CollabBannerImg from \"../../assets/banner/idea_mob.jpg\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport LinesEllipsis from \"react-lines-ellipsis\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport footer_data from \"../../jsonFiles/DashboardInfoJson/DashboardFooter\";\r\n\r\nclass CollaborationShareDiscussIdeas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shareIcons: CollaborationsHeadings.Cards,\r\n      searchCardsValue: \"\",\r\n      searchCardsValidate: false,\r\n      isOpen: false,\r\n      submit: false,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      eventTarget: \"\",\r\n      footer: footer_data.paths,\r\n      isLogin: \"\",\r\n      // shareIcons: DashboardHeadings.DashIcons\r\n    };\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.openStartNewIdeaForm = this.openStartNewIdeaForm.bind(this);\r\n    this.searchCardsValidate = this.searchCardsValidate.bind(this);\r\n    this.search_SAT = this.search_SAT.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.style = \"background-image: url();\";\r\n    document.body.style = \"background: #F9F9F9\";\r\n  }\r\n\r\n  searchCardsValidate = (e) => {\r\n    var searchValue = e.target.value;\r\n    if (searchValue != null && searchValue != \"\" && searchValue !== undefined) {\r\n      this.setState({\r\n        searchCardsValue: searchValue,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        searchCardsValue: searchValue,\r\n      });\r\n    }\r\n  };\r\n\r\n  DeleteACard = (CardID) => {\r\n    // console.log(\"CardID = \", CardID);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_Id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        thread_id: CardID.threadId,\r\n      }),\r\n    };\r\n    fetch(\"https://scity.gmmspl.com:3000/Ideas/DeleteIdea\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.status === true) {\r\n          this.search_SAT();\r\n        }\r\n      });\r\n  };\r\n\r\n  CardDetails = (CardID) => {\r\n    // console.log(\"CardID = \", CardID);\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login for details and to add comment\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      sessionStorage.setItem(\"threadId\", CardID.threadId);\r\n      sessionStorage.setItem(\r\n        \"ideaDetailBack\",\r\n        \"collaboration-shareDiscussIdeas\"\r\n      );\r\n      this.props.history.push(\"/collaboration-ACardDetails\");\r\n    }\r\n  };\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      if(sessionStorage.getItem(\"IdeaDefaultTab\")){\r\n        sessionStorage.removeItem(\"IdeaDefaultTab\")\r\n      }\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  search_SAT = (e) => {\r\n    this.state.searchCardsValidate = true;\r\n    if (this.state.searchCardsValidate) {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          user_id: sessionStorage.getItem(\"user_id\"),\r\n          token: sessionStorage.getItem(\"token\"),\r\n          search_text: this.state.searchCardsValue,\r\n        }),\r\n      };\r\n\r\n      fetch(\"https://scity.gmmspl.com:3000/ideas/searchidea\", requestOptions)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          if (this.state.APIResponse.message === \"Data found\") {\r\n            var JsonDate = this.state.APIResponse.data;\r\n          for(var cardValues in JsonDate)\r\n          {\r\n              //console.log(\"share Icons card values:\",JsonDate[cardValues].cardProfileImage);\r\n              if (JsonDate[cardValues].cardProfileImage.indexOf(\"https\") == -1) {\r\n                JsonDate[cardValues].cardProfileImage=\"https://scity.gmmspl.com:3000/\"+JsonDate[cardValues].cardProfileImage;\r\n              }\r\n          }\r\n           this.setState({\r\n              shareIcons: JsonDate,\r\n            });\r\n          } else {\r\n            toast.error(\"Data is not available.\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n            this.setState({\r\n              searchCardsValidate: false,\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n\r\n  openStartNewIdeaForm() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login to add a new idea\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/collaboration-StartANewIdea\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <Header />\r\n        <Container className=\"all-header-space\"></Container> */}\r\n\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              <Link to=\"/dashboard-collaboration\"  onClick={()=>{sessionStorage.removeItem(\"IdeaDefaultTab\")}}>\r\n                <Tooltip\r\n                  title=\"Dashboard\"\r\n                  placement=\"top\"\r\n                  TransitionProps={{ timeout: 600 }}\r\n                  \r\n                >\r\n                  <MDBIcon\r\n                    icon=\"chevron-circle-left\"\r\n                    size=\"2x\"\r\n                    className=\"back-arrow-icon\"\r\n                  />\r\n                </Tooltip>\r\n              </Link>\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">\r\n                Share & Discuss Ideas\r\n              </label>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            <Row className=\"search-bar-allignemt-style\">\r\n              <Col xs=\"1\" sm=\"1\" md=\"4\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n              <Col\r\n                xs=\"10\"\r\n                sm=\"10\"\r\n                md=\"8\"\r\n                lg=\"6\"\r\n                xl=\"6\"\r\n                xxl=\"6\"\r\n                className=\"small-screen-padding\"\r\n              >\r\n                <TextField\r\n                  value={this.state.searchCardsValue}\r\n                  onChange={this.searchCardsValidate}\r\n                  placeholder=\"Search here...\"\r\n                  className=\"serach-bar-style\"\r\n                  id=\"outlined-search\"\r\n                  type=\"search\"\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton>\r\n                          <MDBIcon\r\n                            icon=\"search\"\r\n                            className=\"search-bar-icon-style\"\r\n                            onClick={this.search_SAT}\r\n                          />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col xs=\"1\" sm=\"1\" md=\"0\" lg=\"0\" xl=\"0\" xxl=\"0\"></Col>\r\n            </Row>\r\n\r\n            <div class=\"inner-container-style-collaboration\">\r\n              <Row className=\"inner-container-banner-margin\">\r\n                <Col\r\n                  xs=\"12\"\r\n                  sm=\"12\"\r\n                  md=\"12\"\r\n                  lg=\"12\"\r\n                  xl=\"12\"\r\n                  xxl=\"12\"\r\n                  className=\"collaboration-banners banner-submenu-style\"\r\n                >\r\n                  <Row>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                      {/* <Row className=\"pl-3 pt-4 collaboration-banner-text\">Share & Discuss</Row>\r\n                    <Row className=\"pl-3 collaboration-banner-text2\">Idea</Row> */}\r\n                      <Row className=\"collaboration-banner-text3\">\r\n                        {\" \"}\r\n                        Share your ideas and suggestions for making your city\r\n                        better{\" \"}\r\n                      </Row>\r\n                      <Row className=\"start-new-idea-btn-allignment\">\r\n                        <Button\r\n                          className=\"share-discuss-button-style\"\r\n                          onClick={this.openStartNewIdeaForm}\r\n                        >\r\n                          <label class=\"btn-color-style\">\r\n                            {\r\n                              CollaborationsHeadings.Collaboration_BUTTON_HEADING\r\n                            }\r\n                          </label>\r\n                        </Button>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n\r\n              {!this.state.searchCardsValidate && (\r\n                <div>\r\n                  <Tabs\r\n                    defaultActiveKey={sessionStorage.getItem(\"IdeaDefaultTab\") ? sessionStorage.getItem(\"IdeaDefaultTab\") : \"MostRecent\"}\r\n                    id=\"shareIdeas-tab\"\r\n                    className=\"\"\r\n                    onSelect={(key)=>{sessionStorage.setItem(\"IdeaDefaultTab\",key);}}\r\n                  >\r\n                    <Tab\r\n                      eventKey=\"MostRecent\"\r\n                      title=\"Most Recent\"\r\n                      tabClassName=\"share-disciss-tab-style pt-0 pr-0 pl-0\"\r\n                    >\r\n                      <CollaborationSDIMostRecent />\r\n                    </Tab>\r\n                    <Tab\r\n                      eventKey=\"Trending\"\r\n                      title=\"Trending\"\r\n                      tabClassName=\"share-disciss-tab-style pt-0 pr-0 pl-0\"\r\n                    >\r\n                      <CollaborationSDIMostTrending />\r\n                    </Tab>\r\n                    <Tab\r\n                      eventKey=\"MostDiscussed\"\r\n                      title=\"Most Discussed\"\r\n                      tabClassName=\"share-disciss-tab-style pt-0 pr-0 pl-0\"\r\n                    >\r\n                      <CollaborationSDIMostDiscussed />\r\n                    </Tab>\r\n                  </Tabs>\r\n                </div>\r\n              )}\r\n              {this.state.searchCardsValidate && (\r\n                <Container className=\"tab-card-container-style\">\r\n                  <Row>\r\n                    {this.state.shareIcons.map((CardValues, index) => (\r\n                      <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                        <Card className=\"tab-card-style \">\r\n                          <div class=\"card-top-border\"></div>\r\n                          <Row className=\"pt-3\">\r\n                            <Col\r\n                              xs=\"10\"\r\n                              sm=\"10\"\r\n                              md=\"10\"\r\n                              lg=\"10\"\r\n                              xl=\"10\"\r\n                              xxl=\"10\"\r\n                              className=\"pl-4\"\r\n                            >\r\n                              <Card.Title\r\n                                id=\"rcorners1\"\r\n                                className=\"tab-card-heading-style\"\r\n                              >\r\n                                {CardValues.cardType}\r\n                              </Card.Title>\r\n                            </Col>\r\n                            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n                              {CardValues.cardUserId ==\r\n                                sessionStorage.getItem(\"user_id\") && (\r\n                                <MDBIcon\r\n                                  icon=\"trash-alt\"\r\n                                  size=\"sm\"\r\n                                  className=\"card-icon-style-delete\"\r\n                                  onClick={() => this.DeleteACard(CardValues)}\r\n                                />\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n\r\n                          <Card.Subtitle className=\"\">\r\n                            <Row className=\"tab-card-subject-style\">\r\n                              <Col className=\"p-0\">\r\n                                <LinesEllipsis\r\n                                  text={CardValues.cardTitle}\r\n                                  maxLine=\"2\"\r\n                                  ellipsis={\r\n                                    <span\r\n                                      style={{\r\n                                        color: \"blue\",\r\n                                        fontSize: \"12px\",\r\n                                      }}\r\n                                    >\r\n                                      {\" \"}\r\n                                      ...\r\n                                    </span>\r\n                                  }\r\n                                  trimRight\r\n                                  basedOn=\"letters\"\r\n                                  // onReflow = {this.handleReflow}\r\n                                />\r\n                              </Col>\r\n                            </Row>\r\n                          </Card.Subtitle>\r\n\r\n                          <Card.Body className=\"p-0\">\r\n                            <Card.Text className=\"tab-card-body-style  mb-2\">\r\n                              {/* <p>{CardValues.cardDescription}</p> */}\r\n                              <LinesEllipsis\r\n                                text={CardValues.cardDescription}\r\n                                maxLine=\"3\"\r\n                                ellipsis={\r\n                                  <span\r\n                                    style={{ color: \"blue\", fontSize: \"10px\" }}\r\n                                  >\r\n                                    {\" \"}\r\n                                    ...\r\n                                  </span>\r\n                                }\r\n                                trimRight\r\n                                basedOn=\"words\"\r\n                                // onReflow = {this.handleReflow}\r\n                              />\r\n                            </Card.Text>\r\n                            <Card.Text className=\"tab-card-body-style\">\r\n                              {CardValues.CommentCount === null && (\r\n                                <p className=\"card-comments-style\">\r\n                                  <label id=\"rcorners-comment-count\">\r\n                                    0{\" \"}\r\n                                    <span class=\"comments-count-style\">\r\n                                      Comments\r\n                                    </span>\r\n                                  </label>\r\n                                </p>\r\n                              )}\r\n                              {CardValues.CommentCount != null && (\r\n                                <p className=\"card-comments-style\">\r\n                                  <label id=\"rcorners-comment-count\">\r\n                                    {CardValues.CommentCount}{\" \"}\r\n                                    <span class=\"comments-count-style\">\r\n                                      Comments\r\n                                    </span>\r\n                                  </label>\r\n                                </p>\r\n                              )}\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                              <Row className=\"pt-3 card-footer__events\">\r\n                                <Col\r\n                                  xs=\"3\"\r\n                                  sm=\"3\"\r\n                                  md=\"3\"\r\n                                  lg=\"3\"\r\n                                  xl=\"3\"\r\n                                  className=\"card-profile-image-col-style\"\r\n                                >\r\n                                  <img\r\n                                    src={CardValues.cardProfileImage}\r\n                                    alt=\"\"\r\n                                    class=\"card-profile-image-style\"\r\n                                  />\r\n                                </Col>\r\n                                <Col\r\n                                  xs=\"5\"\r\n                                  sm=\"5\"\r\n                                  md=\"5\"\r\n                                  lg=\"5\"\r\n                                  xl=\"5\"\r\n                                  className=\"card-image-imfo-style pr-0\"\r\n                                >\r\n                                  <Row className=\"card-image-profile-name-style\">\r\n                                    <label>{CardValues.cardPostedBy}</label>\r\n                                  </Row>\r\n                                  <Row className=\"card-image-imfo-row-style\">\r\n                                    <label>{CardValues.cardPostedOn}</label>\r\n                                  </Row>\r\n                                </Col>\r\n                                <Col\r\n                                  xs=\"4\"\r\n                                  sm=\"4\"\r\n                                  md=\"4\"\r\n                                  lg=\"4\"\r\n                                  xl=\"4\"\r\n                                  className=\"p-0 card-icon-alignment\"\r\n                                >\r\n                                  <div>\r\n                                    <span class=\"\">\r\n                                      <MDBIcon\r\n                                        far\r\n                                        icon=\"eye\"\r\n                                        size=\"sm\"\r\n                                        className=\"card-icon-style\"\r\n                                        onClick={() =>\r\n                                          this.CardDetails(CardValues)\r\n                                        }\r\n                                      />\r\n                                    </span>\r\n                                    <span class=\"pl-2 \">\r\n                                      <MDBIcon\r\n                                        icon=\"reply\"\r\n                                        size=\"sm\"\r\n                                        className=\"card-icon-style\"\r\n                                        onClick={() =>\r\n                                          this.CardDetails(CardValues)\r\n                                        }\r\n                                      />\r\n                                    </span>\r\n                                  </div>\r\n                                </Col>\r\n                              </Row>\r\n                            </Card.Text>\r\n                          </Card.Body>\r\n                        </Card>\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                  <Row className=\"pb-5\"></Row>\r\n\r\n                  {/* <Row className=\"pb-5\"></Row>\r\n                  <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                    <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                    {\r\n                    (this.state.shareIcons.length >= this.state.cardCounts) &&\r\n                    <Button className=\"login-button-style\" onClick={this.LoadMore_SAT}>\r\n                      Load More      \r\n                    </Button>\r\n                    }\r\n                    </Col>\r\n                  </Row>\r\n                     */}\r\n                  <ToastContainer\r\n                    position=\"top-center\"\r\n                    autoClose={3000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover={false}\r\n                    className=\"toaster-style\"\r\n                  />\r\n                </Container>\r\n              )}\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CollaborationShareDiscussIdeas);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-sDI-StartANewIdea\\Collaboration-sDI-StartANewIdea.js",["656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675"],"import React, { Component } from \"react\";\r\nimport Header from \"../Dashboard-header\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport CollaborationsHeadings from \"../../jsonFiles/CollaborationJson/collaborationDetails\";\r\nimport { Link } from \"react-router-dom\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"react-select\";\r\nimport \"./Collaboration-sDI-StartANewIdea.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Footer from \"../Footer\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport PublishUpload from \"@material-ui/icons/Publish\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport footer_data from \"../../jsonFiles/DashboardInfoJson/DashboardFooter\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nclass CollaborationSDIStartANewIdea extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      // shareIcons: DashboardHeadings.DashIcons\r\n      newTitle: \"\",\r\n      newTitleValidate: false,\r\n      description: \"\",\r\n      descriptionValidate: false,\r\n      tag: \"\",\r\n      tagValidate: false,\r\n      SelectedType: \"\",\r\n      SelectedTypeValidate: false,\r\n      file_upload1: null,\r\n      file_upload2: null,\r\n      file_upload3: null,\r\n      tooManyFiles: false,\r\n      largeFileSize: false,\r\n      dialogBoxStatus: false,\r\n      fileSuccessfullyUploaded: false,\r\n      file_upload: [],\r\n      fileName: [],\r\n      fileNameData: [],\r\n      CategoryList: \"\",\r\n      isOpen: false,\r\n      submit: false,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      eventTarget: \"\",\r\n      footer: footer_data.paths,\r\n      isLogin: \"\",\r\n      shareLocationflag: false,\r\n    };\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.newTitleValidate = this.newTitleValidate.bind(this);\r\n    this.Submit = this.Submit.bind(this);\r\n    this.descriptionValidate = this.descriptionValidate.bind(this);\r\n    this.UploadAttachedFiles = this.UploadAttachedFiles.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.cancelUpload = this.cancelUpload.bind(this);\r\n    this.getTruncatedName=this.getTruncatedName.bind(this);\r\n    this.changeLocation = this.changeLocation.bind(this);\r\n    this.ideasBack = this.ideasBack.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n    this.ShareLocationCheckboxToggle_SAT = this.ShareLocationCheckboxToggle_SAT.bind(\r\n      this\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      document.body.style = \"background-image: url();\";\r\n      document.body.style = \"background: #F9F9F9\";\r\n      if (sessionStorage.getItem(\"ideasCatgValue\")) {\r\n        var tempObj = {\r\n          value: sessionStorage.getItem(\"ideasCatgValue\"),\r\n          label: sessionStorage.getItem(\"ideasCatglabel\"),\r\n        };\r\n        this.setState({\r\n          SelectedType: tempObj,\r\n          SelectedTypeValidate: true,\r\n        });\r\n      }\r\n\r\n      if (sessionStorage.getItem(\"ideasTitle\")) {\r\n        this.setState({\r\n          newTitle: sessionStorage.getItem(\"ideasTitle\"),\r\n          newTitleValidate: true,\r\n        });\r\n      }\r\n      if (sessionStorage.getItem(\"ideasDesc\")) {\r\n        this.setState({\r\n          description: sessionStorage.getItem(\"ideasDesc\"),\r\n          descriptionValidate: true,\r\n        });\r\n      }\r\n      // this.setState({\r\n      //   newTitle: sessionStorage.getItem(\"ideasTitle\"),\r\n      //   newTitleValidate: true,\r\n      //   description: sessionStorage.getItem(\"ideasDesc\"),\r\n      //   descriptionValidate: true,\r\n      // });\r\n      if (sessionStorage.getItem(\"SDI_shareLocationflag\")) {\r\n        this.setState({\r\n          shareLocationflag: sessionStorage.getItem(\"SDI_shareLocationflag\"),\r\n        });\r\n      } else {\r\n        this.setState({\r\n          shareLocationflag: false,\r\n        });\r\n      }\r\n      this.getCategoryList();\r\n    }\r\n  }\r\n\r\n  getCategoryList() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n      }),\r\n    };\r\n\r\n    fetch(\"https://scity.gmmspl.com:3000/ideas/ideacategory\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.message === \"Idea category found\") {\r\n          const options = this.state.APIResponse.data.map((d) => ({\r\n            value: d.idea_cat_id,\r\n            label: d.category_name,\r\n          }));\r\n          this.setState({ CategoryList: options });\r\n        } else {\r\n          toast.error(\r\n            \"Something went wrong due to internet connection , Please try again\",\r\n            {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              onClose: () =>\r\n                this.props.history.push(\"/collaboration-shareDiscussIdeas\"),\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  ShareLocationCheckboxToggle_SAT = (e) => {\r\n    var temp;\r\n    if (this.state.shareLocationflag == false) {\r\n      this.setState({shareLocationflag: true,});\r\n      temp=true;\r\n    } else {\r\n      this.setState({shareLocationflag: false, });\r\n      temp=false;\r\n    }\r\n    sessionStorage.setItem(\"SDI_shareLocationflag\",temp);\r\n  };\r\n  getTruncatedName=(attachmentname)=>{\r\n    if(attachmentname.length>25)\r\n    {\r\n      var truncatename= attachmentname.substr(0,10)+'...'+attachmentname.substr(attachmentname.length-8,attachmentname.length-1)\r\n      return truncatename;\r\n    }\r\n    else{\r\n    return(attachmentname);\r\n    }\r\n  }\r\n  cancelUpload(num) {\r\n    var array = [...this.state.fileName]; // make a separate copy of the array\r\n    var index = num;\r\n    if (index !== -1) {\r\n      array.splice(index, 1);\r\n      this.setState({ fileName: array });\r\n      this.myRef.current.value=\"\";\r\n    }\r\n  }\r\n\r\n  ideasBack() {\r\n    sessionStorage.removeItem(\"ideasBack\");\r\n    sessionStorage.setItem(\r\n      \"ideasLocation\",\r\n      sessionStorage.getItem(\"currentAddress\")\r\n    );\r\n    sessionStorage.removeItem(\"mapsBack\");\r\n    sessionStorage.removeItem(\"ideasTemplong\");\r\n    sessionStorage.removeItem(\"ideasTemplat\");\r\n    sessionStorage.removeItem(\"ideasTempLocation\");\r\n    sessionStorage.removeItem(\"ideaslong\");\r\n    sessionStorage.removeItem(\"ideaslat\");\r\n    sessionStorage.removeItem(\"ideasTitle\");\r\n    sessionStorage.removeItem(\"ideasDesc\");\r\n    sessionStorage.removeItem(\"ideasCatgValue\");\r\n    sessionStorage.removeItem(\"ideasCatglabel\");\r\n    sessionStorage.removeItem(\"SDI_shareLocationflag\");\r\n  }\r\n\r\n  newTitleValidate = (e) => {\r\n    var title = e.target.value;\r\n    if (title != \"\") {\r\n      this.setState({\r\n        newTitle: e.target.value,\r\n        newTitleValidate: true,\r\n      });\r\n      sessionStorage.setItem(\"ideasTitle\", title);\r\n    } else {\r\n      this.setState({\r\n        newTitle: e.target.value,\r\n        newTitleValidate: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  descriptionValidate = (e) => {\r\n    this.setState({\r\n      description: e.target.value,\r\n      descriptionValidate: true,\r\n    });\r\n    sessionStorage.setItem(\"ideasDesc\", e.target.value);\r\n  };\r\n\r\n  CategoryTypeValidate = (Selected_option) => {\r\n    this.setState({\r\n      SelectedType: Selected_option,\r\n      SelectedTypeValidate: true,\r\n    });\r\n    sessionStorage.setItem(\"ideasCatgValue\", Selected_option.value);\r\n    sessionStorage.setItem(\"ideasCatglabel\", Selected_option.label);\r\n  };\r\n\r\n  UploadAttachedFiles = (e) => {\r\n    // console.log(\"Files = \", e.currentTarget.files);\r\n    // console.log(\"Files link = \", e.target.value);\r\n\r\n    // var selectedFile = e.target.files[0];\r\n    // var reader = new FileReader();\r\n\r\n    // var imgtag = document.getElementById(\"uploadImg1\");\r\n    // imgtag.title = selectedFile.name;\r\n\r\n    // reader.onload = function(event) {\r\n    //   imgtag.src = event.target.result;\r\n    // };\r\n\r\n    // reader.readAsDataURL(selectedFile);\r\n\r\n    if (e.currentTarget.files.length < 4) {\r\n      for (var i = 0; i < e.currentTarget.files.length; i++) {\r\n        console.log(\r\n          \"File size = \",\r\n          e.currentTarget.files[i].size / 1024 / 1024\r\n        );\r\n        if (e.currentTarget.files[i].size / 1024 / 1024 > 5) {\r\n          this.state.largeFileSize = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (this.state.largeFileSize === false) {\r\n        this.setState({\r\n          file_upload1: e.currentTarget.files[0],\r\n          file_upload2: e.currentTarget.files[1],\r\n          file_upload3: e.currentTarget.files[2],\r\n        });\r\n      } else {\r\n        toast.warn(\"The file size should not be greater than 5 MB.\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n         this.state.largeFileSize = false;\r\n         this.myRef.current.value=\"\" ;\r\n      }\r\n    } else {\r\n      toast.error(\"Only 3 files are allowed to upload.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      largeFileSize: false,\r\n      tooManyFiles: false,\r\n      dialogBoxStatus: false,\r\n      fileSuccessfullyUploaded: false,\r\n    });\r\n  }\r\n\r\n  onChangeFile(e) {\r\n    let files = e.target.files;\r\n    //  console.log(files);  var test=document.getElementsByClassName(\"file1upload\")[0].attributes[0].nodeValue;\r\n\r\n    var totalSelectedCount =\r\n      e.currentTarget.files.length + this.state.fileName.length;\r\n    if (e.currentTarget.files.length < 4 && totalSelectedCount < 4) {\r\n      for (var i = 0; i < e.currentTarget.files.length; i++) {\r\n        if (e.currentTarget.files[i].size / 1024 / 1024 > 5) {\r\n          this.state.largeFileSize = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (this.state.largeFileSize === false) {\r\n        console.log(this.state.fileName.length);\r\n\r\n        var test = [];\r\n        for (var j = 0; j < this.state.fileName.length; j++) {\r\n          test[j] = this.state.fileName[j];\r\n        }\r\n        for (var i = 0; i < e.currentTarget.files.length; i++) {\r\n          test[j] = e.currentTarget.files[i];\r\n          j++;\r\n        }\r\n        this.setState({ test });\r\n\r\n        this.setState({\r\n          fileName: test,\r\n        });\r\n        // console.log(\"test\",this.state.fileName);\r\n      } else {\r\n        toast.warn(\"The file size should not be greater than 5 MB.\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n         this.state.largeFileSize = false;\r\n         this.myRef.current.value=\"\" ;\r\n      }\r\n    } else {\r\n      toast.error(\"Only 3 files are allowed to upload.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n\r\n  changeLocation() {\r\n    sessionStorage.setItem(\"ideasBack\", \"collaboration-StartANewIdea\");\r\n  }\r\n\r\n  Submit() {\r\n    // console.log(\"this.state.file_upload1 = \", this.state.file_upload1);\r\n    // console.log(\"this.state.file_upload2 = \", this.state.file_upload2);\r\n    // console.log(\"this.state.file_upload3 = \", this.state.file_upload3);\r\n    let formData = new FormData();\r\n    if (this.state.newTitleValidate && this.state.SelectedTypeValidate) {\r\n      this.refs.btn.setAttribute(\"disabled\", \"disabled\");\r\n\r\n      formData.append(\"token\", sessionStorage.getItem(\"token\"));\r\n      formData.append(\"user_Id\", sessionStorage.getItem(\"user_id\"));\r\n      formData.append(\"idea_cat_id\", this.state.SelectedType.value);\r\n      formData.append(\"title\", this.state.newTitle);\r\n      formData.append(\"share_location_flag\", this.state.shareLocationflag);\r\n\r\n      if (\r\n        this.state.description == null ||\r\n        this.state.description == undefined ||\r\n        this.state.description == \"null\"\r\n      ) {\r\n        formData.append(\"description\", \" \");\r\n      } else {\r\n        formData.append(\"description\", this.state.description);\r\n      }\r\n\r\n      for (var i = 1; i <= this.state.fileName.length; i++) {\r\n        formData.append(\"file\" + i, this.state.fileName[i - 1]);\r\n      }\r\n\r\n      if (sessionStorage.getItem(\"ideaslong\")) {\r\n        formData.append(\"longitude\", sessionStorage.getItem(\"ideaslong\"));\r\n        formData.append(\"latitude\", sessionStorage.getItem(\"ideaslat\"));\r\n        formData.append(\"address\", sessionStorage.getItem(\"ideasLocation\"));\r\n      } else {\r\n        formData.append(\r\n          \"longitude\",\r\n          sessionStorage.getItem(\"currentLongitude\")\r\n        );\r\n        formData.append(\"latitude\", sessionStorage.getItem(\"currentLatitude\"));\r\n        formData.append(\"address\", sessionStorage.getItem(\"currentAddress\"));\r\n      }\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        body: formData,\r\n        // headers: { 'Content-Type': 'application/json' },\r\n        // body: JSON.stringify(\r\n        //   {\r\n        //     \"token\": sessionStorage.getItem(\"token\"),\r\n        //     \"user_Id\": sessionStorage.getItem(\"user_id\"),\r\n        //     \"idea_cat_id\": this.state.SelectedType.value,\r\n        //     \"title\": this.state.newTitle,\r\n        //     \"description\": this.state.description,\r\n        //   }\r\n        // )\r\n      };\r\n      fetch(\"https://scity.gmmspl.com:3000/Ideas/CreateIdea\", requestOptions)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          // console.log(\"APIResponse = \", this.state.APIResponse);\r\n          if (this.state.APIResponse.message === \"Idea added successfully\") {\r\n            toast.success(\"Idea successfully added\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              onClose: () =>\r\n                this.props.history.push(\"/collaboration-shareDiscussIdeas\"),\r\n            });\r\n\r\n            sessionStorage.removeItem(\"ideasBack\");\r\n            sessionStorage.setItem(\r\n              \"ideasLocation\",\r\n              sessionStorage.getItem(\"currentAddress\")\r\n            );\r\n            sessionStorage.removeItem(\"mapsBack\");\r\n            sessionStorage.removeItem(\"ideasTemplong\");\r\n            sessionStorage.removeItem(\"ideasTemplat\");\r\n            sessionStorage.removeItem(\"ideasTempLocation\");\r\n            sessionStorage.removeItem(\"ideaslong\");\r\n            sessionStorage.removeItem(\"ideaslat\");\r\n            sessionStorage.removeItem(\"ideasTitle\");\r\n            sessionStorage.removeItem(\"ideasDesc\");\r\n            sessionStorage.removeItem(\"ideasCatgValue\");\r\n            sessionStorage.removeItem(\"ideasCatglabel\");\r\n            sessionStorage.removeItem(\"SDI_shareLocationflag\");\r\n\r\n            // this.props.history.push(\"/collaboration-shareDiscussIdeas\");\r\n          } else {\r\n            toast.error(\r\n              \"Idea is not added, something went wrong. Please try again\",\r\n              {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              }\r\n            );\r\n          }\r\n        });\r\n    } else {\r\n      toast.error(\"Title and category cannot be empty\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n\r\n  Cancel() {\r\n    this.props.history.push(\"/collaboration-shareDiscussIdeas\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <Header /> */}\r\n        {/* <Container className=\"all-header-space\"></Container> */}\r\n\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              <Link\r\n                onClick={this.ideasBack}\r\n                to=\"/collaboration-shareDiscussIdeas\"\r\n              >\r\n                <Tooltip\r\n                  title=\"Dashboard\"\r\n                  placement=\"top\"\r\n                  TransitionProps={{ timeout: 600 }}\r\n                >\r\n                  <MDBIcon\r\n                    icon=\"chevron-circle-left\"\r\n                    size=\"2x\"\r\n                    className=\"back-arrow-icon\"\r\n                  />\r\n                </Tooltip>\r\n              </Link>\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">Start A New Idea</label>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            {/* <Row className=\"pt-1 pb-1\">\r\n              <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"1\" xl=\"1\" xxl=\"1\" className=\"back-arrow-icon-style pl-4\">\r\n                <Link onClick={this.ideasBack} to = \"/collaboration-shareDiscussIdeas\">\r\n                  <MDBIcon icon=\"arrow-circle-left\" size=\"2x\" className=\"back-arrow-icon\"/>\r\n                </Link>\r\n              </Col>\r\n              <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"11\" xl=\"11\" xxl=\"11\" className=\"start-new-Idea-heading\">\r\n                Start a New Idea\r\n              </Col>\r\n            </Row> */}\r\n\r\n            <div class=\"details-container-style inner-container-style-collaboration\">\r\n              <Row className=\"m-3\">\r\n                <Col\r\n                  xs=\"12\"\r\n                  sm=\"12\"\r\n                  md=\"12\"\r\n                  lg=\"12\"\r\n                  xl=\"12\"\r\n                  xxl=\"12\"\r\n                  className=\"collaboration-banners banner-submenu-style\"\r\n                >\r\n                  <Row>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                      <Row className=\"start-new-idea-banner-text\">\r\n                        {\" \"}\r\n                        Describe your idea, share supporting media, etc. to\r\n                        discuss and engage with fellow citizens.{\" \"}\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Container className=\"\">\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <TextField\r\n                      id=\"standard-required\"\r\n                      label=\"Title\"\r\n                      onInput={(e) =>\r\n                        (e.target.value = e.target.value.slice(0, 250))\r\n                      }\r\n                      value={this.state.newTitle}\r\n                      onChange={this.newTitleValidate}\r\n                      required\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <Select\r\n                      // placeholder=\" \"\r\n                      placeholder={\r\n                        <label>\r\n                          Select Category\r\n                          <span class=\"select-astric-red\"> *</span>\r\n                        </label>\r\n                      }\r\n                      options={this.state.CategoryList}\r\n                      isSearchable={false}\r\n                      className=\"category-drop-style\"\r\n                      value={this.state.SelectedType}\r\n                      onChange={this.CategoryTypeValidate}\r\n                      maxMenuHeight={170}\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pt-4\"\r\n                  >\r\n                    <TextField\r\n                      id=\"outlined-textarea\"\r\n                      label=\"Describe your ideas here...\"\r\n                      onInput={(e) =>\r\n                        (e.target.value = e.target.value.slice(0, 500))\r\n                      }\r\n                      multiline\r\n                      //variant=\"outlined\"\r\n                      rows={3}\r\n                      className=\"start-new-idea-description-box\"\r\n                      value={this.state.description}\r\n                      onChange={this.descriptionValidate}\r\n                    />\r\n                    <label class=\"max-char-count-text-display\">\r\n                      Max 500 characters\r\n                    </label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-2\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <Row className=\"\">\r\n                      <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                        <Checkbox\r\n                          checked={this.state.shareLocationflag}\r\n                          size=\"small\"\r\n                          className=\"login-checkbox-style\"\r\n                          inputProps={{\r\n                            \"aria-label\": \"checkbox with default color\",\r\n                          }}\r\n                          onChange={this.ShareLocationCheckboxToggle_SAT}\r\n                        />\r\n                        <label class=\"keep-me-log-in-style\">\r\n                          Share my Location\r\n                        </label>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <div>\r\n                  {this.state.shareLocationflag && (\r\n                    <Row>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                      <Col\r\n                        xs=\"12\"\r\n                        sm=\"12\"\r\n                        md=\"10\"\r\n                        lg=\"10\"\r\n                        xl=\"10\"\r\n                        xxl=\"10\"\r\n                        className=\"pt-4\"\r\n                      >\r\n                        <Row>\r\n                          <Col\r\n                            xs=\"7\"\r\n                            sm=\"7\"\r\n                            md=\"7\"\r\n                            lg=\"7\"\r\n                            xl=\"7\"\r\n                            xxl=\"7\"\r\n                            className=\"geolocation-font-style\"\r\n                          >\r\n                            <label>\r\n                              {sessionStorage.getItem(\"ideasLocation\")}\r\n                            </label>\r\n                          </Col>\r\n                          <Col\r\n                            xs=\"5\"\r\n                            sm=\"5\"\r\n                            md=\"5\"\r\n                            lg=\"5\"\r\n                            xl=\"5\"\r\n                            xxl=\"5\"\r\n                            className=\"text-align-right pl-0\"\r\n                          >\r\n                            <Link\r\n                              className=\"geolocation-button-style\"\r\n                              onClick={this.changeLocation}\r\n                              to=\"/Maps\"\r\n                            >\r\n                              <MDBIcon icon=\"map-marker-alt\" />\r\n                              <label class=\"geolocation-button-font-style\">\r\n                                Change Location\r\n                              </label>\r\n                            </Link>\r\n                          </Col>\r\n                        </Row>\r\n                        <hr className=\"bold-hr\"></hr>\r\n                      </Col>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                    </Row>\r\n                  )}\r\n                </div>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pt-4\"\r\n                  >\r\n                    <Row className=\"pt-3 pl-3\">\r\n                      <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\">\r\n                        <Row>\r\n                          <Col\r\n                            xs=\"4\"\r\n                            sm=\"4\"\r\n                            md=\"4\"\r\n                            lg=\"4\"\r\n                            xl=\"4\"\r\n                            xxl=\"4\"\r\n                            className=\"Attachment-font-style pl-0\"\r\n                          >\r\n                            Attachment\r\n                          </Col>\r\n\r\n                          <Col\r\n                            xs=\"8\"\r\n                            sm=\"8\"\r\n                            md=\"8\"\r\n                            lg=\"8\"\r\n                            xl=\"8\"\r\n                            xxl=\"8\"\r\n                            className=\"text-align-right\"\r\n                          >\r\n                            <label\r\n                              htmlFor=\"myInput\"\r\n                              className=\"uploadbuttonstyle\"\r\n                            >\r\n                              Upload\r\n                              <PublishUpload fontSize=\"small\" />\r\n                            </label>\r\n                            <input\r\n                              id=\"myInput\"\r\n                              style={{ display: \"none\" }}\r\n                              type={\"file\"}\r\n                              multiple\r\n                              accept=\"image/png, image/jpg, image/jpeg ,video/mp4,video/x-m4v,video/*,application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint,\r\n                            text/plain, application/pdf, .docx, .doc, .xlsx, .pptx, .txt\"\r\n                              onChange={(e) => this.onChangeFile(e)}\r\n                               ref={this.myRef}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className=\"max-size-font-style\">\r\n                          Attach Image/Video/Document <i>(max size 5MB)</i>\r\n                        </Row>\r\n                        <Row className=\"max-size-font-style\">\r\n                          Maximum 3 attachments allowed\r\n                        </Row>\r\n                        <Row className=\"pt-3\">\r\n                          <Col\r\n                            xs=\"10\"\r\n                            sm=\"10\"\r\n                            md=\"10\"\r\n                            lg=\"10\"\r\n                            xl=\"10\"\r\n                            xxl=\"10\"\r\n                            className=\"pl-0\"\r\n                          >\r\n                            {this.state.fileName.map((file, index) => (\r\n                              <div className=\"file1upload\">{this.getTruncatedName(file.name)}</div>\r\n                            ))}\r\n                          </Col>\r\n                          <Col\r\n                            xs=\"2\"\r\n                            sm=\"2\"\r\n                            md=\"2\"\r\n                            lg=\"2\"\r\n                            xl=\"2\"\r\n                            xxl=\"2\"\r\n                            className=\"pl-0\"\r\n                          >\r\n                            {this.state.fileName.map((file, index) => (\r\n                              <div className=\"file1upload\">\r\n                                <CancelIcon\r\n                                  color=\"secondary\"\r\n                                  fontSize=\"small\"\r\n                                  onClick={() => this.cancelUpload(index)}\r\n                                />\r\n                              </div>\r\n                            ))}\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n\r\n                      <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\" xl=\"4\" xxl=\"4\"></Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-4 pb-5\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"5\" lg=\"5\" xl=\"5\" xxl=\"5\">\r\n                    <Button\r\n                      className=\"login-button-style\"\r\n                      onClick={this.Submit}\r\n                      ref=\"btn\"\r\n                    >\r\n                      SUBMIT\r\n                    </Button>\r\n                  </Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"5\" lg=\"5\" xl=\"5\" xxl=\"5\">\r\n                    <Link\r\n                      onClick={this.ideasBack}\r\n                      to=\"/collaboration-shareDiscussIdeas\"\r\n                    >\r\n                      <Button className=\"skip-button-style\">CANCEL</Button>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"10\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                {/* <Row className=\"pt-4\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                <Link onClick={this.ideasBack} to=\"/collaboration-shareDiscussIdeas\">\r\n                  <Button className=\"skip-button-style\">\r\n                    CANCEL\r\n                  </Button>\r\n                </Link>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"10\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n            </Row> */}\r\n              </Container>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        <Footer />\r\n        {/* <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover={false}\r\n                className=\"toaster-style\"\r\n                /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CollaborationSDIStartANewIdea);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Footer\\Footer.js",["676","677","678","679","680","681","682"],"import React, { Component } from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { MDBIcon, MDBNavLink } from \"../../../node_modules/mdbreact\";\r\nimport \"../Footer/Footer.css\";\r\nimport img from \"../../assets/pngegg.png\";\r\nimport { Link } from \"react-router-dom\";\r\n//import footer_data from '../../jsonFiles/Footer/FooterData';\r\nimport footer_data from \"../../jsonFiles/DashboardInfoJson/DashboardFooter\";\r\nimport Chatbot from \"react-chatbot-kit\";\r\nimport config from \"../../Config\";\r\nimport ActionProvider from \"../../ActionProvider\";\r\nimport MessageParser from \"../../MessageParser\";\r\nimport {\r\n  MDBDropdown,\r\n  MDBDropdownToggle,\r\n  MDBDropdownMenu,\r\n  MDBDropdownItem,\r\n} from \"mdbreact\";\r\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport CollaborationHeadings from \"../../jsonFiles/CollaborationJson/collaborationDetails\";\r\n\r\nclass Footer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      file: img,\r\n      footer: footer_data.paths,\r\n      showChatbot: false,\r\n      APIResponse: \"\",\r\n      shareIcons: CollaborationHeadings.Notification,\r\n    };\r\n    this.display = this.display.bind(this);\r\n    this.SosClick = this.SosClick.bind(this);\r\n    this.notification = this.notification.bind(this);\r\n    this.removeSessionObject=this.removeSessionObject.bind(this);\r\n  }\r\n\r\n  // componentDidUpdate(prevProps) {\r\n  //   this.setState({\r\n  //     showChatbot: false\r\n  //   });\r\n  // }\r\n\r\n  display() {\r\n    if (this.state.showChatbot) {\r\n      this.setState({\r\n        showChatbot: false,\r\n      });\r\n      sessionStorage.removeItem(\"chatbot\");\r\n    } else {\r\n      this.setState({\r\n        showChatbot: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  notification() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login to view notifications\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          user_id: sessionStorage.getItem(\"user_id\"),\r\n          token: sessionStorage.getItem(\"token\"),\r\n        }),\r\n      };\r\n      fetch(\r\n        \"https://scity.gmmspl.com:3000/notification/notification\",\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          if (this.state.APIResponse.status === true) {\r\n            var JsonDate = this.state.APIResponse.data;\r\n            this.setState({\r\n              shareIcons: JsonDate,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  SosClick() {\r\n    if (sessionStorage.getItem(\"user_id\") == null || sessionStorage.getItem(\"user_id\") == undefined){\r\n      toast.warn(\"Please Login to use the service\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => window.location.href='/',\r\n      });\r\n    }\r\n   else{\r\n      if(sessionStorage.getItem(\"volunteerDefaultTab\")){\r\n        sessionStorage.removeItem(\"volunteerDefaultTab\")\r\n      }\r\n      if(sessionStorage.getItem(\"IdeaDefaultTab\")){\r\n      sessionStorage.removeItem(\"IdeaDefaultTab\")}\r\n      if(sessionStorage.getItem(\"PSDefaultTab\")){\r\n      sessionStorage.removeItem(\"PSDefaultTab\")}\r\n      if(sessionStorage.getItem(\"complaint_cat_id\")){\r\n      sessionStorage.removeItem(\"complaint_cat_id\")\r\n      }\r\n      if(sessionStorage.getItem(\"complaint_status_id\")){\r\n        sessionStorage.removeItem(\"complaint_status_id\")\r\n      }\r\n      if(sessionStorage.getItem(\"thread_id\")){\r\n        sessionStorage.removeItem(\"thread_id\")\r\n      }\r\n      if(sessionStorage.getItem(\"incident_cat_id\")){\r\n      sessionStorage.removeItem(\"incident_cat_id\")\r\n      }\r\n      if(sessionStorage.getItem(\"incident_status_id\")){\r\n        sessionStorage.removeItem(\"incident_status_id\")\r\n      }\r\n      if(sessionStorage.getItem(\"incident_id\")){\r\n        sessionStorage.removeItem(\"incident_id\")\r\n      }\r\n    this.props.history.push(\"/emergencyServices\");\r\n   }\r\n\r\n\r\n\r\n    //window.location.href='#/emergencyServices'\r\n    \r\n    // window.location.reload();\r\n    // const requestOptions = {\r\n    //   method: \"POST\",\r\n    //   headers: { \"Content-Type\": \"application/json\" },\r\n    //   body: JSON.stringify({\r\n    //     user_id: sessionStorage.getItem(\"user_id\"),\r\n    //     token: sessionStorage.getItem(\"token\"),\r\n    //   }),\r\n    // };\r\n    // fetch(\"https://scity.gmmspl.com:3000/sos/sos\", requestOptions)\r\n    //   .then((response) => response.json())\r\n    //   .then((data) => {\r\n    //     this.setState({\r\n    //       APIResponse: data,\r\n    //     });\r\n    //     // console.log(\"APIResponse = \", this.state.APIResponse);\r\n    //     if (this.state.APIResponse.message === \"SOS sms send.\") {\r\n    //       toast.success(\r\n    //         \"Your contact and location details has been shared with Police helpline.You will receive help shortly\",\r\n    //         {\r\n    //           position: \"top-center\",\r\n    //           autoClose: 3000,\r\n    //           hideProgressBar: false,\r\n    //           closeOnClick: true,\r\n    //           pauseOnHover: true,\r\n    //           draggable: true,\r\n    //           progress: undefined,\r\n    //           theme: \"light\",\r\n    //         }\r\n    //       );\r\n    //     } else {\r\n    //       toast.error(\"Please login to avail this service\", {\r\n    //         position: \"top-center\",\r\n    //         autoClose: 3000,\r\n    //         hideProgressBar: false,\r\n    //         closeOnClick: true,\r\n    //         pauseOnHover: true,\r\n    //         draggable: true,\r\n    //         progress: undefined,\r\n    //         theme: \"light\",\r\n    //         onClose: () => this.props.history.push(\"/\"),\r\n    //       });\r\n    //     }\r\n    //   });\r\n  }\r\n\r\n  removeSessionObject(){\r\n    if(sessionStorage.getItem(\"volunteerDefaultTab\")){\r\n      sessionStorage.removeItem(\"volunteerDefaultTab\")}\r\n    if(sessionStorage.getItem(\"IdeaDefaultTab\")){\r\n      sessionStorage.removeItem(\"IdeaDefaultTab\")}\r\n    if(sessionStorage.getItem(\"PSDefaultTab\")){\r\n      sessionStorage.removeItem(\"PSDefaultTab\")}\r\n    if(sessionStorage.getItem(\"complaint_cat_id\")){\r\n      sessionStorage.removeItem(\"complaint_cat_id\")\r\n    }\r\n    if(sessionStorage.getItem(\"complaint_status_id\")){\r\n      sessionStorage.removeItem(\"complaint_status_id\")\r\n    }\r\n    if(sessionStorage.getItem(\"thread_id\")){\r\n      sessionStorage.removeItem(\"thread_id\")\r\n    }\r\n      if(sessionStorage.getItem(\"incident_cat_id\")){\r\n      sessionStorage.removeItem(\"incident_cat_id\")\r\n      }\r\n      if(sessionStorage.getItem(\"incident_status_id\")){\r\n        sessionStorage.removeItem(\"incident_status_id\")\r\n      }\r\n      if(sessionStorage.getItem(\"incident_id\")){\r\n        sessionStorage.removeItem(\"incident_id\")\r\n      }\r\n  }\r\n    \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"footer-style\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 fixed-bottom topmost\">\r\n            <Navbar\r\n              expand=\"lg\"\r\n              sticky=\"bottom\"\r\n              className=\"fixed-bottom p-0 nav-color\"\r\n            >\r\n              <div class=\"col-2 d-flex align-icon \">\r\n                <Button onClick={this.SosClick}>\r\n                  <img class=\"sos-size\" src={this.state.file} alt=\"\" />\r\n                </Button>\r\n              </div>\r\n              <div class=\"col-2 d-flex align-icon \">\r\n                <Dropdown drop={\"up\"} onClick={this.notification}>\r\n                  <Dropdown.Toggle id=\"dropdown-basic\">\r\n                    <MDBIcon\r\n                      far\r\n                      icon={this.state.footer[0].icon}\r\n                      size=\"md\"\r\n                      className=\"Black-text\"\r\n                    />\r\n                  </Dropdown.Toggle>\r\n\r\n                  <Dropdown.Menu>\r\n                    <div className=\"Notification-text\">Notification</div>\r\n                    <hr></hr>\r\n                    {this.state.shareIcons.map((CardValues, index) => (\r\n                      <Dropdown.Item>\r\n                        {/* {<LinesEllipsis\r\n                    text={CardValues.subject}\r\n                    maxLine='2'\r\n                    ellipsis={<span style={{ color: \"blue\", fontSize : \"10px\" }}> ...</span>}\r\n                    trimRight\r\n                    basedOn='words'\r\n                  />} */}\r\n                        <div className=\"text-wrap-style\">\r\n                          {\" \"}\r\n                          <MDBIcon\r\n                            far\r\n                            icon={this.state.footer[0].icon}\r\n                            size=\"md\"\r\n                            className=\"bellIcon\"\r\n                          />{\" \"}\r\n                          {CardValues.subject}\r\n                        </div>{\" \"}\r\n                        <hr></hr>\r\n                      </Dropdown.Item>\r\n                    ))}\r\n\r\n                    {/* <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item> */}\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </div>\r\n              <div class=\"col-4 d-flex align-icon\" size=\"lg\">\r\n                <Link to=\"/dashboard\" onClick={this.removeSessionObject}>\r\n                  <HomeOutlinedIcon className=\"Black-text\" fontSize=\"medium\" />\r\n                </Link>\r\n              </div>\r\n              <div\r\n                class=\"col-4 d-flex align-icon show-position\"\r\n                onClick={this.display}\r\n              >\r\n                <MDBIcon\r\n                  far\r\n                  icon={this.state.footer[1].icon}\r\n                  size=\"md\"\r\n                  className=\"Black-text\"\r\n                />\r\n              </div>\r\n            </Navbar>\r\n            {this.state.showChatbot && (\r\n              <div style={{position:'relative',bottom:'20px'}}>\r\n              <Chatbot\r\n                toggle={this.display}\r\n                config={config}\r\n                actionProvider={ActionProvider}\r\n                messageParser={MessageParser}\r\n              />\r\n               </div>\r\n            )}\r\n           \r\n            <br />\r\n          </div>\r\n        </div>\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={3000}\r\n          hideProgressBar={false}\r\n          newestOnTop\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover={false}\r\n          className=\"toaster-style\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Footer);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\DefaultMapsLoadComponent\\DefaultMapsLoadComponent.js",["683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698"],"import React, { Component } from \"react\";\r\nimport Header from \"../Dashboard-header\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Footer from \"../Footer\";\r\nimport LoadMaps from \"../LoadMaps\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./DefaultMapsLoadComponent.css\";\r\n\r\nclass DefaultMapsLoadComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.backButton = this.backButton.bind(this);\r\n    this.Submit = this.Submit.bind(this);\r\n  }\r\n\r\n  backButton() {\r\n    if (\r\n      sessionStorage.getItem(\"complaintLogBack\") != null ||\r\n      sessionStorage.getItem(\"complaintLogBack\") != undefined\r\n    ) {\r\n      sessionStorage.setItem(\"mapsBack\", \"log-complaint\");\r\n    }\r\n    if (\r\n      sessionStorage.getItem(\"incidentBack\") != null ||\r\n      sessionStorage.getItem(\"incidentBack\") != undefined\r\n    ) {\r\n      sessionStorage.setItem(\"mapsBack\", \"reportAnIncident\");\r\n    }\r\n    if (\r\n      sessionStorage.getItem(\"ideasBack\") != null ||\r\n      sessionStorage.getItem(\"ideasBack\") != undefined\r\n    ) {\r\n      sessionStorage.setItem(\"mapsBack\", \"collaboration-StartANewIdea\");\r\n    }\r\n    if (\r\n      sessionStorage.getItem(\"volunterBack\") != null ||\r\n      sessionStorage.getItem(\"volunterBack\") != undefined\r\n    ) {\r\n      sessionStorage.setItem(\"mapsBack\", \"collaboration-SubmitAVolunteer\");\r\n    }\r\n    if (\r\n      sessionStorage.getItem(\"volunterEditBack\") != null ||\r\n      sessionStorage.getItem(\"volunterEditBack\") != undefined\r\n    ) {\r\n      sessionStorage.setItem(\"mapsBack\", \"CollaborationBAVEditVolunteer\");\r\n    }\r\n    this.props.history.push(\"/\" + sessionStorage.getItem(\"mapsBack\"));\r\n  }\r\n  Submit() {\r\n    if (\r\n      sessionStorage.getItem(\"complaintLogBack\") != null ||\r\n      sessionStorage.getItem(\"complaintLogBack\") != undefined\r\n    ) {\r\n      if (\r\n        sessionStorage.getItem(\"compliantTempLocation\") != null ||\r\n        sessionStorage.getItem(\"compliantTempLocation\") != undefined\r\n      ) {\r\n        sessionStorage.setItem(\r\n          \"compliantLocation\",\r\n          sessionStorage.getItem(\"compliantTempLocation\")\r\n        );\r\n        sessionStorage.setItem(\r\n          \"complaintlong\",\r\n          sessionStorage.getItem(\"complaintTemplong\")\r\n        );\r\n        sessionStorage.setItem(\r\n          \"complaintlat\",\r\n          sessionStorage.getItem(\"complaintTemplat\")\r\n        );\r\n      } else {\r\n        sessionStorage.setItem(\r\n          \"compliantLocation\",\r\n          sessionStorage.getItem(\"currentAddress\") \r\n        );\r\n        sessionStorage.setItem(\r\n          \"complaintlong\",\r\n          sessionStorage.getItem(\"currentLongitude\")\r\n        );\r\n        sessionStorage.setItem(\r\n          \"complaintlat\",\r\n          sessionStorage.getItem(\"currentLatitude\")\r\n        );\r\n      }\r\n      sessionStorage.setItem(\"mapsBack\", \"log-complaint\");\r\n    }\r\n    if (\r\n      sessionStorage.getItem(\"incidentBack\") != null ||\r\n      sessionStorage.getItem(\"incidentBack\") != undefined\r\n    ) {\r\n      if (\r\n        sessionStorage.getItem(\"incidentTempLocation\") != null ||\r\n        sessionStorage.getItem(\"incidentTempLocation\") != undefined\r\n      ) {\r\n        sessionStorage.setItem(\r\n          \"incidentLocation\",\r\n          sessionStorage.getItem(\"incidentTempLocation\")\r\n        );\r\n        sessionStorage.setItem(\r\n          \"incidentlong\",\r\n          sessionStorage.getItem(\"incidentTemplong\")\r\n        );\r\n        sessionStorage.setItem(\r\n          \"incidentlat\",\r\n          sessionStorage.getItem(\"incidentTemplat\")\r\n        );\r\n      } else {\r\n        sessionStorage.setItem(\r\n          \"incidentLocation\",\r\n          sessionStorage.getItem(\"currentAddress\")\r\n        );\r\n        sessionStorage.setItem(\r\n          \"incidentlong\",\r\n          sessionStorage.getItem(\"currentLongitude\")\r\n        );\r\n        sessionStorage.setItem(\r\n          \"incidentlat\",\r\n          sessionStorage.getItem(\"currentLatitude\")\r\n        );\r\n      }\r\n      sessionStorage.setItem(\"mapsBack\", \"reportAnIncident\");\r\n    }\r\n    if (\r\n      sessionStorage.getItem(\"ideasBack\") != null ||\r\n      sessionStorage.getItem(\"ideasBack\") != undefined\r\n    ) {\r\n      if (\r\n        sessionStorage.getItem(\"ideasTempLocation\") != null ||\r\n        sessionStorage.getItem(\"ideasTempLocation\") != undefined\r\n      ) {\r\n        sessionStorage.setItem(\r\n          \"ideasLocation\",\r\n          sessionStorage.getItem(\"ideasTempLocation\")\r\n        );\r\n        sessionStorage.setItem(\r\n          \"ideaslong\",\r\n          sessionStorage.getItem(\"ideasTemplong\")\r\n        );\r\n        sessionStorage.setItem(\r\n          \"ideaslat\",\r\n          sessionStorage.getItem(\"ideasTemplat\")\r\n        );\r\n      } else {\r\n        sessionStorage.setItem(\r\n          \"ideasLocation\",\r\n          sessionStorage.getItem(\"currentAddress\")\r\n        );\r\n        sessionStorage.setItem(\r\n          \"ideaslong\",\r\n          sessionStorage.getItem(\"currentLongitude\")\r\n        );\r\n        sessionStorage.setItem(\r\n          \"ideaslat\",\r\n          sessionStorage.getItem(\"currentLatitude\")\r\n        );\r\n      }\r\n      sessionStorage.setItem(\"mapsBack\", \"collaboration-StartANewIdea\");\r\n    }\r\n    if (\r\n      sessionStorage.getItem(\"volunterBack\") != null ||\r\n      sessionStorage.getItem(\"volunterBack\") != undefined\r\n    ) {\r\n      if (\r\n        sessionStorage.getItem(\"volunterTempLocation\") != null ||\r\n        sessionStorage.getItem(\"volunterTempLocation\") != undefined\r\n      ) {\r\n        sessionStorage.setItem(\r\n          \"volunterLocation\",\r\n          sessionStorage.getItem(\"volunterTempLocation\")\r\n        );\r\n        sessionStorage.setItem(\r\n          \"volunterlong\",\r\n          sessionStorage.getItem(\"volunterTemplong\")\r\n        );\r\n        sessionStorage.setItem(\r\n          \"volunterlat\",\r\n          sessionStorage.getItem(\"volunterTemplat\")\r\n        );\r\n      } else {\r\n        sessionStorage.setItem(\r\n          \"volunterLocation\",\r\n          sessionStorage.getItem(\"currentAddress\")\r\n        );\r\n        sessionStorage.setItem(\r\n          \"volunterlong\",\r\n          sessionStorage.getItem(\"currentLongitude\")\r\n        );\r\n        sessionStorage.setItem(\r\n          \"volunterlat\",\r\n          sessionStorage.getItem(\"currentLatitude\")\r\n        );\r\n      }\r\n      sessionStorage.setItem(\"mapsBack\", \"collaboration-SubmitAVolunteer\");\r\n    }\r\n    if (\r\n      sessionStorage.getItem(\"volunterEditBack\") != null ||\r\n      sessionStorage.getItem(\"volunterEditBack\") != undefined\r\n    ) {\r\n      if (\r\n        sessionStorage.getItem(\"volunterEditTempLocation\") != null ||\r\n        sessionStorage.getItem(\"volunterEditTempLocation\") != undefined\r\n      ) {\r\n        sessionStorage.setItem(\r\n          \"volunterEditLocation\",\r\n          sessionStorage.getItem(\"volunterEditTempLocation\")\r\n        );\r\n        sessionStorage.setItem(\r\n          \"volunterEditlong\",\r\n          sessionStorage.getItem(\"volunterEditTemplong\")\r\n        );\r\n        sessionStorage.setItem(\r\n          \"volunterEditlat\",\r\n          sessionStorage.getItem(\"volunterEditTemplat\")\r\n        );\r\n      } else {\r\n        sessionStorage.setItem(\r\n          \"volunterEditLocation\",\r\n          sessionStorage.getItem(\"currentAddress\")\r\n        );\r\n        sessionStorage.setItem(\r\n          \"volunterEditlong\",\r\n          sessionStorage.getItem(\"currentLongitude\")\r\n        );\r\n        sessionStorage.setItem(\r\n          \"volunterEditlat\",\r\n          sessionStorage.getItem(\"currentLatitude\")\r\n        );\r\n      }\r\n      sessionStorage.setItem(\"mapsBack\", \"CollaborationBAVEditVolunteer\");\r\n    }\r\n\r\n    // alert(this.props.history.push(\"/\"+(sessionStorage.getItem(\"mapsBack\"))));\r\n    this.props.history.push(\"/\" + sessionStorage.getItem(\"mapsBack\"));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <Header /> */}\r\n        {/* <Container className=\"all-header-space\"></Container> */}\r\n        {/* <Row className=\"pt-1\">\r\n              <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"1\" xl=\"1\" xxl=\"1\" className=\"back-arrow-icon-style pl-4\">\r\n                <Link onClick={this.backButton} to = {sessionStorage.getItem(\"mapsBack\")}>\r\n                  <MDBIcon icon=\"arrow-circle-left\" size=\"2x\" className=\"back-arrow-icon\"/>\r\n                </Link>\r\n              </Col>\r\n              <Col xs=\"7\" sm=\"7\" md=\"7\" lg=\"10\" xl=\"10\" xxl=\"10\" className=\"line-heightmaps start-new-Idea-heading\">\r\n                Select Location\r\n              </Col>\r\n              <Col xs=\"3\" sm=\"3\" md=\"3\" lg=\"1\" xl=\"1\" xxl=\"1\" className=\" start-new-Idea-heading Doneright\">\r\n              <label onClick={this.Submit} class=\"geolocation-button-style line-heightmaps\">Done</label>\r\n              </Col>\r\n            </Row>\r\n            <hr className=\"bold-hr\"></hr> */}\r\n\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              <Link\r\n                onClick={this.backButton}\r\n                to={sessionStorage.getItem(\"mapsBack\")}\r\n              >\r\n                <MDBIcon\r\n                  icon=\"chevron-circle-left\"\r\n                  size=\"2x\"\r\n                  className=\"back-arrow-icon\"\r\n                />\r\n              </Link>\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">Select Location</label>\r\n            </Col>\r\n\r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\" className=\"pl-0\">\r\n              <label onClick={this.Submit} className=\"Save-Geo\">\r\n                Done\r\n              </label>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <LoadMaps />\r\n\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DefaultMapsLoadComponent;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Profile\\Profile.js",["699","700","701"],"import React, { Component } from \"react\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport \"./Profile.css\";\r\nimport MyProfile from \"../Profile-myProfile\";\r\nimport ChangePassword from \"../Profile-changePassword\";\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Footer from \"../Footer\";\r\nimport AccountBoxRoundedIcon from '@material-ui/icons/AccountBoxRounded';\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport HeaderLogo from \"../../assets/HeaderLogo.png\";\r\n\r\nclass Profile extends Component {\r\n\r\n  constructor(props) {\r\n  super(props);\r\n  if(sessionStorage.getItem(\"login_type\") === \"google\" || sessionStorage.getItem(\"login_type\") === \"facebook\"){\r\n       this.state = {\r\n        changePasswordDisabled:true\r\n      } \r\n     }else{\r\n       this.state = {\r\n        changePasswordDisabled:false\r\n      }  \r\n     }\r\n   } ;\r\n       \r\n   \r\n     \r\n  render() {\r\n\r\n    return <div>\r\n\r\n      <Container fluid className=\"header-style\">\r\n          <Row className=\"forget-password-header-height-style_SAT\">\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\" className=\"header-title-style_SAT\">\r\n              {/* <label class=\"header-heading-label-style\">Menu</label> */}\r\n              <img className=\"forgetheader-profile-image-style\" src={HeaderLogo} alt=\"\" />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n      {/* <Container fluid className=\"header-style\">\r\n        <div>\r\n          <Row className=\"verifyotp-header\">\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\" className=\"dashboard-header-title-style_SAT\"><label>THIRUVANANTHAPURAM <br /> CONNECT</label></Col>\r\n          </Row>\r\n        </div>\r\n      </Container> */}\r\n      \r\n        <Container className=\"profile-header-space\"></Container>\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n          <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"8\" xl=\"8\" xxl=\"8\" className=\"bg-container-style-opacity\">\r\n            <Tabs defaultActiveKey=\"MyProfile\" id=\"Profile-tab\" className=\"pt-1\">\r\n              <Tab eventKey=\"MyProfile\"  title={<span><MDBIcon icon=\"address-book\" className=\"profile-tabs-icon-style\" /> Profile Information </span>} tabClassName=\"my-profile-tab-style pt-0 pr-0 pl-0 \">\r\n                <MyProfile />\r\n              </Tab>\r\n              <Tab eventKey=\"ChangePassword\"  disabled={this.state.changePasswordDisabled} title={<span><MDBIcon icon=\"user-lock\" className=\"profile-tabs-icon-style\" /> Change Password </span>} tabClassName=\"my-profile-tab-style pt-0 pr-0 pl-0\">\r\n                <ChangePassword />\r\n              </Tab>\r\n            </Tabs>\r\n            <Row className=\"pt-5 pb-5\"/>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        <Footer></Footer>\r\n\r\n      {/* <Container fluid className=\"header-style\">\r\n        <div>\r\n          <Row className=\"verifyotp-header\">\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\" className=\"dashboard-header-title-style_SAT\"><label>THIRUVANANTHAPURAM <br /> CONNECT</label></Col>\r\n          </Row>\r\n        </div>\r\n      </Container>\r\n      <Container className=\"profile-header-space\"></Container>\r\n      <Tabs defaultActiveKey=\"MyProfile\" id=\"Profile-tab\" className=\"pt-1\">\r\n            <AccountBoxIcon className=\"login-icon-color\" />\r\n            <Tab eventKey=\"MyProfile\" title=\"Profile Information\" tabClassName=\"my-profile-tab-style pt-0 pr-0 pl-0\">\r\n              <MyProfile />\r\n            </Tab>\r\n            <Tab eventKey=\"ChangePassword\" title=\"Change Password\" tabClassName=\"my-profile-tab-style pt-0 pr-0 pl-0\">\r\n              <ChangePassword />\r\n            </Tab>\r\n      </Tabs>\r\n      <Row className=\"pt-5 pb-5\"/>\r\n      <Footer/> */}\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default withRouter(Profile);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Registration\\Registration.js",["702","703","704","705","706"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\r\nimport CallOutlinedIcon from \"@material-ui/icons/CallOutlined\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport LoginHeadings from \"../../jsonFiles/UserInfoJson/userLogin\";\r\nimport LocationCityIcon from \"@material-ui/icons/LocationCity\";\r\nimport RoomOutlinedIcon from \"@material-ui/icons/RoomOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport \"./Registration.css\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Select from \"react-select\";\r\nimport CategoryListOfAPI from \"../../jsonFiles/UserInfoJson/categoryList\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport HeaderLogo from \"../../assets/HeaderLogo.png\";\r\n\r\nclass Registration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      emailValue_SAT: \"\",\r\n      emailValidate_SAT: false,\r\n      full_nameValue_SAT: \"\",\r\n      full_nameValidate_SAT: false,\r\n      phone_numberValue_SAT: \"\",\r\n      phone_numberValidate_SAT: false,\r\n      cityValue_HMD: \"\",\r\n      cityValidate_HMD: false,\r\n      pincode_Value_HMD: \"\",\r\n      pincode_Validate_HMD: false,\r\n      passValue_SAT: \"\",\r\n      passValidate_SAT: false,\r\n      confpassValue_SAT: \"\",\r\n      confpassValidate_SAT: false,\r\n      APIResponse: \"\",\r\n      SubmitAlert: false,\r\n      dialogBoxStatus: false,\r\n      pincode: \"\",\r\n      pinCodeValue: null,\r\n      pinCodeValidate_SAT: false,\r\n      pinCodeList: CategoryListOfAPI.PinCodeList,\r\n      passwordVisible: false,\r\n      conPasswordVisible: false,\r\n      ward_id: \"\",\r\n    };\r\n    this.emailValidate_SAT = this.emailValidate_SAT.bind(this);\r\n    this.full_nameValidate_SAT = this.full_nameValidate_SAT.bind(this);\r\n    this.phone_numberValidate_SAT = this.phone_numberValidate_SAT.bind(this);\r\n    this.cityValidate_HMD = this.cityValidate_HMD.bind(this);\r\n    this.pincode_Validate_HMD_HMD = this.pincode_Validate_HMD.bind(this);\r\n    this.passValidate_SAT = this.passValidate_SAT.bind(this);\r\n    this.confpassValidate_SAT = this.confpassValidate_SAT.bind(this);\r\n    this.submit_SAT = this.submit_SAT.bind(this);\r\n    this.passwordVisible = this.passwordVisible.bind(this);\r\n    this.conPasswordVisible = this.conPasswordVisible.bind(this);\r\n\r\n    // this.passwordValidate_SAT = this.passwordValidate_SAT.bind(this);\r\n    // this.submit_SAT = this.submit_SAT.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.style = \"background: #d6e2e6\";\r\n    document.body.style =\r\n      \"#f3f3f3 url('../../assets/curvebg2.png') no-repeat right top height : 100%\";\r\n    // console.log(\"User Login email ID = \", user_data.LoginDetails);\r\n    this.getPinCodeList();\r\n  }\r\n\r\n  pinCodeValidate_SAT = (Selected_option) => {\r\n    this.setState({\r\n      pincode: Selected_option,\r\n      pinCodeValidate_SAT: true,\r\n      ward_id: Selected_option.ward_id,\r\n    });\r\n  };\r\n\r\n  getPinCodeList() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n      }),\r\n    };\r\n\r\n    fetch(\"https://scity.gmmspl.com:3000/smartcity/pincode\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.message === \"Pincode Data Found\") {\r\n          const options = this.state.APIResponse.data.map((d) => ({\r\n            value: d.pincode,\r\n            label: d.ward_name + \" - \" + d.pincode,\r\n            ward_id: d.ward_id,\r\n          }));\r\n          this.setState({ pinCodeList: options });\r\n        } else {\r\n          toast.error(\"Something went wrong, Please try again\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () => this.props.history.push(\"/\"),\r\n          });\r\n        }\r\n      })\r\n      .catch(function () {\r\n        toast.error(\"Server is down. please try again after sometime\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n      });\r\n  }\r\n\r\n  emailValidate_SAT = (e) => {\r\n    var email = e.target.value.trim();\r\n    if (email != null || email !== \"\") {\r\n      this.setState({\r\n        emailValidate_SAT: true,\r\n        emailValue_SAT: email,\r\n      });\r\n    }\r\n  };\r\n\r\n  cityValidate_HMD = (e) => {\r\n    var city = e.target.value.trim();\r\n    if (city != null || city !== \"\") {\r\n      this.setState({\r\n        cityValidate_HMD: true,\r\n        cityValue_HMD: city,\r\n      });\r\n    }\r\n  };\r\n\r\n  pincode_Validate_HMD = (e) => {\r\n    var pincode = e.target.value.trim();\r\n    if (pincode != null || pincode !== \"\") {\r\n      this.setState({\r\n        pincode_Validate_HMD: true,\r\n        pincode_Value_HMD: pincode,\r\n      });\r\n    }\r\n  };\r\n\r\n  full_nameValidate_SAT = (e) => {\r\n    var full_name = e.target.value;\r\n    if (full_name != null || full_name !== \"\" || full_name != undefined) {\r\n      this.setState({\r\n        full_nameValue_SAT: full_name,\r\n        full_nameValidate_SAT: true,\r\n      });\r\n      // console.log(\"full_nameValue_SAT \", this.state.full_nameValue_SAT);\r\n    } else {\r\n      this.setState({\r\n        full_nameValue_SAT: full_name,\r\n        full_nameValidate_SAT: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  phone_numberValidate_SAT = (e) => {\r\n    var phone_number = e.target.value.trim();\r\n    // if (phone_number != null || phone_number !== \"\") {\r\n    this.setState({\r\n      phone_numberValue_SAT: phone_number,\r\n      phone_numberValidate_SAT: true,\r\n    });\r\n    // }\r\n  };\r\n\r\n  passValidate_SAT = (e) => {\r\n    var password = e.target.value.trim();\r\n    if (password != null || password !== \"\") {\r\n      this.setState({\r\n        passValue_SAT: password,\r\n        passValidate_SAT: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        passValue_SAT: password,\r\n        passValidate_SAT: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  confpassValidate_SAT = (e) => {\r\n    var confirm_password = e.target.value.trim();\r\n    if (confirm_password != null || confirm_password !== \"\") {\r\n      this.setState({\r\n        confpassValue_SAT: confirm_password,\r\n        confpassValidate_SAT: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        confpassValue_SAT: confirm_password,\r\n        confpassValidate_SAT: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  conPasswordVisible = (e) => {\r\n    if (this.state.conPasswordVisible == false) {\r\n      this.setState({\r\n        conPasswordVisible: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        conPasswordVisible: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  passwordVisible = (e) => {\r\n    if (this.state.passwordVisible == false) {\r\n      this.setState({\r\n        passwordVisible: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        passwordVisible: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  submit_SAT() {\r\n    // console.log(\"full_nameValue_SAT \", this.state.full_nameValue_SAT, \"full_nameValidate_SAT = \", this.state.full_nameValidate_SAT);\r\n    // console.log(\"phone_numberValue_SAT \", this.state.phone_numberValue_SAT, \"full_nameValidate_SAT = \", this.state.phone_numberValidate_SAT) ;\r\n    // console.log(\"emailValue_SAT \", this.state.emailValue_SAT, \"emailValidate_SAT = \", this.state.emailValidate_SAT);\r\n    // console.log(\"cityValue_HMD\", this.state.cityValue_HMD, \"cityValue_HMD = \", this.state.cityValidate_HMD);\r\n    // console.log(\"pincode_Value_HMD\", this.state.pincode_Value_HMD, \"pincode_Value_HMD = \", this.state.pincode_Validate_HMD);\r\n    // console.log(\"passValue_SAT \", this.state.passValue_SAT, \"passValidate_SAT = \", this.state.passValidate_SAT);\r\n    // console.log(\"confpassValue_SAT \", this.state.confpassValue_SAT, \"confpassValidate_SAT = \", this.state.confpassValidate_SAT);\r\n\r\n    if (this.state.passValue_SAT === this.state.confpassValue_SAT) {\r\n      if (\r\n        this.state.full_nameValidate_SAT &&\r\n        this.state.emailValidate_SAT &&\r\n        this.state.passValidate_SAT &&\r\n        this.state.confpassValidate_SAT &&\r\n        this.state.phone_numberValidate_SAT &&\r\n        this.state.pincode.value\r\n      ) {\r\n        const requestOptions = {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            full_name: this.state.full_nameValue_SAT,\r\n            phonenumber: this.state.phone_numberValue_SAT,\r\n            // \"last_name\": this.state.LastNameValue,\r\n            email: this.state.emailValue_SAT,\r\n            password: this.state.passValue_SAT,\r\n            pincode: this.state.pincode.value,\r\n            ward_id: this.state.ward_id,\r\n          }),\r\n        };\r\n        fetch(\r\n          \"https://scity.gmmspl.com:3000/smartcity/register\",\r\n          requestOptions\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            this.setState({\r\n              APIResponse: data,\r\n            });\r\n            // console.log(\"APIResponse = \", this.state.APIResponse);\r\n            if (\r\n              this.state.APIResponse.message ===\r\n              \"Registration is done successfully.\"\r\n            ) {\r\n              sessionStorage.setItem(\r\n                \"phoneNumber\",\r\n                this.state.phone_numberValue_SAT\r\n              );\r\n\r\n              // console.log(\"PhoneNumber\", this.state.APIResponse.data.user_id);\r\n              this.props.history.push(\"/verifyotp\");\r\n            } else if (\r\n              this.state.APIResponse.message ===\r\n              \"Email or Phone Number already exist.\"\r\n            ) {\r\n              if (\r\n                this.state.APIResponse.account_verification_flag === \"inactive\"\r\n              ) {\r\n                sessionStorage.setItem(\r\n                  \"phoneNumber\",\r\n                  this.state.phone_numberValue_SAT\r\n                );\r\n                // console.log(\"PhoneNumber\", this.state.APIResponse.data.user_id);\r\n                toast.warn(\"Your account is not activated please verify OTP\", {\r\n                  position: \"top-center\",\r\n                  autoClose: 3000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  draggable: true,\r\n                  progress: undefined,\r\n                  theme: \"light\",\r\n                  onClose: () => this.props.history.push(\"/verifyotp\"),\r\n                });\r\n              } else if (\r\n                this.state.APIResponse.account_verification_flag === \"active\"\r\n              ) {\r\n                toast.warn(\"Already registered user, please login\", {\r\n                  position: \"top-center\",\r\n                  autoClose: 3000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  draggable: true,\r\n                  progress: undefined,\r\n                  theme: \"light\",\r\n                  onClose: () => this.props.history.push(\"/\"),\r\n                });\r\n                // this.props.history.push(\"/\");\r\n              }\r\n            } else {\r\n              if (\r\n                this.state.APIResponse.data.passcode ===\r\n                \"Passcode should be at least 8 characters.\"\r\n              ) {\r\n                toast.error(\"Password should be at least 8 characters,should contain atleast one lowercase, one uppercase, one number,one special charcter\", {\r\n                  position: \"top-center\",\r\n                  autoClose: 3000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  draggable: true,\r\n                  progress: undefined,\r\n                  theme: \"light\",\r\n                });\r\n              }\r\n              if (this.state.APIResponse.data.email === \"Email is required..\") {\r\n                toast.error(\"Email Id is required.\", {\r\n                  position: \"top-center\",\r\n                  autoClose: 3000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  draggable: true,\r\n                  progress: undefined,\r\n                  theme: \"light\",\r\n                });\r\n              }\r\n              if (\r\n                this.state.APIResponse.data.email ===\r\n                \"Email should be between 2 and 50 characters.\"\r\n              ) {\r\n                toast.error(\"Please enter valid Email Id.\", {\r\n                  position: \"top-center\",\r\n                  autoClose: 3000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  draggable: true,\r\n                  progress: undefined,\r\n                  theme: \"light\",\r\n                });\r\n              }\r\n              if (\r\n                this.state.APIResponse.data.full_name ===\r\n                \"Username should be between 2 and 30 characters.\"\r\n              ) {\r\n                toast.error(\"Please enter valid Name \", {\r\n                  position: \"top-center\",\r\n                  autoClose: 3000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  draggable: true,\r\n                  progress: undefined,\r\n                  theme: \"light\",\r\n                });\r\n              }\r\n            }\r\n          });\r\n      } else {\r\n        toast.error(\"Please fill all mandatory fields\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n      }\r\n    } else {\r\n      toast.error(\"Passwords does not match\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      dialogBoxStatus: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"pageImage-style\">\r\n        <Container className=\"reg-bgImage-style\">\r\n          <Row>\r\n            <Col xs=\"0\" sm=\"0\" md=\"4\" lg=\"4\" xl=\"4\" xxl=\"4\"></Col>\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"4\" xl=\"4\" xxl=\"4\">\r\n              <Row className=\"login-title-style-row_SAT\">\r\n                <Col xs=\"1\" sm=\"1\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n                <Col\r\n                  xs=\"10\"\r\n                  sm=\"10\"\r\n                  md=\"8\"\r\n                  lg=\"8\"\r\n                  xl=\"8\"\r\n                  xxl=\"8\"\r\n                  className=\"p-5\"\r\n                >\r\n                  {/* <h2 class=\"signup-title-style_HMD\">{LoginHeadings.Login_HEADING_SAT}</h2> */}\r\n                  <img\r\n                    className=\"forgetheader-profile-image-style\"\r\n                    src={HeaderLogo}\r\n                    alt=\"\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"1\" sm=\"1\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n              </Row>\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"4\" lg=\"4\" xl=\"4\" xxl=\"4\"></Col>\r\n          </Row>\r\n\r\n          <div class=\"reg-content-container pl-0 pr-0\">\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col\r\n                xs=\"12\"\r\n                sm=\"12\"\r\n                md=\"12\"\r\n                lg=\"6\"\r\n                xl=\"6\"\r\n                xxl=\"6 \"\r\n                className=\" pt-4 login-welcome-text-style \"\r\n              >\r\n                <label class=\"signup-title\">{LoginHeadings.Sign_UP_HMD}</label>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col\r\n                xs=\"12\"\r\n                sm=\"12\"\r\n                md=\"12\"\r\n                lg=\"6\"\r\n                xl=\"6\"\r\n                xxl=\"6\"\r\n                className=\"login-text-message-style\"\r\n              >\r\n                <label class=\"sign-up-sub-title\">\r\n                  {LoginHeadings.Sign_UPMESSAGE_HMD}\r\n                </label>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n            <Row className=\"pt-3\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <PermIdentityIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-field-width-style\">\r\n                    {/* <Tooltip title=\"Please enter your full name\" placement=\"bottom\" TransitionProps={{ timeout: 600 }} arrow> */}\r\n                    <TextField\r\n                      id=\"input-with-icon-grid\"\r\n                      label=\"Full Name\"\r\n                      value={this.state.value}\r\n                      onChange={this.full_nameValidate_SAT}\r\n                      required\r\n                    />\r\n                    {/* </Tooltip> */}\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n            <Row className=\"pt-3\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <CallOutlinedIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-field-width-style\">\r\n                    <TextField\r\n                      type=\"number\"\r\n                      inputmode=\"numeric\"\r\n                      id=\"input-with-icon-grid\"\r\n                      maxLength=\"10\"\r\n                      pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{3}\"\r\n                      label=\"Phone Number\"\r\n                      value={this.state.value}\r\n                      onChange={this.phone_numberValidate_SAT}\r\n                      onInput={(e) =>\r\n                        (e.target.value = e.target.value.slice(0, 10))\r\n                      }\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n            <Row className=\"pt-3\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <MailOutlineIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-field-width-style\">\r\n                    <TextField\r\n                      id=\"input-with-icon-grid\"\r\n                      label=\"Email\"\r\n                      value={this.state.value}\r\n                      onChange={this.emailValidate_SAT}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n            <Row className=\"pt-3\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <LocationCityIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-field-width-style\">\r\n                    <TextField\r\n                      id=\"input-with-icon-grid\"\r\n                      label=\"City\"\r\n                      value=\"Thiruvananthapuram\"\r\n                      onChange={this.cityValidate_HMD}\r\n                      disable\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <RoomOutlinedIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-field-width-style\">\r\n                    {/* <TextField id=\"input-with-icon-grid\" label=\"Pincode\" value={this.state.pincode} onChange={this.pincode_Validate_HMD}  required/> */}\r\n                    <Select\r\n                     placeholder={\r\n                      <label>\r\n                       Pincode\r\n                        <span class=\"select-astric-red\"> *</span>\r\n                      </label>\r\n                    }\r\n                      isSearchable={true}\r\n                      className=\"category-drop-style\"\r\n                      value={this.state.pincode}\r\n                      onChange={this.pinCodeValidate_SAT}\r\n                      // labelKey='blood_group'\r\n                      // valueKey='blood_group_id'\r\n                      options={this.state.pinCodeList}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row className=\"pt-3\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <LockOutlinedIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-password-field-width-style\">\r\n                    <Tooltip\r\n                      // title=\"Password should contain at least 1 captial alphabet, 1 small alphabet, 1 numeric, 1 special symbol and minimum length 8 charecter\"\r\n                      title={\r\n                        <div>\r\n                          <label class=\"pb-1 pt-3\">Password Must :</label>\r\n                          <ul class=\"pr-4\">\r\n                            <li class=\"pb-2\">Contain 8 characters or more</li>\r\n                            <li class=\"pb-2\">\r\n                              Contain at least one lowercase character\r\n                            </li>\r\n                            <li class=\"pb-2\">\r\n                              Contain at least one uppercase character\r\n                            </li>\r\n                            <li class=\"pb-2\">Contain at least one number</li>\r\n                            <li class=\"pb-2\">\r\n                              Contain at least one symbol (like !@#$%^)\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      }\r\n                      placement=\"bottom\"\r\n                      TransitionProps={{ timeout: 600 }}\r\n                      arrow\r\n                      className=\"tooltip-style\"\r\n                    >\r\n                      <div>\r\n                        {!this.state.passwordVisible && (\r\n                          <TextField\r\n                            type=\"password\"\r\n                            id=\"input-with-icon-grid\"\r\n                            label=\"Password\"\r\n                            value={this.state.passValue_SAT}\r\n                            onChange={this.passValidate_SAT}\r\n                            required\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\" className=\"p-0\">\r\n                                  <IconButton>\r\n                                    <VisibilityOffIcon\r\n                                      className=\"login-icon-color\"\r\n                                      onClick={this.passwordVisible}\r\n                                    />\r\n                                  </IconButton>\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        )}\r\n                        {this.state.passwordVisible && (\r\n                          <TextField\r\n                            type=\"text\"\r\n                            id=\"input-with-icon-grid\"\r\n                            label=\"Password\"\r\n                            value={this.state.passValue_SAT}\r\n                            onChange={this.passValidate_SAT}\r\n                            required\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\" className=\"p-0\">\r\n                                  <IconButton>\r\n                                    <VisibilityIcon\r\n                                      className=\"login-icon-color\"\r\n                                      onClick={this.passwordVisible}\r\n                                    />\r\n                                  </IconButton>\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n            <Row className=\"pt-3\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <LockOutlinedIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-password-field-width-style\">\r\n                    <Tooltip\r\n                      // title=\"Password should contain at least 1 captial alphabet, 1 small alphabet, 1 numeric, 1 special symbol and minimum length 8 charecter\"\r\n                      title={\r\n                        <div>\r\n                          <label class=\"pb-1 pt-3\">Password Must :</label>\r\n                          <ul class=\"pr-4\">\r\n                            <li class=\"pb-2\">Contain 8 characters or more</li>\r\n                            <li class=\"pb-2\">\r\n                              Contain at least one lowercase character\r\n                            </li>\r\n                            <li class=\"pb-2\">\r\n                              Contain at least one uppercase character\r\n                            </li>\r\n                            <li class=\"pb-2\">Contain at least one number</li>\r\n                            <li class=\"pb-2\">\r\n                              Contain at least one symbol (like !@#$%^)\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      }\r\n                      placement=\"bottom\"\r\n                      TransitionProps={{ timeout: 600 }}\r\n                      arrow\r\n                      classes=\"tooltip-style p-0 m-0\"\r\n                    >\r\n                      <div>\r\n                        {!this.state.conPasswordVisible && (\r\n                          <TextField\r\n                            type=\"password\"\r\n                            id=\"input-with-icon-grid\"\r\n                            label=\"Confirm Password\"\r\n                            value={this.state.confpassValue_SAT}\r\n                            onChange={this.confpassValidate_SAT}\r\n                            required\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\" className=\"p-0\">\r\n                                  <IconButton>\r\n                                    <VisibilityOffIcon\r\n                                      className=\"login-icon-color\"\r\n                                      onClick={this.conPasswordVisible}\r\n                                    />\r\n                                  </IconButton>\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        )}\r\n                        {this.state.conPasswordVisible && (\r\n                          <TextField\r\n                            type=\"text\"\r\n                            id=\"input-with-icon-grid\"\r\n                            label=\"Confirm Password\"\r\n                            value={this.state.confpassValue_SAT}\r\n                            onChange={this.confpassValidate_SAT}\r\n                            required\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\" className=\"p-0\">\r\n                                  <IconButton>\r\n                                    <VisibilityIcon\r\n                                      className=\"login-icon-color\"\r\n                                      onClick={this.conPasswordVisible}\r\n                                    />\r\n                                  </IconButton>\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n            <Row className=\"pt-5 pb-3\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col\r\n                xs=\"12\"\r\n                sm=\"12\"\r\n                md=\"12\"\r\n                lg=\"6\"\r\n                xl=\"6\"\r\n                xxl=\"6\"\r\n                className=\"signup-text-message-style\"\r\n              >\r\n                <Button\r\n                  className=\"signup-button-style\"\r\n                  onClick={this.submit_SAT}\r\n                >\r\n                  {LoginHeadings.Sign_UP_HMD}\r\n                </Button>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n            <Row className=\"login-registration-button-style\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Navbar\r\n                  expand=\"lg\"\r\n                  sticky=\"bottom\"\r\n                  className=\"signup-navbar-style\"\r\n                >\r\n                  <Row>\r\n                    <Col className=\"Reg-text-alignment\">\r\n                      <label>\r\n                        <span class=\"Question-reg-login-style\">\r\n                          {LoginHeadings.Sign_UPMESSAGE_BOTTOM_HMD}\r\n                        </span>\r\n                        <Link to=\"/\">\r\n                          <span class=\"register-login-style\">LOGIN</span>\r\n                        </Link>\r\n                      </label>\r\n                    </Col>\r\n                  </Row>\r\n                </Navbar>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n          </div>\r\n          <ToastContainer\r\n            position=\"top-center\"\r\n            autoClose={5000}\r\n            hideProgressBar={false}\r\n            newestOnTop\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover={true}\r\n            className=\"toaster-style\"\r\n          />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Registration;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Polls_Surveys\\Collaboration-pollsSurveys\\Collaboration-pollsSurveys.js",["707","708","709","710","711","712","713","714","715"],"import React, { Component } from \"react\";\r\nimport \"./Collaboration-pollsSurveys.css\";\r\nimport Header from \"../../Dashboard-header\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport CollaborationsHeadings from \"../../../jsonFiles/CollaborationJson/collaborationDetails\";\r\nimport CollaborationPSMostRecent from \"../CollaborationPSMostRecent\";\r\nimport CollaborationPSMostTrending from \"../CollaborationPSMostTrending\";\r\nimport CollaborationPSMostDiscussed from \"../CollaborationPSMostDiscussed\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"../../Footer\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport headerProfile_img from \"../../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport LinesEllipsis from \"react-lines-ellipsis\";\r\n\r\nclass CollaborationPollsSurveys extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // shareIcons: DashboardHeadings.DashIcons\r\n      pollsBinding: CollaborationsHeadings.PollsCard,\r\n      isOpen: false,\r\n      submit: false,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      eventTarget: \"\",\r\n      isLogin: \"\",\r\n      searchCardsValue: \"\",\r\n      searchCardsValidate: false,\r\n    };\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.openMenu = this.openMenu.bind(this);\r\n    this.menuClose = this.menuClose.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n    this.searchCardsValidate = this.searchCardsValidate.bind(this);\r\n    this.search_SAT = this.search_SAT.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.style = \"background-image: url();\";\r\n    document.body.style = \"background: #F9F9F9\";\r\n  }\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n       if(sessionStorage.getItem(\"PSDefaultTab\")){\r\n        sessionStorage.removeItem(\"PSDefaultTab\")\r\n      }\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  searchCardsValidate = (e) => {\r\n    var searchValue = e.target.value;\r\n    if (searchValue != null && searchValue != \"\" && searchValue !== undefined) {\r\n      this.setState({\r\n        searchCardsValue: searchValue,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        searchCardsValue: searchValue,\r\n      });\r\n    }\r\n  };\r\n\r\n  CardDetails = (CardValues) => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login for vote\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      sessionStorage.setItem(\"admin_id\", CardValues.admin_id);\r\n      sessionStorage.setItem(\"poll_id\", CardValues.poll_id);\r\n      sessionStorage.setItem(\"poll_options_id\", CardValues.poll_options_id);\r\n      sessionStorage.setItem(\"pollDetailBack\", \"collaboration-pollsSurveys\");\r\n      this.props.history.push(\"/collaboration-pollsSurveysDetails\");\r\n    }\r\n  };\r\n\r\n  search_SAT = (e) => {\r\n    this.state.searchCardsValidate = true;\r\n    if (this.state.searchCardsValidate) {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          user_id: sessionStorage.getItem(\"user_id\"),\r\n          token: sessionStorage.getItem(\"token\"),\r\n          search_text: this.state.searchCardsValue,\r\n        }),\r\n      };\r\n\r\n      fetch(\"https://scity.gmmspl.com:3000/poll/searchpoll\", requestOptions)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          if (this.state.APIResponse.message === \"Data found\") {\r\n            var JsonDate = this.state.APIResponse.data;\r\n            this.setState({\r\n              pollsBinding: JsonDate,\r\n            });\r\n          } else {\r\n            toast.error(\"Data is not available.\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n            this.setState({\r\n              searchCardsValidate: false,\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <Header />\r\n      <Container className=\"inner-header-space\"></Container> */}\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              <Link to={CollaborationsHeadings.NavigateTo} onClick={()=>{sessionStorage.removeItem(\"PSDefaultTab\")}}>\r\n                <Tooltip\r\n                  title=\"Polls\"\r\n                  placement=\"top\"\r\n                  TransitionProps={{ timeout: 600 }}\r\n                >\r\n                  <MDBIcon\r\n                    icon=\"chevron-circle-left\"\r\n                    size=\"2x\"\r\n                    className=\"back-arrow-icon\"\r\n                  />\r\n                </Tooltip>\r\n              </Link>\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">\r\n                {CollaborationsHeadings.Collaboration_POLLS_SURVEYS_HEADING}\r\n              </label>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            <Row className=\"search-bar-allignemt-style\">\r\n              <Col xs=\"1\" sm=\"1\" md=\"4\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n              <Col\r\n                xs=\"10\"\r\n                sm=\"10\"\r\n                md=\"8\"\r\n                lg=\"6\"\r\n                xl=\"6\"\r\n                xxl=\"6\"\r\n                className=\"small-screen-padding\"\r\n              >\r\n                <TextField\r\n                  value={this.state.searchCardsValue}\r\n                  onChange={this.searchCardsValidate}\r\n                  placeholder=\"Search here...\"\r\n                  className=\"serach-bar-style\"\r\n                  id=\"outlined-search\"\r\n                  type=\"search\"\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton>\r\n                          <MDBIcon\r\n                            icon=\"search\"\r\n                            className=\"search-bar-icon-style\"\r\n                            onClick={this.search_SAT}\r\n                          />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col xs=\"1\" sm=\"1\" md=\"0\" lg=\"0\" xl=\"0\" xxl=\"0\"></Col>\r\n            </Row>\r\n            <div class=\"inner-container-style-collaboration\">\r\n              <Row className=\"inner-container-banner-margin\">\r\n                <Col\r\n                  xs=\"12\"\r\n                  sm=\"12\"\r\n                  md=\"12\"\r\n                  lg=\"12\"\r\n                  xl=\"12\"\r\n                  xxl=\"12\"\r\n                  className=\"polls-banners banner-submenu-style\"\r\n                >\r\n                  <Row>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                      {/* <Row className=\"pl-3  collaboration-banner-text\">Polls/Surveys</Row> */}\r\n                      {/* <Row className=\"pl-3 pt-4  collaboration-banner-text2\"></Row> */}\r\n                      <Row className=\"pl-3 banner-textpadding collaboration-banner-text3\">\r\n                        Vote to share your views with the civic authorities{\" \"}\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n\r\n              {!this.state.searchCardsValidate && (\r\n                <div>\r\n                  <Tabs\r\n                    defaultActiveKey={sessionStorage.getItem(\"PSDefaultTab\") ? sessionStorage.getItem(\"PSDefaultTab\") : \"MostRecent\"}\r\n                    id=\"shareIdeas-tab\"\r\n                    className=\"pt-4\"\r\n                    onSelect={(key)=>{sessionStorage.setItem(\"PSDefaultTab\",key);}}\r\n                  >\r\n                    <Tab\r\n                      eventKey=\"MostRecent\"\r\n                      title=\"Most Recent\"\r\n                      tabClassName=\"pollsSurveys-tab-style\"\r\n                    >\r\n                      <CollaborationPSMostRecent />\r\n                    </Tab>\r\n                    <Tab\r\n                      eventKey=\"Trending\"\r\n                      title=\"Trending\"\r\n                      tabClassName=\"pollsSurveys-tab-style\"\r\n                    >\r\n                      <CollaborationPSMostTrending />\r\n                    </Tab>\r\n                    <Tab\r\n                      eventKey=\"MostDiscussed\"\r\n                      title=\"Most Discussed\"\r\n                      tabClassName=\"pollsSurveys-tab-style\"\r\n                    >\r\n                      <CollaborationPSMostDiscussed />\r\n                    </Tab>\r\n                  </Tabs>\r\n                </div>\r\n              )}\r\n              {this.state.searchCardsValidate && (\r\n                <Container className=\"tab-card-container-style\">\r\n                  <Row>\r\n                    {this.state.pollsBinding.map((CardValues, index) => (\r\n                      <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                        <Card className=\"tab-card-style \">\r\n                          <div class=\"card-top-border\"></div>\r\n                          <Row className=\"pt-3\">\r\n                            <Col\r\n                              xs=\"10\"\r\n                              sm=\"10\"\r\n                              md=\"10\"\r\n                              lg=\"10\"\r\n                              xl=\"10\"\r\n                              xxl=\"10\"\r\n                              className=\"pl-4\"\r\n                            >\r\n                              <Card.Title\r\n                                id=\"rcorners1\"\r\n                                className=\"tab-card-heading-style\"\r\n                              >\r\n                                {CardValues.poll_category_name}\r\n                              </Card.Title>\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"2\"\r\n                              sm=\"2\"\r\n                              md=\"2\"\r\n                              lg=\"2\"\r\n                              xl=\"2\"\r\n                              xxl=\"2\"\r\n                            ></Col>\r\n                          </Row>\r\n\r\n                          <Card.Subtitle className=\"\">\r\n                            <Row className=\"tab-card-subject-style\">\r\n                              <Col className=\"p-0\">\r\n                                <LinesEllipsis\r\n                                  text={CardValues.poll_subject}\r\n                                  maxLine=\"2\"\r\n                                  ellipsis={\r\n                                    <span\r\n                                      style={{\r\n                                        color: \"blue\",\r\n                                        fontSize: \"10px\",\r\n                                      }}\r\n                                    >\r\n                                      {\" \"}\r\n                                      ...\r\n                                    </span>\r\n                                  }\r\n                                  trimRight\r\n                                  basedOn=\"letters\"\r\n                                  // onReflow = {this.handleReflow}\r\n                                />\r\n                              </Col>\r\n                            </Row>\r\n                          </Card.Subtitle>\r\n\r\n                          <Card.Body className=\"p-0\">\r\n                            <Card.Text className=\"tab-card-body-style  mb-2\">\r\n                              <span className=\"pollDates\">Start Date :</span>{\" \"}\r\n                              {CardValues.d_start_date}\r\n                              <p>\r\n                                {\" \"}\r\n                                <span className=\"pollDates\">\r\n                                  End Date :\r\n                                </span>{\" \"}\r\n                                {CardValues.d_end_date}\r\n                              </p>\r\n                              <p className=\"card-comments-style\">\r\n                                <label id=\"rcorners-comment-count\">\r\n                                  {CardValues.votes}{\" \"}\r\n                                  <span class=\"comments-count-style\">\r\n                                    Votes\r\n                                  </span>\r\n                                </label>\r\n                              </p>\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                              <Row className=\"pt-3 card-footer__events\">\r\n                                <Col\r\n                                  xs=\"3\"\r\n                                  sm=\"3\"\r\n                                  md=\"3\"\r\n                                  lg=\"3\"\r\n                                  xl=\"3\"\r\n                                  className=\"card-profile-image-col-style\"\r\n                                >\r\n                                  <img\r\n                                    src={\r\n                                      \"https://scity.gmmspl.com:3000/\" +\r\n                                      CardValues.cardProfileImage\r\n                                    }\r\n                                    alt=\"\"\r\n                                    class=\"card-profile-image-style\"\r\n                                  />\r\n                                </Col>\r\n                                <Col\r\n                                  xs=\"5\"\r\n                                  sm=\"5\"\r\n                                  md=\"5\"\r\n                                  lg=\"5\"\r\n                                  xl=\"5\"\r\n                                  className=\"card-image-imfo-style pr-0\"\r\n                                >\r\n                                  <Row className=\"card-image-profile-name-style\">\r\n                                    <label className=\"pl-1 pt-2\">\r\n                                      {CardValues.full_name}\r\n                                    </label>\r\n                                  </Row>\r\n\r\n                                  {/* <Row className=\"card-image-imfo-row-style\"><label>Start Date : {CardValues.d_start_date}</label></Row>\r\n                <Row className=\"card-image-imfo-row-style\"><label>End Date : {CardValues.d_end_date}</label></Row> */}\r\n                                </Col>\r\n                                <Col\r\n                                  xs=\"4\"\r\n                                  sm=\"4\"\r\n                                  md=\"4\"\r\n                                  lg=\"4\"\r\n                                  xl=\"4\"\r\n                                  className=\"p-0 card-icon-alignment\"\r\n                                >\r\n                                  <div>\r\n                                    <span class=\"\">\r\n                                      <MDBIcon\r\n                                        far\r\n                                        icon=\"eye\"\r\n                                        size=\"sm\"\r\n                                        className=\"card-icon-style\"\r\n                                        onClick={() =>\r\n                                          this.CardDetails(CardValues)\r\n                                        }\r\n                                      />\r\n                                    </span>\r\n                                    <span class=\"pl-2 \">\r\n                                      <MDBIcon\r\n                                        icon=\"vote-yea\"\r\n                                        size=\"sm\"\r\n                                        className=\"card-icon-style\"\r\n                                        onClick={() =>\r\n                                          this.CardDetails(CardValues)\r\n                                        }\r\n                                      />\r\n                                    </span>\r\n                                  </div>\r\n                                </Col>\r\n                              </Row>\r\n                            </Card.Text>\r\n                          </Card.Body>\r\n                        </Card>\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                  <Row className=\"pb-5\"></Row>\r\n                </Container>\r\n              )}\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        <Footer />\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={3000}\r\n          hideProgressBar={false}\r\n          newestOnTop\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover={false}\r\n          className=\"toaster-style\"\r\n        />\r\n\r\n        {/* <Container>\r\n          <Tabs defaultActiveKey=\"MostRecent\" id=\"shareIdeas-tab\" className=\"pt-4\">\r\n            <Tab eventKey=\"MostRecent\" title=\"Most Recent\" tabClassName=\"pollsSurveys-tab-style\">\r\n              <CollaborationPSMostRecent />\r\n            </Tab>\r\n            <Tab eventKey=\"Trending\" title=\"Trending\" tabClassName=\"pollsSurveys-tab-style\">\r\n              <CollaborationPSMostTrending />\r\n            </Tab>\r\n            <Tab eventKey=\"MostDiscussed\" title=\"Most Discussed\" tabClassName=\"pollsSurveys-tab-style\">\r\n              <CollaborationPSMostDiscussed />\r\n            </Tab>\r\n          </Tabs>\r\n\r\n        </Container>\r\n        <Row className=\"pt-5 pb-5\"></Row>\r\n          <Footer /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CollaborationPollsSurveys;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Forget-password\\Forget-password.js",["716","717"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"./Forget-password.css\";\r\nimport HeaderLogo from \"../../assets/HeaderLogo.png\";\r\nimport passwordwindow from \"../../assets/passwordwindow.png\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PhoneOutlinedIcon from \"@material-ui/icons/PhoneOutlined\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import CaptchaTextGenerator from 'react-captcha-generator';\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClientCaptcha from \"react-client-captcha\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// import { loadCaptchaEnginge, LoadCanvasTemplate, LoadCanvasTemplateNoReload, validateCaptcha } from 'react-simple-captcha';\r\n\r\nclass ForgetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      phone_numberValue_SAT: \"\",\r\n      phone_numberValidate_SAT: false,\r\n      captchaValue_SAT: \"\",\r\n      captchaValidate_SAT: false,\r\n      captcha: \"\",\r\n      value: \"\",\r\n      refreshflag: false,\r\n      EmailValidate: false,\r\n    };\r\n    this.RefreshCaptcha = this.RefreshCaptcha.bind(this);\r\n    this.captchaValidate_SAT = this.captchaValidate_SAT.bind(this);\r\n    this.GetCaptcha = this.GetCaptcha.bind(this);\r\n    this.Submit = this.Submit.bind(this);\r\n    this.phone_numberValidate_SAT = this.phone_numberValidate_SAT.bind(this);\r\n  }\r\n\r\n  phone_numberValidate_SAT = (e) => {\r\n    var phone_number = e.target.value.trim();\r\n    phone_number = phone_number.slice(0, 10);\r\n    if (phone_number != null || phone_number !== \"\") {\r\n      this.setState({\r\n        phone_numberValue_SAT: phone_number,\r\n        phone_numberValidate_SAT: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        phone_numberValue_SAT: phone_number,\r\n        phone_numberValidate_SAT: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  captchaValidate_SAT = (e) => {\r\n    // console.log(\"Captcha = \", e.target.value);\r\n    // var Captcha = e.target.value.trim();\r\n    var Captcha = e.target.value;\r\n    // phone_number = phone_number.slice(0,10);\r\n    if (Captcha != null || Captcha !== \"\") {\r\n      this.setState({\r\n        captchaValue_SAT: Captcha,\r\n        captchaValidate_SAT: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        captchaValue_SAT: Captcha,\r\n        captchaValidate_SAT: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  Submit() {\r\n    // console.log(\"captchaValue_SAT = \", this.state.captchaValue_SAT);\r\n    // console.log(\"captcha = \", this.state.captcha);\r\n    if (this.state.captchaValue_SAT === this.state.captcha) {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          phonenumber: this.state.phone_numberValue_SAT,\r\n        }),\r\n      };\r\n\r\n      fetch(\r\n        \"https://scity.gmmspl.com:3000/smartcity/forgetpassword\",\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          if (this.state.APIResponse.message === \"OTP send successfully.\") {\r\n            sessionStorage.setItem(\"user_id\", this.state.APIResponse.data);\r\n            sessionStorage.setItem(\r\n              \"phoneNumber\",\r\n              this.state.phone_numberValue_SAT\r\n            );\r\n            this.props.history.push(\"/ForgetPasswordVerifyOTP\");\r\n          } else if (this.state.APIResponse.message === \"User dosenot exist\") {\r\n            toast.warn(\"Please enter registered phone number\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              // onClose: () => this.props.history.push(\"/verifyotp\")\r\n            });\r\n          }  else if (this.state.APIResponse.message === \"Invalid credentials.\") {\r\n            toast.warn(\"Please enter Correct mobile number\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              // onClose: () => this.props.history.push(\"/verifyotp\")\r\n            });\r\n          }\r\n          // Code to handle navigation\r\n        });\r\n    } else \r\n    { if (!this.state.captchaValidate_SAT) {\r\n        toast.warn(\"Please enter captcha\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n          // onClose: () => this.props.history.push(\"/verifyotp\")\r\n        });\r\n      } else {\r\n        toast.warn(\"Please verify the captcha\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n          // onClose: () => this.props.history.push(\"/verifyotp\")\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  GetCaptcha(text) {\r\n    // console.log(\"GetCaptcha = \", text);\r\n    this.setState({\r\n      captcha: text,\r\n    });\r\n  }\r\n\r\n  RefreshCaptcha() {\r\n    if (this.state.refreshflag) {\r\n      this.setState({\r\n        refreshflag: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        refreshflag: false,\r\n      });\r\n    }\r\n\r\n    // window.location.reload(false);\r\n  }\r\n\r\n  check() {\r\n    console.log(\r\n      this.state.captcha,\r\n      this.captchaEnter.value,\r\n      this.state.captcha === this.captchaEnter.value\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"forget-password-header-height-style_SAT\">\r\n            <Col\r\n              xs=\"12\"\r\n              sm=\"12\"\r\n              md=\"12\"\r\n              lg=\"12\"\r\n              xl=\"12\"\r\n              xxl=\"12\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              {/* <label class=\"header-heading-label-style\">Menu</label> */}\r\n              <img\r\n                className=\"forgetheader-profile-image-style\"\r\n                src={HeaderLogo}\r\n                alt=\"\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Row className=\"pt-5\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"12\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"verifyotp-welcome-text-style \"\r\n          >\r\n            <label>Forgot Password ?</label>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n\r\n        <Container>\r\n          <Row>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n              <Grid\r\n                container\r\n                spacing={1}\r\n                alignItems=\"flex-center\"\r\n                className=\"VerifyOTPMuiGrid-spacing-xs-1 > .MuiGrid-item\"\r\n              >\r\n                <Grid item>\r\n                  {/* <passwordwindow className=\"login-icon-color\" /> */}\r\n                  <img src={passwordwindow} alt=\"Logo\" />\r\n                </Grid>\r\n                {/* <Grid item className=\"login-field-width-style\"> */}\r\n                {/* <TextField id=\"input-with-icon-grid\" label=\"Full Name\" value={this.state.value} onChange={this.full_nameValidate_SAT} /> */}\r\n                {/* </Grid> */}\r\n              </Grid>\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          </Row>\r\n\r\n          <Row className=\"pt-3\">\r\n            <Col xs=\"0\" sm=\"0\" md=\"3\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n              <Grid container spacing={1} alignItems=\"flex-end\">\r\n                <Grid item>\r\n                  <PhoneOutlinedIcon className=\"login-icon-color\" />\r\n                </Grid>\r\n                <Grid item className=\"login-field-width-style\">\r\n                  <TextField\r\n                    type=\"number\"\r\n                    inputmode=\"numeric\"\r\n                    id=\"input-with-icon-grid\"\r\n                    maxLength=\"10\"\r\n                    pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{3}\"\r\n                    label=\"Phone Number\"\r\n                    value={this.state.phone_numberValue_SAT}\r\n                    onChange={this.phone_numberValidate_SAT}\r\n                    onInput={(e) =>\r\n                      (e.target.value = e.target.value.slice(0, 10))\r\n                    }\r\n                    required\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          </Row>\r\n\r\n          <Row className=\"pt-5\">\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            <Col\r\n              xs=\"10\"\r\n              sm=\"10\"\r\n              md=\"10\"\r\n              lg=\"6\"\r\n              xl=\"6\"\r\n              xxl=\"6\"\r\n              className=\"pl-0 ml-0\"\r\n            >\r\n              <Row>\r\n                <Col\r\n                  className=\"captcha-style ml-3 pr-0\"\r\n                  xs=\"12\"\r\n                  sm=\"12\"\r\n                  md=\"12\"\r\n                  lg=\"12\"\r\n                  xl=\"12\"\r\n                  xxl=\"12\"\r\n                >\r\n                  {/* <CaptchaTextGenerator \r\n                      textColor=\"#7958af\"\r\n                      background=\"#c9c5c5\"\r\n                      lenght=\"6\"\r\n                      height=\"50\"\r\n                      width=\"180\"\r\n                      paddingTop=\"30\"\r\n                      paddingLeft=\"30\"\r\n                      result={this.result} /> */}\r\n                  <ClientCaptcha\r\n                    captchaCode={this.GetCaptcha}\r\n                    // captchaCode={code => console.log(code)}\r\n                    charsCount=\"6\"\r\n                    fontColor=\"#4833FF\"\r\n                    backgroundColor=\"#e9e9e9\"\r\n                    width=\"300\"\r\n                  />\r\n                </Col>\r\n                {/* <Col className=\"refresh-style\" xs=\"3\" sm=\"3\" md=\"4\" lg=\"3\" xl=\"3\" xxl=\"3\">\r\n                      <MDBIcon icon=\"sync\" class=\"white-font\" size=\"2x\" onClick={this.RefreshCaptcha}/>\r\n                    </Col> */}\r\n              </Row>\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          </Row>\r\n\r\n          <Row className=\"pt-4\">\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n              <Grid container spacing={1} alignItems=\"flex-end\">\r\n                <Grid item className=\"forgetpassword-width-style \">\r\n                  {/* <Tooltip title=\"Please enter your full name\" placement=\"bottom\" TransitionProps={{ timeout: 600 }} arrow> */}\r\n                  <TextField\r\n                    id=\"input-with-icon-grid\"\r\n                    label=\"Enter Captcha here\"\r\n                    value={this.state.captchaValue_SAT}\r\n                    onChange={this.captchaValidate_SAT}\r\n                    required\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  {/* </Tooltip> */}\r\n                </Grid>\r\n              </Grid>\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          </Row>\r\n\r\n          <Row className=\"pt-5 pb-4\">\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            <Col\r\n              xs=\"12\"\r\n              sm=\"12\"\r\n              md=\"12\"\r\n              lg=\"6\"\r\n              xl=\"6\"\r\n              xxl=\"6\"\r\n              className=\"signup-text-message-style\"\r\n            >\r\n              <Button className=\"signup-button-style\" onClick={this.Submit}>\r\n                Submit\r\n              </Button>\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          </Row>\r\n\r\n          <Row className=\"pt-4 pb-5\">\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n              {/* <Navbar expand=\"lg\" sticky=\"bottom\" className=\"signup-navbar-style\"> */}\r\n              <Row>\r\n                <Col className=\"click-here-to-login\">\r\n                  <label>\r\n                    <span class=\"Question-style\">Click here to go back to</span>\r\n                    <Link to=\"/\">\r\n                      <span class=\"Login-style pl-2\">Login</span>\r\n                    </Link>\r\n                  </label>\r\n                </Col>\r\n              </Row>\r\n              {/* </Navbar> */}\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          </Row>\r\n\r\n          {/* <Row>\r\n          <LoadCanvasTemplate />\r\n          </Row> */}\r\n        </Container>\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover={true}\r\n          toastClassName=\"toaster-style\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ForgetPassword);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-IncidentReport\\Dashboard-IncidentReport.js",["718","719","720","721","722","723","724","725","726"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Header from \"../Dashboard-header\";\r\nimport CollaborationHeadings from \"../../jsonFiles/CollaborationTabInfoJson/collaborationtabinfo\";\r\nimport DashboardIcons from \"../../jsonFiles/CollaborationTabInfoJson/collaborationtabinfo\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"../Footer\";\r\nimport CollabBannerImg from \"../../assets/submenu banners/Incident Report.svg\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport IncidentReport2 from \"../../assets/IncidentReport2.png\";\r\n\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../assets/defaultprofile.png\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport HeaderLogo from \"../../assets/HeaderLogo.png\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nclass DashboardIncidentReport extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collabIcons: CollaborationHeadings.IncidentReportIcons,\r\n      dashIcons: DashboardIcons.DashIcons,\r\n      collabTitleImg: CollaborationHeadings.Collaboration_Title_Image,\r\n    };\r\n    this.openIncidentForm = this.openIncidentForm.bind(this);\r\n    this.searchIncidentForm = this.searchIncidentForm.bind(this);\r\n    this.statusIncidentForm = this.statusIncidentForm.bind(this);\r\n\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.openMenu = this.openMenu.bind(this);\r\n    this.menuClose = this.menuClose.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.style = \"background-image: url();\";\r\n    document.body.style = \"background: #F9F9F9\";\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  openIncidentForm() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please login to report incident.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(this.state.collabIcons.Cards[0].NavigateTo);\r\n    }\r\n  }\r\n\r\n  searchIncidentForm() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login to search your reported incidents.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(this.state.collabIcons.Cards[1].NavigateTo);\r\n    }\r\n  }\r\n\r\n  statusIncidentForm() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login to view status of incidents.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(this.state.collabIcons.Cards[2].NavigateTo);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <Header></Header>\r\n        <Container className=\"header-space\"></Container> */}\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"dashboard-tytle-allign-style_Header\">\r\n            {/* <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n          <Link to='/dashboard'>\r\n            <Tooltip title=\"Dashboard\" placement=\"top\" TransitionProps={{ timeout: 600 }}>\r\n              <HomeOutlinedIcon className=\"header-menu-icon-style\" fontSize=\"medium\"/>\r\n            </Tooltip>\r\n              </Link>\r\n            </Col> */}\r\n            <Col\r\n              xs=\"10\"\r\n              sm=\"10\"\r\n              md=\"10\"\r\n              lg=\"10\"\r\n              xl=\"10\"\r\n              xxl=\"10\"\r\n              className=\"align-left dashboard-header-title-style_SAT pr-0\"\r\n            >\r\n              {/* <label class=\"header-heading-label-style\">{DashboardHeadings.Dashboard_HEADING_SAT}</label> */}\r\n              <img\r\n                className=\"forgetheader-profile-image-style\"\r\n                src={HeaderLogo}\r\n                alt=\"\"\r\n              />\r\n            </Col>\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 pt-1\"\r\n            >\r\n              {/* <MenuIcon className=\"header-menu-icon-style\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={this.openMenu}/>\r\n              <Menu\r\n                className=\"menu-box-style\"\r\n                // id=\"simple-menu\"\r\n                anchorEl={this.state.eventTarget}\r\n                // keepMounted\r\n                open={this.openMenu}\r\n                onClose={this.menuClose}\r\n              >\r\n              <MenuItem onClick={this.menuClose}>Profile</MenuItem>\r\n              <MenuItem onClick={this.menuClose}>Logout</MenuItem>\r\n              </Menu> */}\r\n              <Dropdown menuAlign=\"right\" className=\"dropdown-profile-style\">\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{textAlign:'center'}}>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[0].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[0].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[1].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[1].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[2].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2  selected-tab-from-dashboard\"\r\n                        src={this.state.dashIcons[2].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[3].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[3].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[4].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[4].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                </Row>\r\n        </Container>\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"8\"\r\n            xl=\"8\"\r\n            xxl=\"8\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            <Container fluid className=\"collaboration-main-div\">\r\n              <div class=\"body-style-height\">\r\n                \r\n              </div>\r\n              <div class=\"inner-container-style\">\r\n                <Row>\r\n                  {/* <Col  xs=\"0\" sm=\"0\" md=\"0\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col> */}\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"12\"\r\n                    xl=\"12\"\r\n                    xxl=\"12\"\r\n                    className=\"banner-submenu-style-header2\"\r\n                  >\r\n                    <img\r\n                      src={CollabBannerImg}\r\n                      alt=\"\"\r\n                      class=\"banner-image-style\"\r\n                    />\r\n                  </Col>\r\n                  {/* <Col  xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col> */}\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n                  <Col\r\n                    xs=\"2\"\r\n                    sm=\"2\"\r\n                    md=\"2\"\r\n                    lg=\"2\"\r\n                    xl=\"2\"\r\n                    xxl=\"2\"\r\n                    className=\"heading-image-style\"\r\n                  >\r\n                    <img\r\n                      alt=\"\"\r\n                      className=\"collabImageStyle\"\r\n                      src={IncidentReport2}\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"10\" sm=\"10\" md=\"8\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                    <label class=\"collab-title-text\">Incident Report</label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n                </Row>\r\n                <hr className=\"collab-hr pb-2\"></hr>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Link onClick={this.openIncidentForm}>\r\n                      <Card className=\"collaboration-card\">\r\n                        <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                          <Row>\r\n                            <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                              {\" \"}\r\n                              <Card.Img\r\n                                className=\"collaborationImageStyle\"\r\n                                src={this.state.collabIcons.Cards[0].Image}\r\n                              />\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"10\"\r\n                              sm=\"10\"\r\n                              md=\"10\"\r\n                              lg=\"10\"\r\n                              xl=\"10\"\r\n                              xxl=\"10\"\r\n                            >\r\n                              <Card.Title className=\"cardIconsTitleCollab\">\r\n                                {this.state.collabIcons.Cards[0].Title}\r\n                              </Card.Title>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Link onClick={this.searchIncidentForm}>\r\n                      <Card className=\"collaboration-card\">\r\n                        <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                          <Row>\r\n                            <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                              {\" \"}\r\n                              <Card.Img\r\n                                className=\"collaborationImageStyle\"\r\n                                src={this.state.collabIcons.Cards[1].Image}\r\n                              />\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"10\"\r\n                              sm=\"10\"\r\n                              md=\"10\"\r\n                              lg=\"10\"\r\n                              xl=\"10\"\r\n                              xxl=\"10\"\r\n                            >\r\n                              <Card.Title className=\"cardIconsTitleCollab\">\r\n                                {this.state.collabIcons.Cards[1].Title}\r\n                              </Card.Title>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Link onClick={this.statusIncidentForm}>\r\n                      <Card className=\"collaboration-card\">\r\n                        <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                          <Row>\r\n                            <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                              {\" \"}\r\n                              <Card.Img\r\n                                className=\"collaborationImageStyle\"\r\n                                src={this.state.collabIcons.Cards[2].Image}\r\n                              />\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"10\"\r\n                              sm=\"10\"\r\n                              md=\"10\"\r\n                              lg=\"10\"\r\n                              xl=\"10\"\r\n                              xxl=\"10\"\r\n                            >\r\n                              <Card.Title className=\"cardIconsTitleCollab\">\r\n                                {this.state.collabIcons.Cards[2].Title}\r\n                              </Card.Title>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n              </div>\r\n            </Container>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardIncidentReport;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-ACardDetails\\Collaboration-bAV-ACardDetails.js",["727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770"],"import React, { Component } from \"react\";\r\nimport Header from \"../../Dashboard-header\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { MDBIcon } from \"../../../../node_modules/mdbreact\";\r\nimport { Link } from \"react-router-dom\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport CollaborationsHeadings from \"../../../jsonFiles/CollaborationJson/collaborationVolunteer\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Footer from \"../../Footer\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport footer_data from \"../../../jsonFiles/DashboardInfoJson/DashboardFooter\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport UserGeoMapComponent from \"../../UserGeoMapComponent\";\r\nimport fileDownload from 'js-file-download';\r\nimport {Capacitor} from '@capacitor/core';\r\nimport { Filesystem, Directory, Encoding } from '@capacitor/filesystem';\r\nimport {FileOpener} from '@ionic-native/file-opener';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { confirm } from \"react-confirm-box\";\r\nimport axios from 'axios';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faFileCsv} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass CollaborationBAVACardDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      LocalCardsData: CollaborationsHeadings.ACardDetails[0],\r\n      APIResponse: \"\",\r\n      ACardComments: CollaborationsHeadings.ACardDetails[0].comments_data,\r\n      description: \"\",\r\n      descriptionValidate: false,\r\n      isOpen: false,\r\n      submit: false,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      eventTarget: \"\",\r\n       mimeType:'',\r\n      extension:'',\r\n      isActive:false,\r\n      progressbarVisible:false,\r\n      progress:0,\r\n      footer: footer_data.paths,\r\n      AttachmentAvailable: false,\r\n      // isLogin : \"\",\r\n      ACardAttachments: CollaborationsHeadings.ACardDetails[0].media_files,\r\n      commentsCounts: 3,\r\n      DeleteSubmit: false,\r\n      DeleteDialogStatus: false,\r\n      displayMapFlag: true,\r\n      Activity_Comment_Count:0,\r\n      deteledID: \"\",\r\n    };\r\n    // this.displayCards = this.displayCards.bind(this);\r\n    // this.CardDetails = this.CardDetails.bind(this);\r\n    this.sendComment = this.sendComment.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.LoadMore_SAT = this.LoadMore_SAT.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n    this.getMimeType = this.getMimeType.bind(this);\r\n    this.downloadAttachmentFile = this.downloadAttachmentFile.bind(this);\r\n    this.getTruncatedName=this.getTruncatedName.bind(this);\r\n    this.getLoadmoreCommentStatus=this.getLoadmoreCommentStatus.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      document.body.style = \"background-image: url();\";\r\n      document.body.style = \"background: #F9F9F9\";\r\n      this.getParticularDetails();\r\n    }\r\n \r\n  }\r\n\r\n  getLoadmoreCommentStatus(){\r\n    if(this.state.Activity_Comment_Count > this.state.commentsCounts){\r\n    return true;\r\n    }\r\n    else{\r\n      return false;\r\n    }\r\n  }\r\n   getMimeType=(file_path)=>{\r\n    const extension = file_path.substr(file_path.lastIndexOf(\"/\") + 1).split('.')[1];\r\n    if(extension=='jpg' || extension=='jpeg'){\r\n      return 'image/jpeg';\r\n    }else if(extension=='png'){\r\n      return 'image/jpeg';\r\n    }else if(extension=='pdf'){\r\n      return 'application/pdf';\r\n    }else if(extension=='doc'){\r\n      return 'application/msword';\r\n    }else if(extension=='docx'){\r\n      return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\r\n    }else if(extension=='xlsx'){\r\n      return 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\r\n    }else if(extension=='xls'){\r\n      return 'application/vnd.ms-excel';\r\n    }else if(extension=='txt'){\r\n      return 'text/plain';\r\n    }else if(extension=='ppt'){\r\n      return 'application/vnd.ms-powerpoint';\r\n    }else if(extension=='pptx'){\r\n      return 'application/vnd.openxmlformats-officedocument.presentationml.presentation';\r\n    }else if(extension=='mp3'){\r\n      return 'audio/mpeg';\r\n    }else if(extension=='mp4'){\r\n      return 'video/mp4';\r\n    }\r\n\r\n  }\r\n  getTruncatedName=(attachmentname)=>{\r\n    if(attachmentname.length>25)\r\n    {\r\n      var truncatename= attachmentname.substr(0,10)+'...'+attachmentname.substr(attachmentname.length-8,attachmentname.length-1)\r\n      return truncatename;\r\n    }\r\n    else{\r\n    return(attachmentname);\r\n    }\r\n  }\r\n downloadAttachmentFile = (AttachmentDetails) => {\r\n     var file_path=\"https://scity.gmmspl.com:3000/\" + AttachmentDetails.media_file_name;\r\n        var extension= file_path.substr(file_path.lastIndexOf(\"/\") + 1).split('.')[1];\r\n        var mime = this.getMimeType(file_path);\r\n        this.setState({progressbarVisible:true})\r\n        axios.get(file_path, {responseType: 'blob',onDownloadProgress: (progressEvent) => {\r\n        this.setState({progress:Math.round((progressEvent.loaded * 100) / progressEvent.total)})  \r\n  }}).then((res) => {\r\n           this.setState({progress:0})\r\n           this.setState({progressbarVisible:false})\r\n          if(Capacitor.getPlatform()=='web')\r\n          {\r\n          fileDownload(res.data,'SmartCityActivityAttachment.'+extension);\r\n          }else\r\n          {\r\n            var date = new Date();\r\n           var reader = new FileReader();\r\n            reader.readAsDataURL(res.data);\r\n            reader.onloadend = async function () {\r\n            var base64String = reader.result;\r\n            const savedFile = await Filesystem.writeFile({\r\n              path :'SmartCityActivityAttachment'+Math.floor(date.getTime() + date.getSeconds() / 2) +'.'+extension,\r\n              data : base64String,\r\n              directory : Directory.Documents,\r\n            })\r\n            alert(\"Your file is stored into DOCUMENTS directory of your device\")\r\n            const path =savedFile.uri;   \r\n            const mimeType =mime;\r\n            FileOpener.showOpenWithDialog(path,mimeType).then(()=>console.log('File is opened')).catch(error=>console.log('error while opening File : ',error));\r\n            }\r\n          }\r\n          });     \r\n  };\r\n  getParticularDetails() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        volunteer_id: sessionStorage.getItem(\"VolunteerId\"),\r\n        offset: this.state.commentsCounts,\r\n        is_admin: false,\r\n      }),\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/volunteer/volunteerbyid\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n       \r\n        if (this.state.APIResponse.status === true) {\r\n          var JsonDate = this.state.APIResponse.data[0];\r\n           if(!JsonDate.image || JsonDate.image.indexOf('https')!== -1 || JsonDate.image==\"\"){\r\n            \r\n          }\r\n          else{\r\n              JsonDate.image=\"https://scity.gmmspl.com:3000/\" +JsonDate.image\r\n          }\r\n          for(var commentobject in JsonDate.comments_data)\r\n          {\r\n            if(!JsonDate.comments_data[commentobject].image_path || JsonDate.comments_data[commentobject].image_path.indexOf('https')!== -1 || JsonDate.comments_data[commentobject].image_path==\"\"){ \r\n          }\r\n          else{\r\n              JsonDate.comments_data[commentobject].image_path=\"https://scity.gmmspl.com:3000/\" +JsonDate.comments_data[commentobject].image_path;\r\n          }\r\n        }\r\n\r\n          this.setState({\r\n            LocalCardsData: JsonDate,\r\n            ACardComments: JsonDate.comments_data,\r\n            ACardAttachments: JsonDate.media_files,\r\n            displayMapFlag: JsonDate.share_location_flag,\r\n            Activity_Comment_Count:JsonDate.comment_count,\r\n            // AttachmentAvailable : this.state.ACardAttachments[0].media_file_name\r\n          });\r\n          // console.log(\"AttachmentAvailable = \", this.state.AttachmentAvailable);\r\n        }\r\n       \r\n      });\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  LoadMore_SAT() {\r\n    if (this.state.commentsCounts <= 100) {\r\n      var currentCount = this.state.commentsCounts + 3;\r\n      this.state.commentsCounts = currentCount;\r\n      this.getParticularDetails();\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  description = (e) => {\r\n    if (e.target.value != null) {\r\n      this.setState({\r\n        description: e.target.value,\r\n        descriptionValidate: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        description: e.target.value,\r\n        descriptionValidate: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  sendComment() {\r\n    if (this.state.description.trim() != \"\") {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          user_id: sessionStorage.getItem(\"user_id\"),\r\n          token: sessionStorage.getItem(\"token\"),\r\n          comment: this.state.description,\r\n          volunteer_id: sessionStorage.getItem(\"VolunteerId\"),\r\n        }),\r\n      };\r\n      fetch(\r\n        \"https://scity.gmmspl.com:3000/volunteer/addvolunteercomments\",\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          // console.log(\"APIResponse = \", this.state.APIResponse);\r\n          if (\r\n            this.state.APIResponse.message === \"Comment  added successfully\"\r\n          ) {\r\n            // this.getParticularDetails();\r\n            toast.success(\"Comment successfully added\", {\r\n              position: \"top-center\",\r\n              autoClose: 500,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              onClose: () => this.getParticularDetails(),\r\n            });\r\n            this.setState({\r\n              description: \" \",\r\n              descriptionValidate: false,\r\n            });\r\n          } else if (\r\n            this.state.APIResponse.message === \"Failed to authenticate token.\"\r\n          ) {\r\n            // console.log(\"Rederect = \", this.state.APIResponse);\r\n            //  <withRouter exact path=\"/\" component={LoginPage} />\r\n            toast.error(\"Please login, your session has expired\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              onClose: () => this.props.history.push(\"/\"),\r\n            });\r\n            // this.props.history.push(\"/\");\r\n          } else {\r\n            toast.error(\"Unable to add comment, please try again\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  DeleteACard = () => {\r\n    // console.log(\"CardID = \", CardID);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        volunteer_id: this.state.deteledID,\r\n      }),\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/volunteer/deletevolunteercomments\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.message === \"Comment deleted successfully\") {\r\n          this.DeleteDialogClose();\r\n          this.getParticularDetails();\r\n        }\r\n      });\r\n  };\r\n\r\n  Delete = (CardID) => {\r\n    this.setState({\r\n      DeleteSubmit: true,\r\n      DeleteDialogStatus: true,\r\n      deteledID: CardID.volunteer_id,\r\n    });\r\n  };\r\n\r\n  DeleteDialogClose = () => {\r\n    this.setState({\r\n      DeleteDialogStatus: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container fluid className=\"header-style\">\r\n           \r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"back-icon-div-allignemnt\"\r\n            >\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              <Link to={sessionStorage.getItem(\"volunteerDetailBack\")}>\r\n                <Tooltip\r\n                  title=\"Dashboard\"\r\n                  placement=\"top\"\r\n                  TransitionProps={{ timeout: 600 }}\r\n                >\r\n                  <MDBIcon\r\n                    icon=\"chevron-circle-left\"\r\n                    size=\"2x\"\r\n                    className=\"back-arrow-icon pt-1\"\r\n                  />\r\n                </Tooltip>\r\n              </Link>\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">\r\n                {CollaborationsHeadings.VOLUNTEER_HEADING}\r\n              </label>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n           {this.state.progressbarVisible && <Row>\r\n           <div style={{height:15,backgroundColor:'rgba(0,0,0,0.2)',width:this.state.progress+'%',color:'white',fontWeight:'600',fontSize:12,textAlign:'center',borderRadius:5}}>\r\n              {this.state.progress==0 ? '' : this.state.progress+'%'}\r\n            </div>\r\n          </Row>}\r\n        </Container>\r\n\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            <hr></hr>\r\n            <div class=\"details-container-style inner-container-style-collaboration\">\r\n              <Container className=\"p-4\">\r\n                <Row className=\"card-details-title-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <div\r\n                      id=\"card-details-category\"\r\n                      class=\"tab-card-heading-style\"\r\n                    >\r\n                      <label>\r\n                        {this.state.LocalCardsData.volunteer_category_name}\r\n                      </label>\r\n                    </div>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"card-details-title-style\"\r\n                  >\r\n                    {/* <span class=\"card-details-category-style\"><label>Title :&nbsp;</label></span> */}\r\n                    <label>{this.state.LocalCardsData.title}</label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"card-details-title-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"card-details-description-style\"\r\n                  >\r\n                    {/* <span class=\"card-details-category-style\"><label>Description :&nbsp;</label></span> */}\r\n                    <label>{this.state.LocalCardsData.description}</label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <div>\r\n                  {this.state.displayMapFlag && (\r\n                    <Row className=\"card-details-title-row-style\">\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                      <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                        <Row>\r\n                          <Col\r\n                            xs=\"1\"\r\n                            sm=\"1\"\r\n                            md=\"1\"\r\n                            lg=\"1\"\r\n                            xl=\"1\"\r\n                            xxl=\"1\"\r\n                            className=\"pr-0\"\r\n                          >\r\n                            <MDBIcon\r\n                              icon=\"map-marker-alt\"\r\n                              className=\"red-text\"\r\n                              size=\"lg\"\r\n                            />\r\n                          </Col>\r\n                          <Col\r\n                            xs=\"11\"\r\n                            sm=\"11\"\r\n                            md=\"11\"\r\n                            lg=\"11\"\r\n                            xl=\"11\"\r\n                            xxl=\"11\"\r\n                            className=\"\"\r\n                          >\r\n                            <label class=\"card-details-description-style\">\r\n                              {this.state.LocalCardsData.address}\r\n                            </label>\r\n                          </Col>\r\n                          <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\">\r\n                            <UserGeoMapComponent\r\n                              long={this.state.LocalCardsData.longitude}\r\n                              lat={this.state.LocalCardsData.latitude}\r\n                              address={this.state.LocalCardsData.address}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                    </Row>\r\n                  )}\r\n                </div>\r\n\r\n                <Row className=\"card-details-title-row-style pt-2\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"card-details-description-style\"\r\n                  >\r\n                    <span class=\"card-details-category-style\">\r\n                      <label>Start Date :&nbsp;</label>\r\n                    </span>\r\n                    <label>{this.state.LocalCardsData.start_date}</label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"card-details-title-row-style pb-2\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"card-details-description-style\"\r\n                  >\r\n                    <span class=\"card-details-category-style\">\r\n                      <label>End Date :&nbsp;</label>\r\n                    </span>\r\n                    <label>{this.state.LocalCardsData.end_date}</label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                 {this.state.ACardAttachments.length>0 &&(<Row className=\"card-details-title-row-style attachment-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    {this.state.ACardAttachments.map((Attachment) => (\r\n                      <Row className=\"pt-1 pb-1\" id=\"downloadFile\">\r\n                        <Button\r\n                           color=\"transparent\"\r\n                           onClick={()=>{this.downloadAttachmentFile(Attachment)}} \r\n                        >\r\n                          <Col\r\n                            xs=\"2\"\r\n                            sm=\"2\"\r\n                            md=\"1\"\r\n                            lg=\"1\"\r\n                            xl=\"1\"\r\n                            xxl=\"1\"\r\n                            className=\"pl-3\"\r\n                          >\r\n                            {(Attachment.media_file_name\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"png\" ||\r\n                              Attachment.media_file_name\r\n                                .split(\"/\")\r\n                                .pop()\r\n                                .split(\".\")\r\n                                .pop() == \"jpg\" ||\r\n                              Attachment.media_file_name\r\n                                .split(\"/\")\r\n                                .pop()\r\n                                .split(\".\")\r\n                                .pop() == \"jpeg\") && (\r\n                              <MDBIcon\r\n                                far\r\n                                icon=\"image\"\r\n                                size=\"lg\"\r\n                                className=\"image-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {Attachment.media_file_name\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"pdf\" && (\r\n                              <MDBIcon\r\n                                icon=\"file-pdf\"\r\n                                size=\"lg\"\r\n                                className=\"doc-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {(Attachment.media_file_name\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"doc\" ||\r\n                              Attachment.media_file_name\r\n                                .split(\"/\")\r\n                                .pop()\r\n                                .split(\".\")\r\n                                .pop() == \"docx\") && (\r\n                              <MDBIcon\r\n                                icon=\"file-word\"\r\n                                size=\"lg\"\r\n                                className=\"word-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {Attachment.media_file_name\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"xlsx\" && (\r\n                              <MDBIcon\r\n                                icon=\"file-excel\"\r\n                                size=\"lg\"\r\n                                className=\"xlsx-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {Attachment.media_file_name\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"txt\" && (\r\n                              <MDBIcon\r\n                                icon=\"file-alt\"\r\n                                size=\"lg\"\r\n                                className=\"txt-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {(Attachment.media_file_name\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"mp3\" ||\r\n                              Attachment.media_file_name\r\n                                .split(\"/\")\r\n                                .pop()\r\n                                .split(\".\")\r\n                                .pop() == \"mp4\") && (\r\n                              <MDBIcon\r\n                                icon=\"video\"\r\n                                size=\"lg\"\r\n                                className=\"media-file-icon-style\"\r\n                              />\r\n                            )}\r\n                             {Attachment.media_file_name\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"csv\" && (\r\n                              <FontAwesomeIcon\r\n                                icon={faFileCsv}\r\n                                color=\"green\"\r\n                                size=\"lg\">\r\n                                </FontAwesomeIcon>\r\n                            )}\r\n                            {(Attachment.media_file_name\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"ppt\" ||\r\n                              Attachment.media_file_name\r\n                                .split(\"/\")\r\n                                .pop()\r\n                                .split(\".\")\r\n                                .pop() == \"pptx\") && (\r\n                              <MDBIcon\r\n                                icon=\"file-powerpoint\"\r\n                                size=\"lg\"\r\n                                className=\"ppt-file-icon-style\"\r\n                              />\r\n                            )}\r\n                          </Col>\r\n                          <Col xs=\"10\" sm=\"10\" md=\"11\" lg=\"11\" xl=\"11\" xxl=\"11\">\r\n                            <label>\r\n                              {this.getTruncatedName(Attachment.media_file_name.split(\"/\").pop())}\r\n                            </label>\r\n                          </Col>\r\n                        </Button>\r\n                      </Row>\r\n                    ))}\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>)}\r\n\r\n                <Row className=\"pt-3 pb-3\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <Row>\r\n                      <Col\r\n                        xs=\"2\"\r\n                        sm=\"2\"\r\n                        md=\"2\"\r\n                        lg=\"2\"\r\n                        xl=\"2\"\r\n                        className=\"details-profile-image-col-style\"\r\n                      >\r\n                        <img\r\n                          src={this.state.LocalCardsData.image}\r\n                          alt=\"\"\r\n                          class=\"details-profile-image-style\"\r\n                        />\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"10\"\r\n                        sm=\"10\"\r\n                        md=\"10\"\r\n                        lg=\"10\"\r\n                        xl=\"10\"\r\n                        className=\"details-image-imfo-style pr-0\"\r\n                      >\r\n                        <Row className=\"details-image-profile-name-style\">\r\n                          <label>{this.state.LocalCardsData.PostedBy}</label>\r\n                        </Row>\r\n                        <Row className=\"card-image-imfo-row-style\">\r\n                          <label>{this.state.LocalCardsData.PostedOn}</label>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <hr></hr>\r\n\r\n                <Row className=\"details-comment-count-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <Row>\r\n                      <Col\r\n                        xs=\"1\"\r\n                        sm=\"1\"\r\n                        md=\"1\"\r\n                        lg=\"1\"\r\n                        xl=\"1\"\r\n                        xxl=\"1\"\r\n                        className=\"pr-0\"\r\n                      >\r\n                        <MDBIcon\r\n                          icon=\"comment\"\r\n                          className=\"add-comment-style\"\r\n                          size=\"lg\"\r\n                        />\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"11\"\r\n                        sm=\"11\"\r\n                        md=\"11\"\r\n                        lg=\"11\"\r\n                        xl=\"11\"\r\n                        xxl=\"11\"\r\n                        className=\"\"\r\n                      >\r\n                        <p className=\"card-comments-style\">\r\n                          <label>\r\n                            <span>\r\n                              {this.state.LocalCardsData.comment_count}\r\n                            </span>{\" \"}\r\n                            <span class=\"comments-count-style\">Comments</span>\r\n                          </label>\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                    {/* {\r\n                    (this.state.LocalCardsData.CommentCount === null) &&\r\n                    <p className=\"card-comments-style\">\r\n                      <span class=\"comment-icon-style\">\r\n                        <MDBIcon icon=\"comment\" className=\"amber-text pr-3\" size=\"2x\"/>\r\n                      </span>\r\n                      <label >\r\n                        0 <span class=\"comments-count-style\">Comments</span>\r\n                      </label>\r\n                    </p>\r\n                  }\r\n                  {\r\n                    (this.state.LocalCardsData.CommentCount != null) &&\r\n                    <p className=\"card-comments-style\">\r\n                    <label>\r\n                    <MDBIcon icon=\"comment\" className=\"amber-text pr-3\" size=\"2x\"/>\r\n                    {this.state.LocalCardsData.CommentCount} <span class=\"comments-count-style\">Comments</span></label></p>\r\n                  } */}\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"card-details-description-style\"\r\n                  >\r\n                    {this.state.ACardComments.map((AComent) => (\r\n                      <Container className=\"comment-cards-row-style pt-2 pb-0 pl-0 pr-0\">\r\n                        <Card className=\"comment-cards-row-style\">\r\n                          <Row className=\"pt-3\">\r\n                            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n                              <img\r\n                                src={AComent.image_path}\r\n                                alt=\"\"\r\n                                class=\"card-profile-image-style\"\r\n                              />\r\n                            </Col>\r\n                            <Col xs=\"9\" sm=\"9\" md=\"9\" lg=\"9\" xl=\"9\" xxl=\"9\">\r\n                              <label class=\"mb-0 cards-lable-style\">\r\n                                {AComent.PostedBy}\r\n                                <span class=\"commet-postedOnn-date\">\r\n                                  {\" \"}\r\n                                  - {AComent.PostedOn}\r\n                                </span>\r\n                              </label>\r\n                              <p class=\"card-comment-description-style\">\r\n                                {AComent.comment}\r\n                              </p>\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"1\"\r\n                              sm=\"1\"\r\n                              md=\"1\"\r\n                              lg=\"1\"\r\n                              xl=\"1\"\r\n                              xxl=\"1\"\r\n                              className=\"pl-0\"\r\n                            >\r\n                              {AComent.user_id ==\r\n                                sessionStorage.getItem(\"user_id\") && (\r\n                                <div>\r\n                                  <MDBIcon\r\n                                    icon=\"trash\"\r\n                                    onClick={() => this.Delete(AComent)}\r\n                                  />\r\n                                  {this.state.DeleteSubmit && (\r\n                                    <Dialog\r\n                                      open={this.state.DeleteDialogStatus}\r\n                                      onClose={this.DeleteDialogClose}\r\n                                      aria-labelledby=\"alert-dialog-title\"\r\n                                      aria-describedby=\"alert-dialog-description\"\r\n                                    >\r\n                                      <DialogTitle id=\"simple-dialog-title\">\r\n                                        Are you sure you want to delete comment?\r\n                                        <DialogActions>\r\n                                          <Button\r\n                                            onClick={this.DeleteACard}\r\n                                            color=\"primary\"\r\n                                          >\r\n                                            Yes\r\n                                          </Button>\r\n                                          <Button\r\n                                            onClick={this.DeleteDialogClose}\r\n                                            color=\"primary\"\r\n                                            autoFocus\r\n                                          >\r\n                                            No\r\n                                          </Button>\r\n                                        </DialogActions>\r\n                                      </DialogTitle>\r\n                                    </Dialog>\r\n                                  )}\r\n                                </div>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      </Container>\r\n                    ))}\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-2\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"9\" xl=\"9\" xxl=\"9\">\r\n                    <Row className=\"\">\r\n                      <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                      <Col\r\n                        xs=\"6\"\r\n                        sm=\"6\"\r\n                        md=\"6\"\r\n                        lg=\"6\"\r\n                        xl=\"6\"\r\n                        xxl=\"6\"\r\n                        className=\"load-more-comments-text-style\"\r\n                      >\r\n                        <label>\r\n                          {this.getLoadmoreCommentStatus() && (\r\n                            <Link onClick={this.LoadMore_SAT}>\r\n                              Load more comments...                            </Link>\r\n                          )}\r\n                        </label>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\">\r\n                    <Row className=\"card-details-title-row-style\">\r\n                      <Col\r\n                        xs=\"12\"\r\n                        sm=\"12\"\r\n                        md=\"12\"\r\n                        lg=\"12\"\r\n                        xl=\"12\"\r\n                        xxl=\"12\"\r\n                        className=\"card-details-title-style\"\r\n                      >\r\n                        <TextField\r\n                          id=\"outlined-textarea\"\r\n                          label=\"Comment\"\r\n                          value={this.state.description}\r\n                          onChange={this.description}\r\n                          multiline\r\n                          //variant=\"outlined\"\r\n                          rows={2}\r\n                          onInput={(e) =>\r\n                            (e.target.value = e.target.value.slice(0, 250))\r\n                          }\r\n                          className=\"p-0 start-new-idea-description-box\"\r\n                          InputProps={{\r\n                            endAdornment: (\r\n                              <InputAdornment position=\"end\" className=\"p-0\">\r\n                                <IconButton>\r\n                                  <i\r\n                                    class=\"fas fa-paper-plane fa-xs add-comment-style\"\r\n                                    onClick={this.sendComment}\r\n                                  ></i>\r\n                                </IconButton>\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n              </Container>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CollaborationBAVACardDetails);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Profile-FirstLogin\\Profile-FirstLogin.js",["771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport footer_data from \"../../jsonFiles/DashboardInfoJson/DashboardFooter\";\r\nimport UserGeoMapComponent from \"../UserGeoMapComponent\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MDBIcon } from \"../../../node_modules/mdbreact\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport Footer from \"../Footer\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CallOutlinedIcon from \"@material-ui/icons/CallOutlined\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport RoomOutlinedIcon from \"@material-ui/icons/RoomOutlined\";\r\nimport LocationCityIcon from \"@material-ui/icons/LocationCity\";\r\nimport Select from \"react-select\";\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport OpacityIcon from \"@material-ui/icons/Opacity\";\r\nimport LoginHeadings from \"../../jsonFiles/UserInfoJson/userLogin\";\r\nimport CategoryListOfAPI from \"../../jsonFiles/UserInfoJson/categoryList\";\r\nimport { GoogleAuth } from \"@codetrix-studio/capacitor-google-auth\";\r\nimport { FacebookLogin } from \"@capacitor-community/facebook-login\";\r\n\r\nclass ProfileFirstLogin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      full_name: \"\",\r\n      image_path: \"\",\r\n      phonenumber: \"\",\r\n      dob: null,\r\n      gender: \"\",\r\n      email: \"\",\r\n      emergency_number: \"\",\r\n      emergencyNumberValidate_SAT: false,\r\n      blood_group_id: \"\",\r\n      address: \"\",\r\n      city: \"\",\r\n      cityValidate: false,\r\n      state: \"\",\r\n      pincode: \"\",\r\n      pinCodeValue: null,\r\n      pinCodeValidate_SAT: false,\r\n      full_nameValidate_HMD: false,\r\n      SelectedType: \"\",\r\n      SelectedTypeValidate: false,\r\n      BloogGroupList: CategoryListOfAPI.BloodGroup,\r\n      AgeValidate_SAT: false,\r\n      addressValidate_SAT: false,\r\n      pinCodeList: CategoryListOfAPI.PinCodeList,\r\n      file: \"\",\r\n      ward_id: \"\",\r\n      ward_name: \"\",\r\n      phone_numberValue_SAT: \"\",\r\n      phone_numberValidate_SAT: false,\r\n    };\r\n    // this.displayCards = this.displayCards.bind(this);\r\n    // this.CardDetails = this.CardDetails.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n    this.full_nameValidate_HMD = this.full_nameValidate_HMD.bind(this);\r\n    this.bloodGroupValidate_SAT = this.bloodGroupValidate_SAT.bind(this);\r\n    this.AgeValidate_SAT = this.AgeValidate_SAT.bind(this);\r\n    this.addressValidate_SAT = this.addressValidate_SAT.bind(this);\r\n    this.submit_SAT = this.submit_SAT.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.phone_numberValidate_SAT = this.phone_numberValidate_SAT.bind(this);\r\n  }\r\n\r\n  callGoogleProfile() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n      }),\r\n    };\r\n\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/googlelogin/googleprofile\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        console.log(\"this.state.APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.message === \"Data Found\") {\r\n          // sessionStorage.setItem(\"user_id\", this.state.APIResponse.data.user_id);\r\n          // sessionStorage.setItem(\"token\", this.state.APIResponse.data.token);\r\n          // console.log(this.state.APIResponse.data.[0]['image_path'])\r\n          this.getBloodList();\r\n          this.getPinCodeList();\r\n          this.setState({\r\n            full_name: this.state.APIResponse.data[0][\"full_name\"],\r\n            image_path:\r\n              \"https://scity.gmmspl.com:3000/\" +\r\n              this.state.APIResponse.data[0][\"image_path\"],\r\n            //  dob: this.state.APIResponse.data[0]['dob'],\r\n            //  gender: this.state.APIResponse.data[0]['gender'],\r\n            //  phonenumber:this.state.APIResponse.data[0]['phonenumber'],\r\n            email: this.state.APIResponse.data[0][\"email\"],\r\n            //  emergency_number: this.state.APIResponse.data[0]['emergency_number'],\r\n            //  blood_group_id: this.state.APIResponse.data[0]['blood_group_id'],\r\n            //  address: this.state.APIResponse.data[0]['address'],\r\n            city: this.state.APIResponse.data[0][\"city\"],\r\n            //  state: this.state.APIResponse.data[0]['state'],\r\n            //  pincode: this.state.APIResponse.data[0]['pincode'],\r\n            //  pinCodeValue : (this.state.APIResponse.data[0]['pincode']),\r\n            //  ward_name : this.state.APIResponse.data[0]['ward_name'],\r\n            //  ward_id : this.state.APIResponse.data[0]['ward_id']\r\n          });\r\n\r\n          if (sessionStorage.getItem(\"login_type\") === \"google\" || sessionStorage.getItem(\"login_type\") === \"facebook\") {\r\n            this.setState({\r\n              image_path: sessionStorage.getItem(\"yourProfileImage\"),\r\n            });\r\n          } else {\r\n            this.setState({\r\n              image_path: headerProfile_img,\r\n            });\r\n          }\r\n\r\n          // if(this.state.address === \" \"){\r\n          //   this.state.address = null;\r\n          // }\r\n          // if(this.state.dob === 0 || this.state.dob === '0'){\r\n          //   this.state.dob = null\r\n          // }\r\n          // if(this.state.emergency_number === 0 || this.state.emergency_number === '0'){\r\n          //   this.state.emergency_number = null\r\n          // }\r\n          // const temp = {\r\n          //   \"value\" : this.state.pinCodeValue,\r\n          //   \"label\" : this.state.ward_name +\" - \"+ this.state.pinCodeValue\r\n          // }\r\n          // this.setState({pincode: temp})\r\n          // }\r\n          // this.state.pinCodeValue = ((Number)(this.state.pinCodeValue));\r\n          // console.log(\"pinCodeValue = \", typeof((Number)(this.state.pinCodeValue)))\r\n          // (Number)(this.state.pincode).label = (Number)(this.state.pinCodeValue);\r\n          // this.state.pincode.value = (Number)(this.state.pinCodeValue);\r\n          //\r\n          console.log(this.state.APIResponse);\r\n        } else {\r\n          toast.error(\"Something went wrong, Please try again\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () => this.props.history.push(\"/dashboard\"),\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  callNormalProfile() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n      }),\r\n    };\r\n\r\n    fetch(\"https://scity.gmmspl.com:3000/smartcity/profile\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.message === \"Data Found\") {\r\n          // sessionStorage.setItem(\"user_id\", this.state.APIResponse.data.user_id);\r\n          // sessionStorage.setItem(\"token\", this.state.APIResponse.data.token);\r\n          // console.log(this.state.APIResponse.data.[0]['image_path'])\r\n          this.getBloodList();\r\n          this.getPinCodeList();\r\n          this.setState({\r\n            full_name: this.state.APIResponse.data[0][\"full_name\"],\r\n            image_path:\r\n              \"https://scity.gmmspl.com:3000/\" +\r\n              this.state.APIResponse.data[0][\"image_path\"],\r\n            dob: this.state.APIResponse.data[0][\"dob\"],\r\n            //  gender: this.state.APIResponse.data[0]['gender'],\r\n            phone_numberValue_SAT: this.state.APIResponse.data[0][\r\n              \"phonenumber\"\r\n            ],\r\n            email: this.state.APIResponse.data[0][\"email\"],\r\n            emergency_number: this.state.APIResponse.data[0][\r\n              \"emergency_number\"\r\n            ],\r\n            blood_group_id: this.state.APIResponse.data[0][\"blood_group_id\"],\r\n            address: this.state.APIResponse.data[0][\"address\"],\r\n            city: this.state.APIResponse.data[0][\"city\"],\r\n            state: this.state.APIResponse.data[0][\"state\"],\r\n            //  pincode: this.state.APIResponse.data[0]['pincode'],\r\n            pinCodeValue: this.state.APIResponse.data[0][\"pincode\"],\r\n            ward_name: this.state.APIResponse.data[0][\"ward_name\"],\r\n            ward_id: this.state.APIResponse.data[0][\"ward_id\"],\r\n          });\r\n          if (this.state.address === \" \") {\r\n            this.state.address = null;\r\n          }\r\n          if (this.state.dob === 0 || this.state.dob === \"0\") {\r\n            this.state.dob = null;\r\n          }\r\n          if (\r\n            this.state.emergency_number === 0 ||\r\n            this.state.emergency_number === \"0\"\r\n          ) {\r\n            this.state.emergency_number = null;\r\n          }\r\n          const temp = {\r\n            value: this.state.pinCodeValue,\r\n            label: this.state.ward_name + \" - \" + this.state.pinCodeValue,\r\n          };\r\n          this.setState({ pincode: temp });\r\n\r\n          // }\r\n          // this.state.pinCodeValue = ((Number)(this.state.pinCodeValue));\r\n          // console.log(\"pinCodeValue = \", typeof((Number)(this.state.pinCodeValue)))\r\n          // (Number)(this.state.pincode).label = (Number)(this.state.pinCodeValue);\r\n          // this.state.pincode.value = (Number)(this.state.pinCodeValue);\r\n          //\r\n          //  console.log(this.state.APIResponse)\r\n        } else {\r\n          toast.error(\"Something went wrong, Please try again\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () => this.props.history.push(\"/dashboard\"),\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.style =\r\n      \"background-image: url(../../assets/headerImage.png);\";\r\n\r\n    if (\r\n      sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n      sessionStorage.getItem(\"login_type\") === \"facebook\"\r\n    ) {\r\n      this.callGoogleProfile();\r\n    } else if (sessionStorage.getItem(\"login_type\") === \"manual\") {\r\n      this.callNormalProfile();\r\n    }\r\n  }\r\n\r\n  getBloodList() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n      }),\r\n    };\r\n\r\n    fetch(\"https://scity.gmmspl.com:3000/smartcity/bloodgroup\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.message === \"Blood Group Data Found\") {\r\n          const options = this.state.APIResponse.data.map((d) => ({\r\n            value: d.blood_group_id,\r\n            label: d.blood_group,\r\n          }));\r\n          this.setState({ BloogGroupList: options });\r\n          // if(this.state.blood_group_id !=\" \") {\r\n          //   const tempBloodGrp = {\r\n          //     \"value\" : this.state.blood_group_id,\r\n          //     \"label\" : this.state.BloogGroupList[(parseInt(this.state.blood_group_id) - 1)].label\r\n          //   }\r\n          //   this.setState({SelectedType: tempBloodGrp})\r\n          //   }\r\n          //   else{\r\n          //     const tempBloodGrp = {\r\n          //       \"value\" : \"\",\r\n          //       \"label\" :\"\"\r\n          //     }\r\n          //     this.setState({SelectedType: tempBloodGrp})\r\n          //   }\r\n        } else {\r\n          toast.error(\"Something went wrong, Please try again\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () => this.props.history.push(\"/dashboard\"),\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  getPinCodeList() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n      }),\r\n    };\r\n\r\n    fetch(\"https://scity.gmmspl.com:3000/smartcity/pincode\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.message === \"Pincode Data Found\") {\r\n          const options = this.state.APIResponse.data.map((d) => ({\r\n            value: d.pincode,\r\n            label: d.ward_name + \" - \" + d.pincode,\r\n            ward_id: d.ward_id,\r\n          }));\r\n          this.setState({ pinCodeList: options });\r\n        } else {\r\n          toast.error(\"Something went wrong, Please try again\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () => this.props.history.push(\"/dashboard\"),\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\nasync signOut(){\r\n   await GoogleAuth.signOut();\r\n   }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n      if(sessionStorage.getItem(\"login_type\") === \"google\"){\r\n        this.signOut();\r\n      }\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  bloodGroupValidate_SAT = (Selected_option) => {\r\n    this.setState({\r\n      SelectedType: Selected_option,\r\n      SelectedTypeValidate: true,\r\n    });\r\n  };\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      image_path: URL.createObjectURL(event.target.files[0]),\r\n      file: event.currentTarget.files[0],\r\n    });\r\n  }\r\n\r\n  pinCodeValidate_SAT = (Selected_option) => {\r\n    this.setState({\r\n      pincode: Selected_option,\r\n      pinCodeValidate_SAT: true,\r\n      ward_id: Selected_option.ward_id,\r\n    });\r\n    console.log(\"Selected_option = \", Selected_option.ward_id);\r\n  };\r\n\r\n  full_nameValidate_HMD = (e) => {\r\n    if (e.target.value != null) {\r\n      this.setState({\r\n        full_name: e.target.value,\r\n        full_nameValidate_HMD: true,\r\n      });\r\n      // console.log(\"full_nameValue_SAT \", this.state.full_nameValue_SAT);\r\n    } else {\r\n      this.setState({\r\n        full_name: e.target.value,\r\n        full_nameValidate_HMD: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  AgeValidate_SAT = (e) => {\r\n    if (e.target.value != null) {\r\n      this.setState({\r\n        dob: e.target.value,\r\n        AgeValidate_SAT: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        dob: e.target.value,\r\n        AgeValidate_SAT: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  cityValidate = (e) => {\r\n    if (e.target.value != null) {\r\n      this.setState({\r\n        city: e.target.value,\r\n        cityValidate: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        city: e.target.value,\r\n        cityValidate: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  emergencyNumberValidate_SAT = (e) => {\r\n    if (e.target.value != null) {\r\n      this.setState({\r\n        emergency_number: e.target.value,\r\n        emergencyNumberValidate_SAT: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        emergency_number: e.target.value,\r\n        emergencyNumberValidate_SAT: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  addressValidate_SAT = (e) => {\r\n    if (e.target.value != null || e.target.value != \" \") {\r\n      this.setState({\r\n        address: e.target.value,\r\n        addressValidate_SAT: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        address: e.target.value,\r\n        addressValidate_SAT: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  phone_numberValidate_SAT = (e) => {\r\n    var phone_number = e.target.value.trim();\r\n    phone_number = phone_number.slice(0, 10);\r\n    if (phone_number != null || phone_number !== \"\") {\r\n      this.setState({\r\n        phone_numberValue_SAT: phone_number,\r\n        phone_numberValidate_SAT: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        phone_numberValue_SAT: phone_number,\r\n        phone_numberValidate_SAT: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  submit_SAT() {\r\n    if (\r\n      sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n      sessionStorage.getItem(\"login_type\") === \"facebook\"\r\n    ) {\r\n      this.updateGoogleProfile();\r\n    } else if (sessionStorage.getItem(\"login_type\") === \"manual\") {\r\n      this.updateManualProfile();\r\n    }\r\n  }\r\n\r\n  updateManualProfile() {\r\n    if (this.state.pincode.value != null) {\r\n      let formData = new FormData();\r\n      formData.append(\"file\", this.state.file);\r\n      formData.append(\"token\", sessionStorage.getItem(\"token\"));\r\n      formData.append(\"user_id\", sessionStorage.getItem(\"user_id\"));\r\n      if (\r\n        this.state.SelectedType.value == \"undefined\" ||\r\n        this.state.SelectedType.value == undefined ||\r\n        this.state.SelectedType.value == \"\"\r\n      ) {\r\n        formData.append(\"blood_group\", null);\r\n      } else {\r\n        formData.append(\"blood_group\", this.state.SelectedType.value);\r\n      }\r\n      if (this.state.dob == \" \" || this.state.dob == null) {\r\n        formData.append(\"dob\", null);\r\n      } else {\r\n        formData.append(\"dob\", this.state.dob);\r\n      }\r\n      if (\r\n        this.state.emergency_number == \" \" ||\r\n        this.state.emergency_number == null\r\n      ) {\r\n        formData.append(\"emergency_number\", null);\r\n      } else {\r\n        formData.append(\"emergency_number\", this.state.emergency_number);\r\n      }\r\n\r\n      formData.append(\"is_profile_complete\", true);\r\n      formData.append(\"address\", this.state.address);\r\n      formData.append(\"city\", this.state.city);\r\n      formData.append(\"pincode\", this.state.pincode.value);\r\n      formData.append(\"ward_id\", this.state.ward_id);\r\n\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        body: formData,\r\n      };\r\n\r\n      fetch(\r\n        \"https://scity.gmmspl.com:3000/smartcity/updateprofile\",\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          if (this.state.APIResponse.message === \"Update successfull\") {\r\n            toast.success(\"Profile Updated Successfully.\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              onClose: () => this.props.history.push(\"/dashboard\"),\r\n            });\r\n          } else {\r\n            toast.error(\"Something went wrong, Please try again\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              onClose: () => this.props.history.push(\"/\"),\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      toast.error(\"Please fill all mandatory fields\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n\r\n  updateGoogleProfile() {\r\n    if(this.state.phone_numberValue_SAT.length==10){\r\n    if (this.state.pincode.value != null && this.state.phone_numberValue_SAT !=\"\") {\r\n      let formData = new FormData();\r\n      formData.append(\"file\", this.state.file);\r\n      formData.append(\"token\", sessionStorage.getItem(\"token\"));\r\n      formData.append(\"user_id\", sessionStorage.getItem(\"user_id\"));\r\n      if (\r\n        this.state.SelectedType.value == \"undefined\" ||\r\n        this.state.SelectedType.value == undefined\r\n      ) {\r\n        formData.append(\"blood_group\", \" \");\r\n      } else {\r\n        formData.append(\"blood_group\", this.state.SelectedType.value);\r\n      }\r\n      if (this.state.dob == \" \" || this.state.dob == null) {\r\n        formData.append(\"dob\", null);\r\n      } else {\r\n        formData.append(\"dob\", this.state.dob);\r\n      }\r\n      if (\r\n        this.state.emergency_number == \" \" ||\r\n        this.state.emergency_number == null\r\n      ) {\r\n        formData.append(\"emergency_number\", null);\r\n      } else {\r\n        formData.append(\"emergency_number\", this.state.emergency_number);\r\n      }\r\n      formData.append(\"phone_number\", this.state.phone_numberValue_SAT);\r\n      //formData.append('dob', this.state.dob);\r\n      // formData.append('emergency_number', this.state.emergency_number);\r\n      formData.append(\"address\", this.state.address);\r\n      formData.append(\"city\", this.state.city);\r\n      formData.append(\"pincode\", this.state.pincode.value);\r\n      formData.append(\"ward_id\", this.state.ward_id);\r\n      formData.append(\"is_profile_complete\", true);\r\n\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        body: formData,\r\n      };\r\n\r\n      fetch(\r\n        \"https://scity.gmmspl.com:3000/googlelogin/updategoogleprofile\",\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          if (this.state.APIResponse.message === \"Profile update successfull\") {\r\n            toast.success(\"Profile Updated Successfully.\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              onClose: () => this.props.history.push(\"/dashboard\"),\r\n            });\r\n          } else {\r\n            toast.error(\"Something went wrong, Please try again\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              onClose: () => this.props.history.push(\"/\"),\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      toast.error(\"Please fill all mandatory fields\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }    \r\n  }\r\n  else{\r\n    toast.error(\"Phone number should be 10 digits\", {\r\n      position: \"top-center\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"light\",\r\n    });\r\n  }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"back-icon-div-allignemnt\"\r\n            >\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              {/* <Link to = \"collaboration-shareDiscussIdeas\">\r\n                  <Tooltip title=\"Dashboard\" placement=\"top\" TransitionProps={{ timeout: 600 }}>\r\n                    <MDBIcon icon=\"chevron-circle-left\" className=\"back-arrow-icon pt-1\"/>\r\n                  </Tooltip>\r\n                </Link> */}\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">Profile</label>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Item>\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                  </Dropdown.Item> */}\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"8\"\r\n            xl=\"8\"\r\n            xxl=\"8\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            <Container className=\"pt-5 pb-5\">\r\n              <Container className=\"pt-4 pb-4\">\r\n                <Row className=\"top-margin\">\r\n                  <Col xs lg=\"3\"></Col>\r\n                  <Col className=\"profileimage\" md=\"auto\" lg=\"6\">\r\n                    <input\r\n                      type=\"file\"\r\n                      onChange={this.handleChange}\r\n                      id=\"userImage\"\r\n                      accept=\"image/*\"\r\n                    />\r\n                    <label for=\"userImage\">\r\n                      <img\r\n                        src={this.state.image_path}\r\n                        class=\"round-img\"\r\n                        alt=\"\"\r\n                      />\r\n                    </label>\r\n                  </Col>\r\n                  <Col xs lg=\"3\"></Col>\r\n                </Row>\r\n              </Container>\r\n\r\n              <Container className=\"pt-3\">\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n                      <Grid item>\r\n                        <PermIdentityIcon className=\"login-icon-color\" />\r\n                      </Grid>\r\n                      <Grid item className=\"login-field-width-style\">\r\n                        <TextField\r\n                          id=\"input-with-icon-grid\"\r\n                          label=\"Full Name\"\r\n                          value={this.state.full_name}\r\n                          onChange={this.full_nameValidate_HMD}\r\n                          required\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n              </Container>\r\n\r\n              <Container className=\"pt-3\">\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n                      <Grid item>\r\n                        <PermIdentityIcon className=\"login-icon-color\" />\r\n                      </Grid>\r\n                      <Grid item className=\"login-field-width-style\">\r\n                        <TextField\r\n                          id=\"input-with-icon-grid\"\r\n                          type=\"number\"\r\n                          inputmode=\"numeric\"\r\n                          label=\"Age\"\r\n                          maxLength=\"3\"\r\n                          pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{3}\"\r\n                          value={this.state.dob}\r\n                          onChange={this.AgeValidate_SAT}\r\n                          onInput={(e) =>\r\n                            (e.target.value = e.target.value.slice(0, 3))\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n              </Container>\r\n\r\n              <Container className=\"pt-3\">\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n                      <Grid item>\r\n                        <CallOutlinedIcon className=\"login-icon-color\" />\r\n                      </Grid>\r\n                      <Grid item className=\"login-field-width-style\">\r\n                        <TextField\r\n                          type=\"number\"\r\n                          inputmode=\"numeric\"\r\n                          id=\"input-with-icon-grid\"\r\n                          maxLength=\"10\"\r\n                          pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{3}\"\r\n                          label=\"Phone Number\"\r\n                          value={this.state.phone_numberValue_SAT}\r\n                          onChange={this.phone_numberValidate_SAT}\r\n                          required\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n              </Container>\r\n\r\n              <Container className=\"pt-3\">\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n                      <Grid item>\r\n                        <MailOutlineIcon className=\"login-icon-color\" />\r\n                      </Grid>\r\n                      <Grid item className=\"login-field-width-style\">\r\n                        <TextField\r\n                          id=\"input-with-icon-grid\"\r\n                          label=\"Email\"\r\n                          value={this.state.email}\r\n                          onChange={this.emailValidate_SAT}\r\n                          required\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n              </Container>\r\n\r\n              <Container className=\"pt-3\">\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n                      <Grid item>\r\n                        <OpacityIcon className=\"login-icon-color\" />\r\n                      </Grid>\r\n                      <Grid item className=\"login-field-width-style\">\r\n                        {/* <TextField id=\"input-with-icon-grid\" label=\"Blood Group\" value={this.state.blood_group_id} onChange={this.emailValidate_SAT} /> */}\r\n                        <Select\r\n                          placeholder=\"Blood Group\"\r\n                          isSearchable={false}\r\n                          className=\"category-drop-style  category-drop-style-profile\"\r\n                          value={this.state.SelectedType}\r\n                          onChange={this.bloodGroupValidate_SAT}\r\n                          // labelKey='blood_group'\r\n                          // valueKey='blood_group_id'\r\n                          options={this.state.BloogGroupList}\r\n                          menuPlacement=\"top\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n              </Container>\r\n\r\n              <Container className=\"pt-3\">\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n                      <Grid item>\r\n                        <AccountBoxIcon className=\"login-icon-color\" />\r\n                      </Grid>\r\n                      <Grid item className=\"login-field-width-style\">\r\n                        <TextField\r\n                          id=\"input-with-icon-grid\"\r\n                          label=\"Address\"\r\n                          value={this.state.address}\r\n                          onChange={this.addressValidate_SAT}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n              </Container>\r\n\r\n              <Container className=\"pt-3\">\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n                      <Grid item>\r\n                        <LocationCityIcon className=\"login-icon-color\" />\r\n                      </Grid>\r\n                      <Grid item className=\"login-field-width-style\">\r\n                        <TextField\r\n                          id=\"input-with-icon-grid\"\r\n                          label=\"City\"\r\n                          value={this.state.city}\r\n                          onChange={this.cityValidate}\r\n                          required\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n              </Container>\r\n\r\n              {/* <Container>\r\n  <Row>\r\n    <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n    <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n      <Grid container spacing={1} alignItems=\"flex-end\">\r\n        <Grid item>\r\n          <RoomOutlinedIcon className=\"login-icon-color\" />\r\n        </Grid>\r\n        <Grid item className=\"login-field-width-style\">\r\n          <TextField id=\"input-with-icon-grid\" label=\"City\" value={this.state.city} onChange={this.cityValidate_HMD} required />\r\n        </Grid>\r\n      </Grid>\r\n    </Col>\r\n    <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n  </Row>\r\n</Container> */}\r\n\r\n              <Container className=\"pt-3\">\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n                      <Grid item>\r\n                        <RoomOutlinedIcon className=\"login-icon-color\" />\r\n                      </Grid>\r\n                      <Grid item className=\"login-field-width-style\">\r\n                        <Select\r\n                          placeholder={\r\n                            <label>\r\n                              Pincode<span class=\"select-astric-red\"> *</span>\r\n                            </label>\r\n                          }\r\n                          isSearchable={true}\r\n                          className=\"category-drop-style drop-down-style-z-index category-drop-style-profile\"\r\n                          value={this.state.pincode}\r\n                          onChange={this.pinCodeValidate_SAT}\r\n                          options={this.state.pinCodeList}\r\n                          menuPlacement=\"top\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n\r\n              <Container className=\"pt-3\">\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n                      <Grid item>\r\n                        <CallOutlinedIcon className=\"login-icon-color\" />\r\n                      </Grid>\r\n                      <Grid item className=\"login-field-width-style\">\r\n                        <TextField\r\n                          type=\"number\"\r\n                          inputmode=\"numeric\"\r\n                          id=\"input-with-icon-grid\"\r\n                          label=\"Emergency Number\"\r\n                          value={this.state.emergency_number}\r\n                          onChange={this.emergencyNumberValidate_SAT}\r\n                          onInput={(e) =>\r\n                            (e.target.value = e.target.value.slice(0, 10))\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n              </Container>\r\n\r\n              <Container className=\"pt-5\">\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"8\"\r\n                    xl=\"8\"\r\n                    xxl=\"8\"\r\n                    className=\"signup-text-message-style\"\r\n                  >\r\n                    <Button\r\n                      className=\"signup-button-style\"\r\n                      onClick={this.submit_SAT}\r\n                    >\r\n                      {LoginHeadings.Profile_SUBMIT_HMD}\r\n                    </Button>\r\n                  </Col>\r\n                  {/* <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"4\" xl=\"4\" xxl=\"4\" className=\"signup-text-message-style\">\r\n          <Button className=\"skip-button-style\">\r\n          <Link to='/dashboard' className=\"cancle-button-style\">\r\n            {LoginHeadings.Profile_CANCEL_HMD}\r\n            </Link>\r\n          </Button>\r\n        </Col> */}\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n                </Row>\r\n              </Container>\r\n            </Container>\r\n\r\n            <Row className=\"pt-5 pb-5\" />\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={3000}\r\n          hideProgressBar={false}\r\n          newestOnTop\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover={false}\r\n          className=\"toaster-style\"\r\n        />\r\n        {/* <Footer /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileFirstLogin;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-BecomeAVolunteer\\Collaboration-BecomeAVolunteer.js",["798","799","800","801","802","803","804","805","806","807","808","809","810"],"import React, { Component } from \"react\";\r\n\r\nimport Header from \"../../Dashboard-header\";\r\nimport CollaborationsHeadings from \"../../../jsonFiles/CollaborationJson/collaborationVolunteer\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport CollaborationBAVMostRecent from \"../Collaboration-bAV-MostRecent\";\r\nimport CollaborationBAVMostTrending from \"../Collaboration-bAV-MostTrending\";\r\nimport CollaborationBAVMostDiscussed from \"../Collaboration-bAV-MostDiscussed\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"../../Footer\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport LinesEllipsis from \"react-lines-ellipsis\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport \"./Collaboration-BecomeAVolunteer.css\";\r\n\r\nclass CollaborationBecomeAVolunteer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shareIcons: CollaborationsHeadings.Cards,\r\n      searchCardsValue: \"\",\r\n      APIResponse: \"\",\r\n      searchCardsValidate: false,\r\n      isOpen: false,\r\n      submit: false,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      eventTarget: \"\",\r\n      isLogin: \"\",\r\n    };\r\n    this.openVolunteerForm = this.openVolunteerForm.bind(this);\r\n    this.searchCardsValidate = this.searchCardsValidate.bind(this);\r\n    this.search_SAT = this.search_SAT.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.openMenu = this.openMenu.bind(this);\r\n    this.menuClose = this.menuClose.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.style = \"background-image: url();\";\r\n    document.body.style = \"background: #F9F9F9\";\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      if(sessionStorage.getItem(\"volunteerDefaultTab\")){\r\n        sessionStorage.removeItem(\"volunteerDefaultTab\")\r\n      }\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  searchCardsValidate = (e) => {\r\n    var searchValue = e.target.value;\r\n    if (searchValue != null && searchValue != \"\" && searchValue !== undefined) {\r\n      this.setState({\r\n        searchCardsValue: searchValue,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        searchCardsValue: searchValue,\r\n      });\r\n    }\r\n  };\r\n\r\n  search_SAT = (e) => {\r\n    this.state.searchCardsValidate = true;\r\n    if (this.state.searchCardsValidate) {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          user_id: sessionStorage.getItem(\"user_id\"),\r\n          token: sessionStorage.getItem(\"token\"),\r\n          search_text: this.state.searchCardsValue,\r\n        }),\r\n      };\r\n\r\n      fetch(\r\n        \"https://scity.gmmspl.com:3000/volunteer/searchvolunteer\",\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          if (this.state.APIResponse.message === \"Data Found\") {\r\n            var JsonDate = this.state.APIResponse.data;\r\n             for(var cardValues in JsonDate)\r\n          {\r\n              //console.log(\"share Icons card values:\",JsonDate[cardValues].cardProfileImage);\r\n              if (JsonDate[cardValues].cardProfileImage.indexOf(\"https\") == -1) {\r\n                JsonDate[cardValues].cardProfileImage=\"https://scity.gmmspl.com:3000/\"+JsonDate[cardValues].cardProfileImage;\r\n              }\r\n          }\r\n            this.setState({\r\n              shareIcons: JsonDate,\r\n            });\r\n          } else {\r\n            toast.error(\"Data is not available.\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n            this.setState({\r\n              searchCardsValidate: false,\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n  openVolunteerForm() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login to add a activity\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/collaboration-SubmitAVolunteer\");\r\n    }\r\n  }\r\n    UpdateACard = (CardID) => {\r\n    // console.log(\"CardID = \", CardID);\r\n    sessionStorage.setItem(\"VolunteerId\", CardID.volunteer_id);\r\n    this.props.history.push(\"/CollaborationBAVEditVolunteer\");\r\n  };\r\n\r\n  DeleteACard = (CardID) => {\r\n    // console.log(\"CardID = \", CardID);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        volunteer_id: CardID.volunteer_id,\r\n      }),\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/volunteer/deletevolunteer\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.status === true) {\r\n          this.search_SAT();\r\n        }\r\n      });\r\n  };\r\n\r\n  CardDetails = (CardID) => {\r\n    // console.log(\"CardID = \", CardID);\r\n\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login for details and to add comment.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      sessionStorage.setItem(\"VolunteerId\", CardID.volunteer_id);\r\n      sessionStorage.setItem(\r\n        \"volunteerDetailBack\",\r\n        \"collaboration-becomeAVolunteer\"\r\n      );\r\n      this.props.history.push(\"/volunteer-ACardDetails\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <Header />\r\n        <Container className=\"all-header-space\"></Container> */}\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              <Link to=\"/dashboard-collaboration\" onClick={()=>{sessionStorage.removeItem(\"volunteerDefaultTab\")}}>\r\n                <Tooltip\r\n                  title=\"Dashboard\"\r\n                  placement=\"top\"\r\n                  TransitionProps={{ timeout: 600 }}\r\n                  \r\n                >\r\n                  <MDBIcon\r\n                    icon=\"chevron-circle-left\"\r\n                    size=\"2x\"\r\n                    className=\"back-arrow-icon\"\r\n                  />\r\n                </Tooltip>\r\n              </Link>\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">\r\n                Become A Volunteer\r\n              </label>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            <Row className=\"search-bar-allignemt-style\">\r\n              <Col xs=\"1\" sm=\"1\" md=\"4\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n              <Col\r\n                xs=\"10\"\r\n                sm=\"10\"\r\n                md=\"8\"\r\n                lg=\"6\"\r\n                xl=\"6\"\r\n                xxl=\"6\"\r\n                className=\"small-screen-padding\"\r\n              >\r\n                <TextField\r\n                  value={this.state.searchCardsValue}\r\n                  onChange={this.searchCardsValidate}\r\n                  placeholder=\"Search here...\"\r\n                  className=\"serach-bar-style\"\r\n                  id=\"outlined-search\"\r\n                  type=\"search\"\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton>\r\n                          <MDBIcon\r\n                            icon=\"search\"\r\n                            className=\"search-bar-icon-style\"\r\n                            onClick={this.search_SAT}\r\n                          />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col xs=\"1\" sm=\"1\" md=\"0\" lg=\"0\" xl=\"0\" xxl=\"0\"></Col>\r\n            </Row>\r\n\r\n            <div className=\"inner-container-style-collaboration\">\r\n              <Row className=\"inner-container-banner-margin\">\r\n                <Col\r\n                  xs=\"12\"\r\n                  sm=\"12\"\r\n                  md=\"12\"\r\n                  lg=\"12\"\r\n                  xl=\"12\"\r\n                  xxl=\"12\"\r\n                  className=\"volunter-banners banner-submenu-style\"\r\n                >\r\n                  <Row>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                      {/* <Row className=\"collaboration-banner-text\"></Row> */}\r\n                      {/* <Row className=\"pl-3 collaboration-banner-text2\"></Row> */}\r\n                      <Row className=\"become-a-volunteer-banner-text\">\r\n                        {\" \"}\r\n                        Start your own campaigns to bring positive change in\r\n                        your city{\" \"}\r\n                      </Row>\r\n                      <Row className=\"start-new-idea-btn-allignment\">\r\n                        <Button\r\n                          className=\"share-discuss-button-style\"\r\n                          onClick={this.openVolunteerForm}\r\n                        >\r\n                          <label class=\"btn-color-style font-sizevolunter\">\r\n                            {\r\n                              CollaborationsHeadings.Collaboration_BUTTON_HEADING\r\n                            }\r\n                          </label>\r\n                        </Button>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n\r\n              {!this.state.searchCardsValidate && (\r\n                <div>\r\n                  <Tabs\r\n                    defaultActiveKey={sessionStorage.getItem(\"volunteerDefaultTab\") ? sessionStorage.getItem(\"volunteerDefaultTab\") : \"MostRecent\"}\r\n                    id=\"shareIdeas-tab\"\r\n                    className=\"pt-4\"\r\n                    onSelect={(key)=>{sessionStorage.setItem(\"volunteerDefaultTab\",key);}}\r\n                  >\r\n                    <Tab\r\n                      eventKey=\"MostRecent\"\r\n                      title=\"Most Recent\"\r\n                      tabClassName=\"share-disciss-tab-style pt-0 pr-0 pl-0\"\r\n                    >\r\n                      <CollaborationBAVMostRecent />\r\n                    </Tab>\r\n                    <Tab\r\n                      eventKey=\"Trending\"\r\n                      title=\"Trending\"\r\n                      tabClassName=\"share-disciss-tab-style pt-0 pr-0 pl-0\"\r\n                    >\r\n                      <CollaborationBAVMostTrending />\r\n                    </Tab>\r\n                    <Tab\r\n                      eventKey=\"MostDiscussed\"\r\n                      title=\"Most Discussed\"\r\n                      tabClassName=\"share-disciss-tab-style pt-0 pr-0 pl-0\"\r\n                      selected\r\n                    >\r\n                      <CollaborationBAVMostDiscussed />\r\n                    </Tab>\r\n                  </Tabs>\r\n                </div>\r\n              )}\r\n              {this.state.searchCardsValidate && (\r\n                <Container className=\"tab-card-container-style\">\r\n                  <Row>\r\n                    {this.state.shareIcons.map((CardValues, index) => (\r\n                      <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                        <Card className=\"tab-card-style\">\r\n                          <div class=\"card-top-border\"></div>\r\n                          <Row className=\"pt-3\">\r\n                            <Col\r\n                              xs=\"8\"\r\n                              sm=\"8\"\r\n                              md=\"8\"\r\n                              lg=\"8\"\r\n                              xl=\"8\"\r\n                              xxl=\"8\"\r\n                              className=\"pl-4\"\r\n                            >\r\n                              <Card.Title\r\n                                id=\"rcorners1\"\r\n                                className=\"tab-card-heading-style\"\r\n                              >\r\n                                {CardValues.cardType}\r\n                              </Card.Title>\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"2\"\r\n                              sm=\"2\"\r\n                              md=\"2\"\r\n                              lg=\"2\"\r\n                              xl=\"2\"\r\n                              xxl=\"2\"\r\n                              className=\"editcardvolunterplacing\"\r\n                            >\r\n                          {CardValues.cardUserId ==\r\n                            sessionStorage.getItem(\"user_id\") && (\r\n                            <MDBIcon\r\n                              far\r\n                              icon=\"edit\"\r\n                              className=\"editcardvolunter\"\r\n                              size=\"sm\"\r\n                              onClick={() => this.UpdateACard(CardValues)}\r\n                            />\r\n                    )}\r\n                  </Col>\r\n                            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n                              {CardValues.cardUserId ==\r\n                                sessionStorage.getItem(\"user_id\") && (\r\n                                <MDBIcon\r\n                                  icon=\"trash-alt\"\r\n                                  size=\"sm\"\r\n                                  className=\"card-icon-style-delete\"\r\n                                  onClick={() => this.DeleteACard(CardValues)}\r\n                                />\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n\r\n                          <Card.Subtitle className=\"\">\r\n                            <Row className=\"tab-card-subject-style\">\r\n                              <Col className=\"p-0\">\r\n                                <LinesEllipsis\r\n                                  text={CardValues.cardTitle}\r\n                                  maxLine=\"2\"\r\n                                  ellipsis={\r\n                                    <span\r\n                                      style={{\r\n                                        color: \"blue\",\r\n                                        fontSize: \"10px\",\r\n                                      }}\r\n                                    >\r\n                                      {\" \"}\r\n                                      ...\r\n                                    </span>\r\n                                  }\r\n                                  trimRight\r\n                                  basedOn=\"letters\"\r\n                                  // onReflow = {this.handleReflow}\r\n                                />\r\n                              </Col>\r\n                            </Row>\r\n                          </Card.Subtitle>\r\n\r\n                          <Card.Body className=\"p-0\">\r\n                            <Card.Text className=\"tab-card-body-style mb-2\">\r\n                              {/* <p>{CardValues.cardDescription}</p> */}\r\n                              <LinesEllipsis\r\n                                text={CardValues.cardDescription}\r\n                                maxLine=\"3\"\r\n                                ellipsis={\r\n                                  <span\r\n                                    style={{ color: \"blue\", fontSize: \"10px\" }}\r\n                                  >\r\n                                    {\" \"}\r\n                                    ...\r\n                                  </span>\r\n                                }\r\n                                trimRight\r\n                                basedOn=\"words\"\r\n                                // onReflow = {this.handleReflow}\r\n                              />\r\n                            </Card.Text>\r\n                            <Card.Text className=\"tab-card-body-style\">\r\n                              {CardValues.comments === null && (\r\n                                <p className=\"card-comments-style\">\r\n                                  <label id=\"rcorners-comment-count\">\r\n                                    0{\" \"}\r\n                                    <span class=\"comments-count-style\">\r\n                                      Comments\r\n                                    </span>\r\n                                  </label>\r\n                                </p>\r\n                              )}\r\n                              {CardValues.comments != null && (\r\n                                <p className=\"card-comments-style\">\r\n                                  <label id=\"rcorners-comment-count\">\r\n                                    {CardValues.comments}{\" \"}\r\n                                    <span class=\"comments-count-style\">\r\n                                      Comments\r\n                                    </span>\r\n                                  </label>\r\n                                </p>\r\n                              )}\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                              <Row className=\"pt-3 card-footer__events\">\r\n                                <Col\r\n                                  xs=\"3\"\r\n                                  sm=\"3\"\r\n                                  md=\"3\"\r\n                                  lg=\"3\"\r\n                                  xl=\"3\"\r\n                                  className=\"card-profile-image-col-style\"\r\n                                >\r\n                                  <img\r\n                                    src={CardValues.cardProfileImage}\r\n                                    alt=\"\"\r\n                                    class=\"card-profile-image-style\"\r\n                                  />\r\n                                </Col>\r\n                                <Col\r\n                                  xs=\"5\"\r\n                                  sm=\"5\"\r\n                                  md=\"5\"\r\n                                  lg=\"5\"\r\n                                  xl=\"5\"\r\n                                  className=\"card-image-imfo-style pr-0\"\r\n                                >\r\n                                  <Row className=\"card-image-profile-name-style\">\r\n                                    <label>{CardValues.cardPostedBy}</label>\r\n                                  </Row>\r\n                                  <Row className=\"card-image-imfo-row-style\">\r\n                                    <label>{CardValues.cardPostedOn}</label>\r\n                                  </Row>\r\n                                </Col>\r\n                                <Col\r\n                                  xs=\"4\"\r\n                                  sm=\"4\"\r\n                                  md=\"4\"\r\n                                  lg=\"4\"\r\n                                  xl=\"4\"\r\n                                  className=\"p-0 card-icon-alignment\"\r\n                                >\r\n                                  <div>\r\n                                    <span class=\"\">\r\n                                      <MDBIcon\r\n                                        far\r\n                                        icon=\"eye\"\r\n                                        size=\"sm\"\r\n                                        className=\"card-icon-style\"\r\n                                        onClick={() =>\r\n                                          this.CardDetails(CardValues)\r\n                                        }\r\n                                      />\r\n                                    </span>\r\n                                    <span class=\"pl-2 \">\r\n                                      <MDBIcon\r\n                                        icon=\"reply\"\r\n                                        size=\"sm\"\r\n                                        className=\"card-icon-style\"\r\n                                        onClick={() =>\r\n                                          this.CardDetails(CardValues)\r\n                                        }\r\n                                      />\r\n                                    </span>\r\n                                  </div>\r\n                                </Col>\r\n                                {/* <Col xs=\"3\" sm=\"3\" md=\"3\" lg=\"3\" xl=\"3\" className=\"p-0 card-icon-alignment-reply\">\r\n                <MDBIcon icon=\"reply\" size=\"sm\" className=\"card-icon-style\" onClick={() => this.CardDetails(CardValues)}/>\r\n                </Col> */}\r\n                              </Row>\r\n                            </Card.Text>\r\n                          </Card.Body>\r\n                        </Card>\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                  <Row className=\"pb-5\"></Row>\r\n\r\n                  {/* <Row className=\"pb-5\"></Row>\r\n                  <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                    <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                    {\r\n                    (this.state.shareIcons.length >= this.state.cardCounts) &&\r\n                    <Button className=\"login-button-style\" onClick={this.LoadMore_SAT}>\r\n                      Load More      \r\n                    </Button>\r\n                    }\r\n                    </Col>\r\n                  </Row>\r\n                     */}\r\n                </Container>\r\n              )}\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        <Footer />\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={3000}\r\n          hideProgressBar={false}\r\n          newestOnTop\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover={false}\r\n          className=\"toaster-style\"\r\n        />\r\n        {/* <Container className=\"inner-header-space\"></Container> */}\r\n        {/* <Container className=\"p-0\"> */}\r\n        {/* <Row className=\"share-discuss-heading-style\"> */}\r\n        {/* <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\" className=\"share-discuss-back-button-style\">\r\n              <Link to = {CollaborationsHeadings.NavigateTo}>\r\n              <KeyboardBackspaceIcon className=\"backButtonStyle\"/>\r\n              </Link>\r\n            </Col> */}\r\n        {/* <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\" className=\"\">\r\n              <img src={CollaborationsHeadings.Collaboration_BACK_ICON} alt=\"\" class=\"share-discuss-image-style\" />\r\n            </Col> */}\r\n        {/* <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\" className=\"share-discuss-heading-styles\">\r\n              <label>\r\n                <span class=\"pr-1\">\r\n                  <img src={CollaborationsHeadings.Collaboration_BACK_ICON} alt=\"\" class=\"share-discuss-image-style\" />\r\n                </span>\r\n                <span class=\"pt-2\">{CollaborationsHeadings.Collaboration_SHARE_DISCUSS_HEADING}</span>\r\n              </label>\r\n            </Col> */}\r\n        {/* </Row> */}\r\n\r\n        {/* <Link to = \"/collaboration-SubmitAVolunteer\"> */}\r\n        {/* <Row className=\"share-discuss-button-style-row\">\r\n              <Button className=\"share-discuss-button-style\" onClick={this.openVolunteerForm}>\r\n                {CollaborationsHeadings.Collaboration_BUTTON_HEADING}\r\n              </Button>\r\n              <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover={false}\r\n                className=\"toaster-style\"\r\n                />\r\n          </Row> */}\r\n        {/* </Link> */}\r\n\r\n        {/* <Tabs defaultActiveKey=\"MostRecent\" id=\"shareIdeas-tab\" className=\"pt-4\">\r\n            <Tab eventKey=\"MostRecent\" title=\"Most Recent\" tabClassName=\"share-disciss-tab-style pt-0 pr-0 pl-0\">\r\n              <CollaborationBAVMostRecent />\r\n            </Tab>\r\n            <Tab eventKey=\"Trending\" title=\"Trending\" tabClassName=\"share-disciss-tab-style pt-0 pr-0 pl-0\">\r\n              <CollaborationBAVMostTrending />\r\n            </Tab>\r\n            <Tab eventKey=\"MostDiscussed\" title=\"Most Discussed\" tabClassName=\"share-disciss-tab-style pt-0 pr-0 pl-0\">\r\n              <CollaborationBAVMostDiscussed />\r\n            </Tab>\r\n          </Tabs> */}\r\n        {/* <Row className=\"pt-5 pb-5\"></Row>\r\n          <Footer />\r\n        </Container> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CollaborationBecomeAVolunteer);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Polls_Surveys\\CollaborationPSDetails\\CollaborationPSDetails.js",["811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831"],"import React, { Component } from \"react\";\r\nimport Header from \"../../Dashboard-header\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n// import Card from 'react-bootstrap/Card';\r\nimport \"./CollaborationPSDetails.css\";\r\nimport CollaborationsHeadings from \"../../../jsonFiles/CollaborationJson/collaborationDetails\";\r\n// import { MDBIcon } from \"../../../../node_modules/mdbreact\";\r\nimport { Link } from \"react-router-dom\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\n// import Radio from '@material-ui/core/Radio';\r\n// import RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n// import FormControl from '@material-ui/core/FormControl';\r\n// import FormLabel from '@material-ui/core/FormLabel';\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n// import FormGroup from '@material-ui/core/FormGroup';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Footer from \"../../Footer\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { MDBIcon } from \"mdbreact\";\r\n\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport footer_data from \"../../../jsonFiles/DashboardInfoJson/DashboardFooter\";\r\n\r\nclass CollaborationPSDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pollsBinding: CollaborationsHeadings.PollsCardDetails,\r\n      APIResponse: \"\",\r\n      APIResponseSucess: false,\r\n      OptionSelected: \"\",\r\n      CheckboxOptionLength: [],\r\n      CheckboxOptionData: [],\r\n      VoteData: [],\r\n      VoteResponse: \"\",\r\n      isOpen: false,\r\n      submit: false,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      eventTarget: \"\",\r\n      footer: footer_data.paths,\r\n      isLogin: \"\",\r\n      optionsLengthfromAPI: 0,\r\n      Counter: 0,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.Submit = this.Submit.bind(this);\r\n    this.Cancel = this.Cancel.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      document.body.style = \"background-image: url();\";\r\n      document.body.style = \"background: #F9F9F9\";\r\n      this.getpollid();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.Counter <= 1) {\r\n      this.getpollid();\r\n    }\r\n  }\r\n\r\n  getpollid() {\r\n    this.state.Counter = this.state.Counter + 1;\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        admin_id: sessionStorage.getItem(\"admin_id\"),\r\n        poll_id: sessionStorage.getItem(\"poll_id\"),\r\n        poll_options_id: sessionStorage.getItem(\"poll_options_id\"),\r\n      }),\r\n    };\r\n    fetch(\"https://scity.gmmspl.com:3000/poll/getpollid\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.status === true) {\r\n          var JsonDate = this.state.APIResponse.data;\r\n          this.setState({\r\n            pollsBinding: JsonDate,\r\n            APIResponseSucess: true,\r\n          });\r\n          var optionLength = this.state.pollsBinding.d_option_name.length;\r\n          this.state.optionsLengthfromAPI = this.state.pollsBinding.voted_answer.length;\r\n          for (var i = 0; i < optionLength; i++) {\r\n            if (this.state.pollsBinding.voted_answer.length != 0) {\r\n              for (\r\n                var j = 0;\r\n                j < this.state.pollsBinding.voted_answer.length;\r\n                j++\r\n              ) {\r\n                if (this.state.pollsBinding.voted_answer[j]) {\r\n                  if (\r\n                    this.state.pollsBinding.voted_answer[j] ===\r\n                    this.state.pollsBinding.d_option_name[i].option_name\r\n                  ) {\r\n                    // console.log(\"this.state.pollsBinding.voted_answer[] = \",this.state.pollsBinding.voted_answer[j]);\r\n                    // console.log(\"this.state.pollsBinding.d_option_name[i] = \",this.state.pollsBinding.d_option_name[i].option_name);\r\n                    this.state.CheckboxOptionLength[i] = true;\r\n                    break;\r\n                  } else {\r\n                    this.state.CheckboxOptionLength[i] = false;\r\n                  }\r\n                } else {\r\n                  this.state.CheckboxOptionLength[i] = false;\r\n                }\r\n              }\r\n            } else {\r\n              this.state.CheckboxOptionLength[i] = false;\r\n            }\r\n          }\r\n        } else {\r\n          toast.error(\"Something went wrong, Please try again\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () => this.props.history.push(\"/\"),\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  // handleChange = (event) =>{\r\n  //   this.setState({\r\n  //     OptionSelected:event.target.value,\r\n  //   })\r\n\r\n  // }\r\n\r\n  handleChange = (index, OptionValues) => {\r\n    // console.log(\"OptionValues = \", OptionValues);\r\n    this.setState({\r\n      OptionSelected: OptionValues,\r\n    });\r\n  };\r\n\r\n  handleChangeCheckbox = (index, OptionValues) => {\r\n    if (this.state.CheckboxOptionLength[index] == true) {\r\n      this.state.CheckboxOptionLength[index] = false;\r\n    } else {\r\n      this.state.CheckboxOptionLength[index] = true;\r\n    }\r\n  };\r\n\r\n  Cancel() {\r\n    //pass login id and cancel request.\r\n    //console.log(\"Your request is canceled\");\r\n    //  sessionStorage.clear();\r\n    this.props.history.push(sessionStorage.getItem(\"pollDetailBack\"));\r\n  }\r\n\r\n  Submit() {\r\n    var arrOption = [];\r\n    for (var j = 0; j < this.state.pollsBinding.d_option_name.length; j++) {\r\n      if (this.state.CheckboxOptionLength[j] == true) {\r\n        arrOption.push(this.state.pollsBinding.d_option_name[j]);\r\n      }\r\n    }\r\n\r\n    // console.log(\"arrOption\",arrOption);\r\n    if (arrOption.length > 0) {\r\n      this.state.VoteData = arrOption;\r\n    } else {\r\n      this.state.VoteData.push(this.state.OptionSelected);\r\n    }\r\n\r\n    // console.log(\"final\",this.state.VoteData);\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        poll_vote: this.state.VoteData,\r\n        poll_id: sessionStorage.getItem(\"poll_id\"),\r\n      }),\r\n    };\r\n    fetch(\"https://scity.gmmspl.com:3000/poll/votePoll\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          VoteResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.VoteResponse);\r\n        if (this.state.VoteResponse.message === \"Vote added sucessfully\") {\r\n          toast.success(\"Your vote successfully submitted\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () =>\r\n              this.props.history.push(sessionStorage.getItem(\"pollDetailBack\")),\r\n          });\r\n          //   var JsonDate = this.state.APIResponse.data;\r\n          //   this.setState({\r\n          //     pollsBinding: JsonDate\r\n          //   })\r\n        } else if (this.state.VoteResponse.message === \"Already Voted\") {\r\n          toast.success(\"You have already Voted\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            // onClose: () => this.props.history.push(\"/collaboration-pollsSurveys\")\r\n          });\r\n        } else {\r\n          toast.error(\"Please select an option to vote.\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    // console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const question_type = !this.state.pollsBinding.d_question_type;\r\n    return (\r\n      <div>\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"back-icon-div-allignemnt\"\r\n            >\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              <Link to={sessionStorage.getItem(\"pollDetailBack\")}>\r\n                <Tooltip\r\n                  title=\"Dashboard\"\r\n                  placement=\"top\"\r\n                  TransitionProps={{ timeout: 600 }}\r\n                >\r\n                  <MDBIcon\r\n                    icon=\"chevron-circle-left\"\r\n                    size=\"2x\"\r\n                    className=\"back-arrow-icon pt-1\"\r\n                  />\r\n                </Tooltip>\r\n              </Link>\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">\r\n                {\r\n                  CollaborationsHeadings.Collaboration_POLLS_SURVEYS_DETAILSHEADING\r\n                }\r\n              </label>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            <div class=\"details-container-style inner-container-style-collaboration\">\r\n              <Row className=\"m-3\">\r\n                <Col\r\n                  xs=\"12\"\r\n                  sm=\"12\"\r\n                  md=\"12\"\r\n                  lg=\"12\"\r\n                  xl=\"12\"\r\n                  xxl=\"12\"\r\n                  className=\"polls-banners banner-submenu-style\"\r\n                >\r\n                  <Row>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                      <Row className=\"become-a-volunteer-banner-text\">\r\n                        Please submit your vote because your opinion counts.\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Container className=\"\">\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"card-details-title-style\"\r\n                  >\r\n                    {/* <span class=\"card-details-category-style\"><label>Title :&nbsp;</label></span> */}\r\n                    <label>{this.state.pollsBinding.poll_subject}</label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                {this.state.APIResponseSucess && (\r\n                  <Row>\r\n                    <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"1\" xl=\"1\"></Col>\r\n                    <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"10\" xl=\"10\">\r\n                      {this.state.pollsBinding.voted_answer.length != 0 && (\r\n                        <div>\r\n                          {question_type\r\n                            ? this.state.pollsBinding.d_option_name.map(\r\n                                (OptionValues, index) => (\r\n                                  <div class=\"pt-1 pb-1\">\r\n                                    <input\r\n                                      type=\"radio\"\r\n                                      checked={\r\n                                        this.state.CheckboxOptionLength[index]\r\n                                      }\r\n                                      value={OptionValues.option_name}\r\n                                      name=\"polloptions\"\r\n                                      onChange={() =>\r\n                                        this.handleChange(index, OptionValues)\r\n                                      }\r\n                                    />{\" \"}\r\n                                    {OptionValues.option_name}\r\n                                  </div>\r\n                                )\r\n                              )\r\n                            : this.state.pollsBinding.d_option_name.map(\r\n                                (OptionValues, index) => (\r\n                                  <FormControlLabel\r\n                                    className=\"radiowidth\"\r\n                                    control={\r\n                                      <Checkbox\r\n                                        style={{ color: \"#EF7A2D\" }}\r\n                                        checked={\r\n                                          !!this.state.CheckboxOptionLength[\r\n                                            index\r\n                                          ]\r\n                                        }\r\n                                        onChange={() =>\r\n                                          this.handleChangeCheckbox(\r\n                                            index,\r\n                                            OptionValues\r\n                                          )\r\n                                        }\r\n                                        name={OptionValues.option_name}\r\n                                      />\r\n                                    }\r\n                                    label={OptionValues.option_name}\r\n                                  />\r\n                                )\r\n                              )}\r\n                        </div>\r\n                      )}\r\n                      {this.state.pollsBinding.voted_answer.length == 0 && (\r\n                        <div>\r\n                          {question_type\r\n                            ? this.state.pollsBinding.d_option_name.map(\r\n                                (OptionValues, index) => (\r\n                                  <div class=\"pt-1 pb-1\">\r\n                                    <input\r\n                                      type=\"radio\"\r\n                                      value={OptionValues.option_name}\r\n                                      name=\"polloptions\"\r\n                                      onChange={() =>\r\n                                        this.handleChange(index, OptionValues)\r\n                                      }\r\n                                    />{\" \"}\r\n                                    {OptionValues.option_name}\r\n                                  </div>\r\n                                )\r\n                              )\r\n                            : this.state.pollsBinding.d_option_name.map(\r\n                                (OptionValues, index) => (\r\n                                  <FormControlLabel\r\n                                    className=\"radiowidth\"\r\n                                    control={\r\n                                      <Checkbox\r\n                                        style={{ color: \"#EF7A2D\" }}\r\n                                        checked={this.checked}\r\n                                        onChange={() =>\r\n                                          this.handleChangeCheckbox(\r\n                                            index,\r\n                                            OptionValues\r\n                                          )\r\n                                        }\r\n                                        name={OptionValues.option_name}\r\n                                      />\r\n                                    }\r\n                                    label={OptionValues.option_name}\r\n                                  />\r\n                                )\r\n                              )}\r\n                        </div>\r\n                      )}\r\n                    </Col>\r\n                    <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"1\" xl=\"1\"></Col>\r\n                  </Row>\r\n                )}\r\n\r\n                <Row className=\"card-details-title-row-style pt-2\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"card-details-description-style\"\r\n                  >\r\n                    {/* <span class=\"card-details-category-style\"><label>Start Date :&nbsp;</label></span>\r\n                      <label>{this.state.LocalCardsData.start_date}</label> */}\r\n                    <p className=\"endDateColor pt-3\">\r\n                      Poll open till:{this.state.pollsBinding.end_date}\r\n                    </p>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-4 pb-5\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"5\" lg=\"5\" xl=\"5\" xxl=\"5\">\r\n                    {/* <Link> */}\r\n                    <Button className=\"skip-button-style\" onClick={this.Cancel}>\r\n                      CANCEL\r\n                    </Button>\r\n                    {/* </Link> */}\r\n                  </Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"5\" lg=\"5\" xl=\"5\" xxl=\"5\">\r\n                    <Button\r\n                      className=\"login-button-style\"\r\n                      onClick={this.Submit}\r\n                    >\r\n                      SUBMIT\r\n                    </Button>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"10\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n              </Container>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n\r\n        <Row className=\"pb-3\"></Row>\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={3000}\r\n          hideProgressBar={false}\r\n          newestOnTop\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover={false}\r\n          className=\"toaster-style\"\r\n        />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CollaborationPSDetails);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-BecomeAVolunteer\\Collaboration-bAV-BecomeAVolunteer.js",["832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856"],"import React, { Component } from \"react\";\r\nimport Header from \"../../Dashboard-header\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport CollaborationsHeadings from \"../../../jsonFiles/CollaborationJson/collaborationVolunteer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"react-select\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport \"./Collaboration-bAV-BecomeAVolunteer.css\";\r\nimport Footer from \"../../Footer\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport PublishUpload from \"@material-ui/icons/Publish\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport footer_data from \"../../../jsonFiles/DashboardInfoJson/DashboardFooter\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nclass CollaborationBAVBecomeAVolunteer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      // shareIcons: DashboardHeadings.DashIcons\r\n      newTitle: \"\",\r\n      newTitleValidate: false,\r\n      description: \"\",\r\n      descriptionValidate: false,\r\n      tag: \"\",\r\n      tagValidate: false,\r\n      SelectedType: \"\",\r\n      start_date: \"\",\r\n      startDateValidate: \"\",\r\n      end_date: \"\",\r\n      endDateValidate: \"\",\r\n      file_upload1: null,\r\n      file_upload2: null,\r\n      file_upload3: null,\r\n      tooManyFiles: false,\r\n      largeFileSize: false,\r\n      dialogBoxStatus: false,\r\n      currentDate: \"\",\r\n      CategoryList: \"\",\r\n      isOpen: false,\r\n      submit: false,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      eventTarget: \"\",\r\n      footer: footer_data.paths,\r\n      isLogin: \"\",\r\n      file_upload: [],\r\n      fileName: [],\r\n      fileNameData: [],\r\n      shareLocationflag: false,\r\n      buttonDisabled : false\r\n    };\r\n    this.newTitleValidate = this.newTitleValidate.bind(this);\r\n    this.Submit = this.Submit.bind(this);\r\n    this.descriptionValidate = this.descriptionValidate.bind(this);\r\n    this.startDateValidate = this.startDateValidate.bind(this);\r\n    this.UploadAttachedFiles = this.UploadAttachedFiles.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.changeLocation = this.changeLocation.bind(this);\r\n    this.volunterBack = this.volunterBack.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.cancelUpload = this.cancelUpload.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n    this.getTruncatedName=this.getTruncatedName.bind(this);\r\n    this.ShareLocationCheckboxToggle_SAT = this.ShareLocationCheckboxToggle_SAT.bind(\r\n      this\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      document.body.style = \"background-image: url();\";\r\n      document.body.style = \"background: #F9F9F9\";\r\n      if (sessionStorage.getItem(\"volunterCatgValue\")) {\r\n        var tempObj = {\r\n          value: sessionStorage.getItem(\"volunterCatgValue\"),\r\n          label: sessionStorage.getItem(\"volunterCatglabel\"),\r\n        };\r\n        this.setState({\r\n          SelectedType: tempObj,\r\n          SelectedTypeValidate: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        newTitle: sessionStorage.getItem(\"volunterTitle\"),\r\n        newTitleValidate: true,\r\n        description: sessionStorage.getItem(\"volunterDesc\"),\r\n        descriptionValidate: true,\r\n        start_date: sessionStorage.getItem(\"volunterSdate\"),\r\n        startDateValidate: \"\",\r\n        end_date: sessionStorage.getItem(\"volunterEdate\"),\r\n        endDateValidate: \"\",\r\n      });\r\n      if (sessionStorage.getItem(\"BAV_shareLocationflag\")) {\r\n        this.setState({\r\n          shareLocationflag: sessionStorage.getItem(\"BAV_shareLocationflag\"),\r\n        });\r\n      } else {\r\n        this.setState({\r\n          shareLocationflag: false,\r\n        });\r\n      }\r\n\r\n      this.getCategoryList();\r\n    }\r\n    this.state.currentDate = new Date();\r\n  }\r\n\r\n  volunterBack() {\r\n    sessionStorage.removeItem(\"volunterBack\");\r\n    sessionStorage.setItem(\r\n      \"volunterLocation\",\r\n      sessionStorage.getItem(\"currentAddress\")\r\n    );\r\n    sessionStorage.removeItem(\"mapsBack\");\r\n    sessionStorage.removeItem(\"volunterTemplong\");\r\n    sessionStorage.removeItem(\"volunterTemplat\");\r\n    sessionStorage.removeItem(\"volunterTempLocation\");\r\n    sessionStorage.removeItem(\"volunterlong\");\r\n    sessionStorage.removeItem(\"volunterlat\");\r\n\r\n    sessionStorage.removeItem(\"volunterTitle\");\r\n    sessionStorage.removeItem(\"volunterDesc\");\r\n    sessionStorage.removeItem(\"volunterCatgValue\");\r\n    sessionStorage.removeItem(\"volunterCatglabel\");\r\n    sessionStorage.removeItem(\"volunterSdate\");\r\n    sessionStorage.removeItem(\"volunterEdate\");\r\n    sessionStorage.removeItem(\"BAV_shareLocationflag\");\r\n  }\r\n  ShareLocationCheckboxToggle_SAT = (e) => {\r\n    var temp;\r\n    if (this.state.shareLocationflag == false) {\r\n      this.setState({\r\n        shareLocationflag: true,\r\n        \r\n      });\r\n      temp=true;\r\n    } else {\r\n      this.setState({\r\n        shareLocationflag: false,\r\n        \r\n      });\r\n      temp=false;\r\n    }\r\n    sessionStorage.setItem(\"BAV_shareLocationflag\",temp);\r\n  };\r\n\r\n  getCategoryList() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n      }),\r\n    };\r\n\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/volunteer/getvoluntercategory\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.message === \"Data Found\") {\r\n          const options = this.state.APIResponse.data.map((d) => ({\r\n            value: d.volunteer_cat_id,\r\n            label: d.category_name,\r\n          }));\r\n          this.setState({ CategoryList: options });\r\n        } else {\r\n          toast.error(\"Something went wrong, Please try again\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () =>\r\n              this.props.history.push(\"/collaboration-shareDiscussIdeas\"),\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  onChangeFile(e) {\r\n    console.log(\"event object :\",e);\r\n    let files = e.target.files;\r\n    //  console.log(files);  var test=document.getElementsByClassName(\"file1upload\")[0].attributes[0].nodeValue;\r\n\r\n    var totalSelectedCount =\r\n      e.currentTarget.files.length + this.state.fileName.length;\r\n    if (e.currentTarget.files.length < 4 && totalSelectedCount < 4) {\r\n      for (var i = 0; i < e.currentTarget.files.length; i++) {\r\n        if (e.currentTarget.files[i].size / 1024 / 1024 > 5) {\r\n          this.state.largeFileSize = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (this.state.largeFileSize === false) {\r\n        console.log(this.state.fileName.length);\r\n\r\n        var test = [];\r\n        for (var j = 0; j < this.state.fileName.length; j++) {\r\n          test[j] = this.state.fileName[j];\r\n        }\r\n        for (var i = 0; i < e.currentTarget.files.length; i++) {\r\n          test[j] = e.currentTarget.files[i];\r\n          j++;\r\n        }\r\n        this.setState({ test });\r\n\r\n        this.setState({\r\n          fileName: test,\r\n        });\r\n        // console.log(\"test\",this.state.fileName);\r\n      } else {\r\n        toast.warn(\"The file size should not be greater than 5 MB.\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n         this.state.largeFileSize = false;\r\n         this.myRef.current.value=\"\" ;\r\n      }\r\n    } else {\r\n      toast.error(\"Only 3 files are allowed to upload.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n  getTruncatedName=(attachmentname)=>{\r\n    if(attachmentname.length>25)\r\n    {\r\n      var truncatename= attachmentname.substr(0,10)+'...'+attachmentname.substr(attachmentname.length-8,attachmentname.length-1)\r\n      return truncatename;\r\n    }\r\n    else{\r\n    return(attachmentname);\r\n    }\r\n  }\r\n  cancelUpload(num) {\r\n    var array = [...this.state.fileName]; // make a separate copy of the array\r\n    var index = num;\r\n    if (index !== -1) {\r\n      array.splice(index, 1);\r\n      this.setState({ fileName: array });\r\n      this.myRef.current.value=\"\";\r\n    }\r\n  }\r\n\r\n  newTitleValidate = (e) => {\r\n    var title = e.target.value;\r\n    if (title != \"\") {\r\n      this.setState({\r\n        newTitle: e.target.value,\r\n        newTitleValidate: true,\r\n      });\r\n      sessionStorage.setItem(\"volunterTitle\", title);\r\n    } else {\r\n      this.setState({\r\n        newTitle: e.target.value,\r\n        newTitleValidate: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  descriptionValidate = (e) => {\r\n    this.setState({\r\n      description: e.target.value,\r\n      descriptionValidate: true,\r\n    });\r\n    sessionStorage.setItem(\"volunterDesc\", e.target.value);\r\n  };\r\n\r\n  startDateValidate = (e) => {\r\n    this.setState({\r\n      start_date: e.target.value,\r\n      startDateValidate: \"\",\r\n    });\r\n    sessionStorage.setItem(\"volunterSdate\", e.target.value);\r\n  };\r\n\r\n  endDateValidate = (e) => {\r\n    this.setState({\r\n      end_date: e.target.value,\r\n      endDateValidate: \"\",\r\n    });\r\n    sessionStorage.setItem(\"volunterEdate\", e.target.value);\r\n  };\r\n\r\n  CategoryTypeValidate = (Selected_option) => {\r\n    this.setState({\r\n      SelectedType: Selected_option,\r\n      SelectedTypeValidate: true,\r\n    });\r\n    sessionStorage.setItem(\"volunterCatgValue\", Selected_option.value);\r\n    sessionStorage.setItem(\"volunterCatglabel\", Selected_option.label);\r\n  };\r\n\r\n  UploadAttachedFiles = (e) => {\r\n   // console.log(\"in the upload Attachment\");\r\n    if (e.currentTarget.files.length < 4) {\r\n      for (var i = 0; i < e.currentTarget.files.length; i++) {\r\n        console.log(\r\n          \"File size = \",\r\n          e.currentTarget.files[i].size / 1024 / 1024\r\n        );\r\n        if (e.currentTarget.files[i].size / 1024 / 1024 > 5) {\r\n          this.state.largeFileSize = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (this.state.largeFileSize === false) {\r\n        this.setState({\r\n          file_upload1: e.currentTarget.files[0],\r\n          file_upload2: e.currentTarget.files[1],\r\n          file_upload3: e.currentTarget.files[2],\r\n        });\r\n        toast.success(\"File Successfully Uploaded\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n      } else {\r\n        toast.warn(\"The file size should not be greater than 5 MB.\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n         this.state.largeFileSize = false;\r\n         this.myRef.current.value=\"\" ;\r\n      }\r\n    } else {\r\n      toast.error(\"Only 3 files are allowed to upload.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      largeFileSize: false,\r\n      tooManyFiles: false,\r\n      dialogBoxStatus: false,\r\n    });\r\n  }\r\n\r\n  Submit() {\r\n    // console.log(\"Title = \", this.state.newTitle);\r\n    // console.log(\"Description = \", );\r\n    // console.log(\"start_date = \", this.state.start_date);\r\n    // console.log(\"end_date = \", );\r\n    // console.log(\"SelectedType = \", );\r\n    // console.log(\"this.state.file_upload1 = \", this.state.file_upload1);\r\n    // console.log(\"this.state.file_upload2 = \", this.state.file_upload2);\r\n    // console.log(\"this.state.file_upload3 = \", this.state.file_upload3);\r\n    \r\n    if(this.state.newTitle != '' && this.state.newTitle != null && this.state.newTitle != undefined && this.state.start_date != null && this.state.end_date != null) {\r\n     // this.refs.btn.setAttribute(\"disabled\", \"disabled\");\r\n     this.setState({\r\n        buttonDisabled : true\r\n      });\r\n      let formData = new FormData();\r\n      formData.append(\"token\", sessionStorage.getItem(\"token\"));\r\n      formData.append(\"user_id\", sessionStorage.getItem(\"user_id\"));\r\n      formData.append(\"category\", this.state.SelectedType.value);\r\n      formData.append(\"title\", this.state.newTitle);\r\n      // formData.append('description', this.state.descthis.state.start_date != nription);\r\n      formData.append(\"start_date\", this.state.start_date);\r\n      formData.append(\"end_date\", this.state.end_date);\r\n      formData.append(\"share_location_flag\", this.state.shareLocationflag);\r\n      if (\r\n        this.state.description == null ||\r\n        this.state.description == undefined ||\r\n        this.state.description == \"null\"\r\n      ) {\r\n        formData.append(\"description\", \" \");\r\n      } else {\r\n        formData.append(\"description\", this.state.description);\r\n      }\r\n\r\n      for (var i = 1; i <= this.state.fileName.length; i++) {\r\n        formData.append(\"file\" + i, this.state.fileName[i - 1]);\r\n      }\r\n\r\n      if (sessionStorage.getItem(\"volunterlong\")) {\r\n        formData.append(\"longitude\", sessionStorage.getItem(\"volunterlong\"));\r\n        formData.append(\"latitude\", sessionStorage.getItem(\"volunterlat\"));\r\n        formData.append(\"address\", sessionStorage.getItem(\"volunterLocation\"));\r\n      } else {\r\n        formData.append(\r\n          \"longitude\",\r\n          sessionStorage.getItem(\"currentLongitude\")\r\n        );\r\n        formData.append(\"latitude\", sessionStorage.getItem(\"currentLatitude\"));\r\n        formData.append(\"address\", sessionStorage.getItem(\"currentAddress\"));\r\n      }\r\n\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        body: formData,\r\n        // headers: { 'Content-Type': 'application/json' },\r\n        // body: JSON.stringify(\r\n        //   {\r\n        //     \"user_id\": sessionStorage.getItem(\"user_id\"),\r\n        //     \"token\": sessionStorage.getItem(\"token\"),\r\n        //     \"title\": this.state.newTitle,\r\n        //     \"start_date\": this.state.start_date,\r\n        //     \"end_date\": this.state.end_date,\r\n        //     \"category\": this.state.SelectedType.value,\r\n        //     \"description\": this.state.description,\r\n        //     \"longitude\": \"\",\r\n        //     \"latitude\": \"\"\r\n        //   }\r\n        // )\r\n      };\r\n      fetch(\r\n        \"https://scity.gmmspl.com:3000/volunteer/registervolunteer\",\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          // console.log(\"APIResponse = \", this.state.APIResponse);\r\n          if (this.state.APIResponse.message === \"Volunteer Registered\") {\r\n            toast.success(\"Volunteer activity registered successfully.\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              onClose: () =>\r\n                this.props.history.push(\"/collaboration-becomeAVolunteer\"),\r\n            });\r\n            sessionStorage.removeItem(\"volunterBack\");\r\n            sessionStorage.setItem(\r\n              \"volunterLocation\",\r\n              sessionStorage.getItem(\"currentAddress\")\r\n            );\r\n            sessionStorage.removeItem(\"mapsBack\");\r\n            sessionStorage.removeItem(\"volunterTemplong\");\r\n            sessionStorage.removeItem(\"volunterTemplat\");\r\n            sessionStorage.removeItem(\"volunterTempLocation\");\r\n            sessionStorage.removeItem(\"volunterlong\");\r\n            sessionStorage.removeItem(\"volunterlat\");\r\n            sessionStorage.removeItem(\"volunterTitle\");\r\n            sessionStorage.removeItem(\"volunterDesc\");\r\n            sessionStorage.removeItem(\"volunterCatgValue\");\r\n            sessionStorage.removeItem(\"volunterCatglabel\");\r\n            sessionStorage.removeItem(\"volunterSdate\");\r\n            sessionStorage.removeItem(\"volunterEdate\");\r\n            sessionStorage.removeItem(\"BAV_shareLocationflag\");\r\n          }else if(this.state.APIResponse.message === \"start_date cannot be less than current_date\"){\r\n             toast.error(\r\n              \"start_date cannot be less than current_date\",\r\n              {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n                onClose: () =>{\r\n                this.setState({\r\n                    buttonDisabled : false\r\n                });},\r\n              }\r\n            );\r\n          }else if(this.state.APIResponse.message === \"start_date cannot be greater than end_date\"){\r\n             toast.error(\r\n              \"start_date cannot be greater than end_date\",\r\n              {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n                onClose: () =>{\r\n                this.setState({\r\n                    buttonDisabled : false\r\n                });},\r\n              }\r\n            );\r\n          }else if (this.state.APIResponse.message === 'Please select category') {\r\n            toast.error(\"Please select category\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              onClose: () =>{\r\n                this.setState({\r\n                    buttonDisabled : false\r\n                });},\r\n            });\r\n          }else {\r\n            toast.error(\r\n              \"Activity is not added, something went wrong. Please try again\",\r\n              {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n                onClose: () =>{\r\n                this.setState({\r\n                    buttonDisabled : false\r\n                });},\r\n              }\r\n            );\r\n          }\r\n        });\r\n    } else {\r\n      toast.error(\"Please fill all mandatory fields.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n\r\n  BackButton() {\r\n    this.props.history.push(\"/collaboration-becomeAVolunteer\");\r\n  }\r\n\r\n  changeLocation() {\r\n    sessionStorage.setItem(\"volunterBack\", \"collaboration-SubmitAVolunteer\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              <Link\r\n                onClick={this.volunterBack}\r\n                to=\"/collaboration-becomeAVolunteer\"\r\n              >\r\n                <Tooltip\r\n                  title=\"Dashboard\"\r\n                  placement=\"top\"\r\n                  TransitionProps={{ timeout: 600 }}\r\n                >\r\n                  <MDBIcon\r\n                    icon=\"chevron-circle-left\"\r\n                    size=\"2x\"\r\n                    className=\"back-arrow-icon\"\r\n                  />\r\n                </Tooltip>\r\n              </Link>\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">\r\n                Start A Volunteer Activity\r\n              </label>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            <div class=\"details-container-style inner-container-style-collaboration\">\r\n              <Row className=\"m-3\">\r\n                <Col\r\n                  xs=\"12\"\r\n                  sm=\"12\"\r\n                  md=\"12\"\r\n                  lg=\"12\"\r\n                  xl=\"12\"\r\n                  xxl=\"12\"\r\n                  className=\"become-volunter-banners banner-submenu-style\"\r\n                >\r\n                  <Row>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                      <Row className=\"become-a-volunteer-banner-text\">\r\n                        Share details of your initiative with supporting media\r\n                        and location to involve other citizens.\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Container className=\"\">\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <TextField\r\n                      id=\"standard-required\"\r\n                      label=\"Title\"\r\n                      onInput={(e) =>\r\n                        (e.target.value = e.target.value.slice(0, 250))\r\n                      }\r\n                      value={this.state.newTitle}\r\n                      onChange={this.newTitleValidate}\r\n                      required\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-4\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <TextField\r\n                      id=\"date\"\r\n                      label={\r\n                        <label>\r\n                          Start Date<span class=\"select-astric-red\"> *</span>\r\n                        </label>\r\n                      }\r\n                      type=\"date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.startDateValidate}\r\n                      defaultValue={new Date()}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      InputProps={{\r\n                        inputProps: { min: this.state.currentDate },\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-4\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <TextField\r\n                      id=\"date\"\r\n                      label={\r\n                        <label>\r\n                          End Date<span class=\"select-astric-red\"> *</span>\r\n                        </label>\r\n                      }\r\n                      type=\"date\"\r\n                      defaultValue={new Date()}\r\n                      value={this.state.end_date}\r\n                      onChange={this.endDateValidate}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      InputProps={{\r\n                        inputProps: { min: this.state.start_date },\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <Select\r\n                      // placeholder=\" \"\r\n                      placeholder={\r\n                        <label>\r\n                          Select Category\r\n                          <span class=\"select-astric-red\"> *</span>\r\n                        </label>\r\n                      }\r\n                      options={this.state.CategoryList}\r\n                      isSearchable={false}\r\n                      className=\"category-drop-style\"\r\n                      value={this.state.SelectedType}\r\n                      onChange={this.CategoryTypeValidate}\r\n                      maxMenuHeight={170}\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pt-4\"\r\n                  >\r\n                    <TextField\r\n                      id=\"outlined-textarea\"\r\n                      label=\"Describe your Activity here...\"\r\n                      onInput={(e) =>\r\n                        (e.target.value = e.target.value.slice(0, 500))\r\n                      }\r\n                      multiline\r\n                     // variant=\"outlined\"\r\n                      rows={3}\r\n                      className=\"start-new-idea-description-box\"\r\n                      value={this.state.description}\r\n                      onChange={this.descriptionValidate}\r\n                    />\r\n                    <label class=\"max-char-count-text-display\">\r\n                      Max 500 characters\r\n                    </label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-2\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <Row className=\"\">\r\n                      <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                        <Checkbox\r\n                          checked={this.state.shareLocationflag}\r\n                          size=\"small\"\r\n                          className=\"login-checkbox-style\"\r\n                          inputProps={{\r\n                            \"aria-label\": \"checkbox with default color\",\r\n                          }}\r\n                          onChange={this.ShareLocationCheckboxToggle_SAT}\r\n                        />\r\n                        <label class=\"keep-me-log-in-style\">\r\n                          Share my Location\r\n                        </label>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <div>\r\n                  {this.state.shareLocationflag && (\r\n                    <Row>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                      <Col\r\n                        xs=\"12\"\r\n                        sm=\"12\"\r\n                        md=\"10\"\r\n                        lg=\"10\"\r\n                        xl=\"10\"\r\n                        xxl=\"10\"\r\n                        className=\"pt-4\"\r\n                      >\r\n                        <Row>\r\n                          <Col\r\n                            xs=\"7\"\r\n                            sm=\"7\"\r\n                            md=\"7\"\r\n                            lg=\"7\"\r\n                            xl=\"7\"\r\n                            xxl=\"7\"\r\n                            className=\"geolocation-font-style\"\r\n                          >\r\n                            <label>\r\n                              {sessionStorage.getItem(\"volunterLocation\")}\r\n                            </label>\r\n                          </Col>\r\n                          <Col\r\n                            xs=\"5\"\r\n                            sm=\"5\"\r\n                            md=\"5\"\r\n                            lg=\"5\"\r\n                            xl=\"5\"\r\n                            xxl=\"5\"\r\n                            className=\"text-align-right pl-0\"\r\n                          >\r\n                            <Link\r\n                              className=\"geolocation-button-style\"\r\n                              onClick={this.changeLocation}\r\n                              to=\"/Maps\"\r\n                            >\r\n                              <MDBIcon icon=\"map-marker-alt\" />\r\n                              <label class=\"geolocation-button-font-style\">\r\n                                Change Location\r\n                              </label>\r\n                            </Link>\r\n                          </Col>\r\n                        </Row>\r\n                        <hr className=\"bold-hr\"></hr>\r\n                      </Col>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                    </Row>\r\n                  )}\r\n                </div>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pt-4\"\r\n                  >\r\n                    <Row className=\"pt-3 pl-3\">\r\n                      <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\">\r\n                        <Row>\r\n                          <Col\r\n                            xs=\"4\"\r\n                            sm=\"4\"\r\n                            md=\"4\"\r\n                            lg=\"4\"\r\n                            xl=\"4\"\r\n                            xxl=\"4\"\r\n                            className=\"Attachment-font-style pl-0\"\r\n                          >\r\n                            Attachment\r\n                          </Col>\r\n\r\n                          <Col\r\n                            xs=\"8\"\r\n                            sm=\"8\"\r\n                            md=\"8\"\r\n                            lg=\"8\"\r\n                            xl=\"8\"\r\n                            xxl=\"8\"\r\n                            className=\"text-align-right\"\r\n                          >\r\n                            <label\r\n                              htmlFor=\"myInput\"\r\n                              className=\"uploadbuttonstyle\"\r\n                            >\r\n                              Upload\r\n                              <PublishUpload fontSize=\"small\" />\r\n                            </label>\r\n                            <input\r\n                              id=\"myInput\"\r\n                              style={{ display: \"none\" }}\r\n                              type={\"file\"}\r\n                              multiple\r\n                              accept=\"image/png, image/jpg, image/jpeg ,video/mp4,video/x-m4v,video/*,application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint,\r\n                            text/plain, application/pdf, .docx, .doc, .xlsx, .pptx, .txt\"\r\n                              onChange={(e) => this.onChangeFile(e)}\r\n                              ref={this.myRef}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className=\"max-size-font-style\">\r\n                          Attach Image/Video/Document <i>(max size 5MB)</i>\r\n                        </Row>\r\n                        <Row className=\"max-size-font-style\">\r\n                          Maximum 3 attachments allowed\r\n                        </Row>\r\n                        <Row className=\"pt-3\">\r\n                          <Col\r\n                            xs=\"10\"\r\n                            sm=\"10\"\r\n                            md=\"10\"\r\n                            lg=\"10\"\r\n                            xl=\"10\"\r\n                            xxl=\"10\"\r\n                            className=\"pl-0\"\r\n                          >\r\n                            {this.state.fileName.map((file, index) => (\r\n                              <div className=\"file1upload\">{this.getTruncatedName(file.name)}</div>\r\n                            ))}\r\n                          </Col>\r\n                          <Col\r\n                            xs=\"2\"\r\n                            sm=\"2\"\r\n                            md=\"2\"\r\n                            lg=\"2\"\r\n                            xl=\"2\"\r\n                            xxl=\"2\"\r\n                            className=\"pl-0\"\r\n                          >\r\n                            {this.state.fileName.map((file, index) => (\r\n                              <div className=\"file1upload\">\r\n                                <CancelIcon\r\n                                  color=\"secondary\"\r\n                                  fontSize=\"small\"\r\n                                  onClick={() => this.cancelUpload(index)}\r\n                                />\r\n                              </div>\r\n                            ))}\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n\r\n                      <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\" xl=\"4\" xxl=\"4\"></Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-4 pb-5\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"5\" lg=\"5\" xl=\"5\" xxl=\"5\">\r\n                    <Button\r\n                      className=\"login-button-style\"\r\n                      onClick={this.Submit}\r\n                      disabled={this.state.buttonDisabled}\r\n                    >\r\n                      SUBMIT\r\n                    </Button>\r\n                  </Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"5\" lg=\"5\" xl=\"5\" xxl=\"5\">\r\n                    <Link\r\n                      onClick={this.volunterBack}\r\n                      to=\"/collaboration-becomeAVolunteer\"\r\n                    >\r\n                      <Button className=\"skip-button-style\">CANCEL</Button>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"10\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n              </Container>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        <Footer />\r\n        {/* <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover={false}\r\n                className=\"toaster-style\"\r\n                /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CollaborationBAVBecomeAVolunteer;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\reset-password\\reset-password.js",["857","858","859","860","861","862","863","864"],"import React, { Component } from \"react\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport passwordwindow from \"../../assets/cityappim_1.png\";\r\nimport LoginHeadings from \"../../jsonFiles/UserInfoJson/userLogin\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport HeaderLogo from \"../../assets/HeaderLogo.png\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newPassword: \"\",\r\n      newPasswordValidate_SAT: false,\r\n      conPassword: \"\",\r\n      conPasswordValidate_SAT: false,\r\n      newPasswordVisible: false,\r\n      confirmPasswordVisible: false,\r\n      APIResponse: \"\",\r\n    };\r\n    this.newPasswordValidate_SAT = this.newPasswordValidate_SAT.bind(this);\r\n    this.conPasswordValidate_SAT = this.conPasswordValidate_SAT.bind(this);\r\n    this.Submit = this.Submit.bind(this);\r\n    this.newPasswordVisible = this.newPasswordVisible.bind(this);\r\n    this.confirmPasswordVisible = this.confirmPasswordVisible.bind(this);\r\n  }\r\n\r\n  newPasswordVisible = (e) => {\r\n    if (this.state.newPasswordVisible == false) {\r\n      this.setState({\r\n        newPasswordVisible: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        newPasswordVisible: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  confirmPasswordVisible = (e) => {\r\n    if (this.state.confirmPasswordVisible == false) {\r\n      this.setState({\r\n        confirmPasswordVisible: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        confirmPasswordVisible: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  newPasswordValidate_SAT = (e) => {\r\n    var newPassword = e.target.value;\r\n    if (newPassword != null || newPassword !== \"\") {\r\n      this.setState({\r\n        newPasswordValidate_SAT: true,\r\n        newPassword: newPassword,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        newPasswordValidate_SAT: false,\r\n        newPassword: newPassword,\r\n      });\r\n    }\r\n  };\r\n\r\n  conPasswordValidate_SAT = (e) => {\r\n    var conPassword = e.target.value;\r\n    if (conPassword != null || conPassword !== \"\") {\r\n      this.setState({\r\n        conPasswordValidate_SAT: true,\r\n        conPassword: conPassword,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        conPasswordValidate_SAT: false,\r\n        conPassword: conPassword,\r\n      });\r\n    }\r\n  };\r\n\r\n  Submit() {\r\n    if (this.state.newPassword === this.state.conPassword) {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          user_id: sessionStorage.getItem(\"user_id\"),\r\n          new_password: this.state.newPassword,\r\n        }),\r\n      };\r\n\r\n      fetch(\r\n        \"https://scity.gmmspl.com:3000/smartcity/resetpassword\",\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          if (this.state.APIResponse.message === \"Password set successfully\") {\r\n            sessionStorage.removeItem(\"user_id\");\r\n            sessionStorage.removeItem(\"phoneNumber\");\r\n            this.props.history.push(\"/\");\r\n          } else {\r\n            toast.warn(\"Password was not able to set, please try again.\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n          }\r\n          // Code to handle navigation\r\n        });\r\n      // API call\r\n    } else {\r\n      toast.warn(\"Password does not match.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={1000}\r\n          hideProgressBar={false}\r\n          newestOnTop\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover={false}\r\n          className=\"toaster-style\"\r\n        />\r\n\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"forget-password-header-height-style_SAT\">\r\n            <Col\r\n              xs=\"12\"\r\n              sm=\"12\"\r\n              md=\"12\"\r\n              lg=\"12\"\r\n              xl=\"12\"\r\n              xxl=\"12\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              {/* <label class=\"header-heading-label-style\">Menu</label> */}\r\n              <img\r\n                className=\"forgetheader-profile-image-style\"\r\n                src={HeaderLogo}\r\n                alt=\"\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Container>\r\n          <Row className=\"pt-5\">\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            <Col\r\n              xs=\"12\"\r\n              sm=\"12\"\r\n              md=\"12\"\r\n              lg=\"6\"\r\n              xl=\"6\"\r\n              xxl=\"6\"\r\n              className=\"verifyotp-welcome-text-style \"\r\n            >\r\n              <label>Reset Password</label>\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n              <Grid\r\n                container\r\n                spacing={1}\r\n                alignItems=\"flex-center\"\r\n                className=\"VerifyOTPMuiGrid-spacing-xs-1 > .MuiGrid-item\"\r\n              >\r\n                <Grid item>\r\n                  {/* <passwordwindow className=\"login-icon-color\" /> */}\r\n                  <img src={passwordwindow} class=\"page-img-style\" alt=\"Logo\" />\r\n                </Grid>\r\n                {/* <Grid item className=\"login-field-width-style\"> */}\r\n                {/* <TextField id=\"input-with-icon-grid\" label=\"Full Name\" value={this.state.value} onChange={this.full_nameValidate_SAT} /> */}\r\n                {/* </Grid> */}\r\n              </Grid>\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          </Row>\r\n\r\n          <Row className=\"pt-4 pb-2\">\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n              <Grid container spacing={1} alignItems=\"flex-end\">\r\n                <Grid item>\r\n                  <LockOutlinedIcon className=\"login-icon-color\" />\r\n                </Grid>\r\n                <Grid item className=\"login-password-field-width-style\">\r\n                  <Tooltip\r\n                    // title=\"Password should contain at least 1 captial alphabet, 1 small alphabet, 1 numeric, 1 special symbol and minimum length 8 charecter\"\r\n                    title={\r\n                      <div>\r\n                        <label class=\"pb-1 pt-3\">Password Must :</label>\r\n                        <ul class=\"pr-4\">\r\n                          <li class=\"pb-2\">Contain 8 characters or more</li>\r\n                          <li class=\"pb-2\">\r\n                            Contain at least one lowercase character\r\n                          </li>\r\n                          <li class=\"pb-2\">\r\n                            Contain at least one uppercase character\r\n                          </li>\r\n                          <li class=\"pb-2\">Contain at least one number</li>\r\n                          <li class=\"pb-2\">\r\n                            Contain at least one symbol (like !@#$%^)\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    }\r\n                    placement=\"bottom\"\r\n                    TransitionProps={{ timeout: 600 }}\r\n                    // arrow\r\n                    className=\"tooltip-style\"\r\n                  >\r\n                    <div>\r\n                      {!this.state.newPasswordVisible && (\r\n                        <TextField\r\n                          type=\"password\"\r\n                          id=\"input-with-icon-grid2\"\r\n                          label=\"New Password\"\r\n                          minlength=\"6\"\r\n                          maxLength=\"15\"\r\n                          value={this.state.newPassword}\r\n                          onChange={this.newPasswordValidate_SAT}\r\n                          InputProps={{\r\n                            endAdornment: (\r\n                              <InputAdornment position=\"end\" className=\"p-0\">\r\n                                <IconButton>\r\n                                  <VisibilityOffIcon\r\n                                    className=\"login-icon-color\"\r\n                                    onClick={this.newPasswordVisible}\r\n                                  />\r\n                                </IconButton>\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      )}\r\n                      {this.state.newPasswordVisible && (\r\n                        <TextField\r\n                          type=\"text\"\r\n                          id=\"input-with-icon-grid2\"\r\n                          label=\"New Password\"\r\n                          minlength=\"6\"\r\n                          maxLength=\"15\"\r\n                          value={this.state.newPassword}\r\n                          onChange={this.newPasswordValidate_SAT}\r\n                          InputProps={{\r\n                            endAdornment: (\r\n                              <InputAdornment position=\"end\" className=\"p-0\">\r\n                                <IconButton>\r\n                                  <VisibilityIcon\r\n                                    className=\"login-icon-color\"\r\n                                    onClick={this.newPasswordVisible}\r\n                                  />\r\n                                </IconButton>\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </Tooltip>\r\n                </Grid>\r\n              </Grid>\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          </Row>\r\n\r\n          <Row className=\"pt-4 pb-2\">\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n              <Grid container spacing={1} alignItems=\"flex-end\">\r\n                <Grid item>\r\n                  <LockOutlinedIcon className=\"login-icon-color\" />\r\n                </Grid>\r\n                <Grid item className=\"login-password-field-width-style\">\r\n                  <Tooltip\r\n                    // title=\"Password should contain at least 1 captial alphabet, 1 small alphabet, 1 numeric, 1 special symbol and minimum length 8 charecter\"\r\n                    title={\r\n                      <div>\r\n                        <label class=\"pb-1 pt-3\">Password Must :</label>\r\n                        <ul class=\"pr-4\">\r\n                          <li class=\"pb-2\">Contain 8 characters or more</li>\r\n                          <li class=\"pb-2\">\r\n                            Contain at least one lowercase character\r\n                          </li>\r\n                          <li class=\"pb-2\">\r\n                            Contain at least one uppercase character\r\n                          </li>\r\n                          <li class=\"pb-2\">Contain at least one number</li>\r\n                          <li class=\"pb-2\">\r\n                            Contain at least one symbol (like !@#$%^)\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    }\r\n                    placement=\"bottom\"\r\n                    TransitionProps={{ timeout: 600 }}\r\n                    // arrow\r\n                    className=\"tooltip-style\"\r\n                  >\r\n                    <div>\r\n                      {!this.state.confirmPasswordVisible && (\r\n                        <TextField\r\n                          type=\"password\"\r\n                          id=\"input-with-icon-grid3\"\r\n                          label=\"Confirm Password\"\r\n                          value=\"\"\r\n                          minlength=\"6\"\r\n                          maxLength=\"15\"\r\n                          value={this.state.conPassword}\r\n                          onChange={this.conPasswordValidate_SAT}\r\n                          InputProps={{\r\n                            endAdornment: (\r\n                              <InputAdornment position=\"end\" className=\"p-0\">\r\n                                <IconButton>\r\n                                  <VisibilityOffIcon\r\n                                    className=\"login-icon-color\"\r\n                                    onClick={this.confirmPasswordVisible}\r\n                                  />\r\n                                </IconButton>\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      )}\r\n                      {this.state.confirmPasswordVisible && (\r\n                        <TextField\r\n                          type=\"text\"\r\n                          id=\"input-with-icon-grid3\"\r\n                          label=\"Confirm Password\"\r\n                          value=\"\"\r\n                          minlength=\"6\"\r\n                          maxLength=\"15\"\r\n                          value={this.state.conPassword}\r\n                          onChange={this.conPasswordValidate_SAT}\r\n                          InputProps={{\r\n                            endAdornment: (\r\n                              <InputAdornment position=\"end\" className=\"p-0\">\r\n                                <IconButton>\r\n                                  <VisibilityIcon\r\n                                    className=\"login-icon-color\"\r\n                                    onClick={this.confirmPasswordVisible}\r\n                                  />\r\n                                </IconButton>\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </Tooltip>\r\n                </Grid>\r\n              </Grid>\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          </Row>\r\n\r\n          <Row className=\"pt-3 pb-3\">\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            <Col\r\n              xs=\"12\"\r\n              sm=\"12\"\r\n              md=\"12\"\r\n              lg=\"6\"\r\n              xl=\"6\"\r\n              xxl=\"6\"\r\n              className=\"signup-text-message-style\"\r\n            >\r\n              <Button className=\"signup-button-style\" onClick={this.Submit}>\r\n                Reset Password\r\n              </Button>\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          </Row>\r\n\r\n          <Row className=\"pt-3 pb-5\">\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n              {/* <Navbar expand=\"lg\" sticky=\"bottom\" className=\"signup-navbar-style\"> */}\r\n              <Row>\r\n                <Col className=\"click-here-to-login\">\r\n                  <label>\r\n                    <span class=\"Question-style\">Click here to go back to</span>\r\n                    <Link to=\"/\">\r\n                      <span class=\"Login-style pl-2\">Login</span>\r\n                    </Link>\r\n                  </label>\r\n                </Col>\r\n              </Row>\r\n              {/* </Navbar> */}\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPassword;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Sos\\Sos-Component\\Sos-Component.js",["865","866","867","868","869","870","871","872","873","874","875","876","877","878","879"],"import React, { Component } from \"react\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport DashboardHeadings from '../../../jsonFiles/DashboardInfoJson/dashboardInfo';\r\nimport \"./Sos-Component.css\";\r\n//import \"../../../Collaboration-shareDiscussIdeas.css\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Footer from \"../../Footer\";\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n//import { Linking,Platform,} from 'react-native';\r\nimport {Linking, Platform } from 'react-native';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport ContactsIcon from '@material-ui/icons/Contacts';\r\nimport { MDBIcon } from \"../../../../node_modules/mdbreact\";\r\nimport { Link } from 'react-router-dom';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport footer_data from '../../../jsonFiles/DashboardInfoJson/DashboardFooter';\r\nimport PersonOutlineOutlinedIcon from '@material-ui/icons/PersonOutlineOutlined';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ExitToAppRoundedIcon from '@material-ui/icons/ExitToAppRounded';\r\nimport headerProfile_img from '../../../assets/defaultprofile.png';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nclass SosComponent extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      submit:\"\",\r\n       isClicked : false,\r\n       addDialogStatus: false,\r\n       isOpen: false,\r\n      submit: false,\r\n      logoutDialogStatus: false,\r\n      logStatus:false,\r\n      isMenuOpen : false,\r\n      eventTarget : '',\r\n      footer: footer_data.paths\r\n    }\r\n    //this.submit = this.submit.bind(this);\r\n    this.openDialScreen = this.openDialScreen.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.openMenu = this.openMenu.bind(this);\r\n    this.menuClose = this.menuClose.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.style = 'background-image: url();';\r\n  document.body.style = 'background: #F9F9F9';\r\n  }\r\n\r\n   openDialScreen = (callNo) => {\r\n    let number = '';\r\n    if (Platform.OS === 'ios') {\r\n      number = `telprompt:${callNo}`;\r\n    } else {\r\n      number = `tel:${callNo}`;\r\n    }\r\n    Linking.openURL(number);\r\n   // console.log(number,\"text\");\r\n  };\r\n\r\n  onAddClick = () => {\r\n\r\n    if(sessionStorage.getItem(\"user_id\") != undefined || sessionStorage.getItem(\"user_id\") != null) {\r\n      this.setState({\r\n        submit: true,\r\n        addDialogStatus: true\r\n      });\r\n    }\r\n    else {\r\n      this.setState({\r\n        submit: false,\r\n        addDialogStatus: false\r\n      });\r\n    }\r\n  }\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n  addDialogClose = () => {\r\n    this.setState({\r\n      addDialogStatus: false\r\n\r\n    });\r\n  }\r\n\r\n  logout = () => {\r\n\r\n    if(sessionStorage.getItem(\"user_id\") != undefined || sessionStorage.getItem(\"user_id\") != null) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true\r\n      });\r\n    }\r\n    else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false\r\n      });\r\n    }\r\n  }\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false\r\n    });\r\n  }\r\n  okHomePage =()=> {\r\n      sessionStorage.clear();\r\n      this.props.history.push(\"/\");    \r\n    }\r\n\r\n    \r\n    openMenu = (e) => {\r\n      console.log(\"isMenuOpen = \", e.currentTarget);\r\n      \r\n      this.setState({\r\n        isMenuOpen: true,\r\n        eventTarget : e.currentTarget\r\n      });\r\n    }\r\n\r\n    menuClose = () => {\r\n      // console.log(\"isMenuOpen = \", isMenuOpen);\r\n      this.setState({\r\n        isMenuOpen: false\r\n      });\r\n    }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return ( \r\n      <div >\r\n              <Container fluid className=\"header-style\">\r\n          <Row className=\"header-height-style_SAT\">\r\n        \r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n                <Link to = \"/dashboard-citizenServices\">\r\n                  <Tooltip title=\"Near by\" placement=\"top\" TransitionProps={{ timeout: 600 }}>\r\n                    <MDBIcon icon=\"chevron-circle-left\" size=\"2x\" className=\"back-arrow-icon\"/>\r\n                  </Tooltip>\r\n                </Link>\r\n                {/* </div> */}\r\n            </Col>\r\n\r\n            <Col xs=\"8\" sm=\"8\" md=\"8\" lg=\"8\" xl=\"8\" xxl=\"8\" className=\"header-title-style_SAT\">\r\n              <label class=\"header-heading-label-style\">Emergency Services</label>\r\n            </Col>\r\n\r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\" className=\"pl-0 profile-image-align-style\">\r\n            <Dropdown menuAlign=\"right\" className=\"dropdown-profile-icon-style\">\r\n                <Dropdown.Toggle variant=\"info\">\r\n                <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                \r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n              <Dropdown.Item>\r\n              {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                <div onClick={this.openProfileSettings}>\r\n                <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\"/>\r\n                <label class=\"dropdown-font-style\">Profile Settings</label>\r\n                </div>\r\n                {/* </Link> */}\r\n              </Dropdown.Item>\r\n              \r\n              {\r\n                (!((sessionStorage.getItem(\"user_id\") == null || sessionStorage.getItem(\"user_id\") == undefined))) &&\r\n                <Dropdown.Item onClick={this.logout}>\r\n              \r\n                <ExitToAppRoundedIcon className=\"dropdown-icon-style\"/>\r\n                <label class=\"dropdown-font-style\">Logout</label>\r\n      \r\n                </Dropdown.Item>\r\n              }\r\n              {\r\n                ((sessionStorage.getItem(\"user_id\") == null || sessionStorage.getItem(\"user_id\") == undefined)) &&\r\n                <Dropdown.Item onClick={this.login}>\r\n              \r\n                <ExitToAppRoundedIcon className=\"dropdown-icon-style\"/>\r\n                <label class=\"dropdown-font-style\">Login</label>\r\n      \r\n                </Dropdown.Item>\r\n              }\r\n              {\r\n                      (this.state.submit) &&\r\n                      <Dialog open={this.state.logoutDialogStatus} onClose={this.logoutDialogClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n                        <DialogTitle id=\"simple-dialog-title\">Are you sure you want to Logout?\r\n                         <DialogActions>\r\n                        <Button onClick={this.okHomePage} color=\"primary\">\r\n                          Yes\r\n                        </Button>\r\n                        <Button onClick={this.logoutDialogClose} color=\"primary\" autoFocus>\r\n                          No\r\n                        </Button>\r\n                      </DialogActions> \r\n                      </DialogTitle>\r\n                      </Dialog>\r\n                    }\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n            </Col>\r\n\r\n          </Row>\r\n        </Container>\r\n\r\n   <Container className=\"pt-5\">\r\n   <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"6\" xl=\"6\" xxl=\"6\" className=\"bg-container-style-opacity\">\r\n   <div class=\"inner-container-style-collaboration\">\r\n            <Row className=\"mt-3 ml-3 mr-3\">\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\" className=\"Emergency-banners banner-submenu-style\">\r\n                <Row>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                    {/* <Row className=\"pl-3 pt-4 collaboration-banner-text\">Share & Discuss</Row>\r\n                    <Row className=\"pl-3 collaboration-banner-text2\">Idea</Row> */}\r\n                    <Row className=\"pl-3 pt-5 collaboration-banner-text3\">Tap to contact the desired emergency service.</Row>\r\n                    <Row className=\"start-new-idea-btn-allignment\"> \r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            </div>\r\n        <div className=\"pl-3 pr-3 pb-3\">\r\n               <Row className=\"pt-0\">\r\n          <Col  xs=\"6\" sm=\"6\" md=\"6\" lg=\"3\" xl=\"3\" className=\"p-2\">\r\n          <Card id=\"108\" className=\"cardAbulance-style colorWhite pb-2 pt-1\" onClick={() => this.openDialScreen(108)} >\r\n          <Card.Title className=\"cardStatusNamestyle colorWhite textalignCenter\">\r\n          108\r\n          </Card.Title>\r\n          \r\n          <Card.Subtitle >\r\n            <Row className=\"cardNumberValueStyle textalignCenter\">\r\n            <Col  xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" className=\"labelFontSize\" >\r\n            Ambulance\r\n            </Col>\r\n            </Row>\r\n          </Card.Subtitle>\r\n        </Card>\r\n          </Col> \r\n\r\n\r\n          <Col  xs=\"6\" sm=\"6\" md=\"6\" lg=\"3\" xl=\"3\" className=\"p-2\">\r\n          <Card className=\"cardFire-style colorWhite pb-2 pt-1\"  onClick={() => this.openDialScreen(101)} >\r\n          <Card.Title className=\"cardStatusNamestyle colorWhite textalignCenter\">\r\n         101\r\n          </Card.Title>\r\n          \r\n          <Card.Subtitle >\r\n            <Row className=\"cardNumberValueStyle textalignCenter\">\r\n            <Col  xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" className=\"labelFontSize\">\r\n            Fire Brigade\r\n            </Col>\r\n            </Row>\r\n          </Card.Subtitle>\r\n        </Card>\r\n          </Col>\r\n     \r\n                  <Col  xs=\"6\" sm=\"6\" md=\"6\" lg=\"3\" xl=\"3\" className=\"p-2\">\r\n          <Card className=\"cardPolice-style colorWhite pb-2 pt-1\" onClick={() => this.openDialScreen(100)}>\r\n          <Card.Title className=\"cardStatusNamestyle colorWhite textalignCenter\">\r\n          100\r\n          </Card.Title>\r\n          \r\n          <Card.Subtitle >\r\n            <Row className=\"cardNumberValueStyle textalignCenter\">\r\n            <Col  xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" className=\"labelFontSize\">\r\n            Police\r\n            </Col>\r\n            </Row>\r\n          </Card.Subtitle>\r\n        </Card>\r\n          </Col> \r\n\r\n\r\n          <Col  xs=\"6\" sm=\"6\" md=\"6\" lg=\"3\" xl=\"3\" className=\"p-2\">\r\n          <Card className=\"cardWomen-style colorWhite pb-2 pt-1\" onClick={() => this.openDialScreen(1091)}>\r\n          <Card.Title className=\"cardStatusNamestyle colorWhite textalignCenter\">\r\n          1091\r\n          </Card.Title>\r\n          \r\n          <Card.Subtitle >\r\n            <Row className=\"cardNumberValueStyle textalignCenter\">\r\n            <Col  xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" className=\"labelFontSize\">\r\n            Women Helpline\r\n            </Col>\r\n            </Row>\r\n          </Card.Subtitle>\r\n        </Card>\r\n          </Col>\r\n          </Row>  \r\n\r\n                    <Row className=\"pt-0\">\r\n          <Col  xs=\"6\" sm=\"6\" md=\"6\" lg=\"3\" xl=\"3\" className=\"p-2\" onClick={() => this.openDialScreen(1098)}>\r\n          <Card className=\"cardChild-style colorWhite pb-2 pt-1\">\r\n          <Card.Title className=\"cardStatusNamestyle colorWhite textalignCenter\">\r\n          1098\r\n          </Card.Title>\r\n          \r\n          <Card.Subtitle >\r\n            <Row className=\"cardNumberValueStyle textalignCenter\">\r\n            <Col  xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" className=\"labelFontSize\">\r\n            Child Helpline\r\n            </Col>\r\n            </Row>\r\n          </Card.Subtitle>\r\n        </Card>\r\n          </Col> \r\n\r\n\r\n          <Col  xs=\"6\" sm=\"6\" md=\"6\" lg=\"3\" xl=\"3\" className=\"p-2\">\r\n          <Card className=\"cardSenior-style colorWhite pb-2 pt-1\" onClick={() => this.openDialScreen(14567)}>\r\n          <Card.Title className=\"cardStatusNamestyle colorWhite textalignCenter\">\r\n          14567\r\n          </Card.Title>\r\n          \r\n          <Card.Subtitle >\r\n            <Row className=\"cardNumberValueStyle textalignCenter\">\r\n            <Col  xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" className=\"labelFontSize\">\r\n            Senior Citizens\r\n            </Col>\r\n            </Row>\r\n          </Card.Subtitle>\r\n        </Card>\r\n          </Col>\r\n     \r\n                  <Col  xs=\"6\" sm=\"6\" md=\"6\" lg=\"3\" xl=\"3\" className=\"p-2\" onClick={() => this.openDialScreen(1962)}>\r\n          <Card className=\"cardAnimal-style colorWhite pb-2 pt-1\">\r\n          <Card.Title className=\"cardStatusNamestyle colorWhite textalignCenter\">\r\n          1962\r\n          </Card.Title>\r\n          \r\n          <Card.Subtitle >\r\n            <Row className=\"cardNumberValueStyle textalignCenter\">\r\n            <Col  xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" className=\"labelFontSize\">\r\n            Animal Helpline\r\n            </Col>\r\n            </Row>\r\n          </Card.Subtitle>\r\n        </Card>\r\n          </Col> \r\n\r\n\r\n          {/* <Col  xs=\"6\" sm=\"6\" md=\"6\" lg=\"3\" xl=\"3\" className=\"p-2\">\r\n          <Card className=\"cardClose-style colorWhite pb-2\">\r\n          <Card.Title className=\"cardStatusNamestyle colorWhite textalignCenter\">\r\n          Closed\r\n          </Card.Title>\r\n          \r\n          <Card.Subtitle >\r\n            <Row className=\"cardNumberValueStyle\">\r\n            <Col  xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" className=\"labelFontSize\">\r\n            20\r\n            </Col>\r\n            </Row>\r\n          </Card.Subtitle>\r\n        </Card>\r\n          </Col> */}\r\n          </Row>  \r\n          </div>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n     </Container>\r\n     <Row className=\"pt-5 pb-5\"></Row>\r\n          <Footer />\r\n      </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default SosComponent;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\VerifyOTP\\VerifyOTP.js",["880","881"],"import React, { Component } from \"react\";\r\nimport OtpInput from \"react-otp-input\";\r\n// import Header from \"../Dashboard-header\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport passwordwindow from '../../assets/passwordwindow.png';\r\nimport LoginHeadings from '../../jsonFiles/UserInfoJson/userLogin';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './VerifyOTP.css'\r\nimport HeaderLogo from \"../../assets/HeaderLogo.png\";\r\nimport { textAlign } from \"@material-ui/system\";\r\n\r\n\r\nclass VerifyOTP extends Component {\r\n  componentDidMount() {\r\n    document.body.style = 'background-image: url(../../assets/headerImage.png);'\r\n\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      otpValue: '',\r\n      otpValidate: false,\r\n      APIResponse: '',\r\n      dialogBoxStatus: false,\r\n      SubmitAlert : false,\r\n      OTPDoesNotMatch : false,\r\n      resendOTP : false,\r\n      ResentOTPAPIResponse : ''\r\n    };\r\n    \r\n    this.otpValidate = this.otpValidate.bind(this);\r\n    this.submit_SAT = this.submit_SAT.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  };\r\n\r\n\r\n\r\n  otpValidate = (e) => {\r\n    var otp = e.target.value.trim();\r\n    if (otp != null || otp !== \"\") {\r\n      this.setState({\r\n        otpValidate: true,\r\n        otpValue: otp\r\n      });\r\n    }\r\n  }\r\n\r\n  submit_SAT() {\r\n\r\n    console.log(\"otpValue = \", this.state.otpValue);\r\n    if (this.state.otpValue) {\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(\r\n          {\r\n            \"phonenumber\": sessionStorage.getItem(\"phoneNumber\"),\r\n            \"otp\": this.state.otpValue\r\n          }\r\n        )\r\n      };\r\n      fetch('https://scity.gmmspl.com:3000/smartcity/mobileotp', requestOptions)\r\n        .then(response => response.json())\r\n        .then(\r\n          (data) => {\r\n            this.setState({\r\n              APIResponse: data\r\n            });\r\n            console.log(\"APIResponse = \", this.state.APIResponse);\r\n            if(this.state.APIResponse.message === \"OTP match\"){\r\n              // sessionStorage.setItem(\"phoneNumber\", this.state.phone_numberValue_SAT);\r\n              // console.log(\"PhoneNumber\", this.state.APIResponse.data.user_id);\r\n              this.props.history.push(\"/\"); \r\n            }\r\n            else if(this.state.APIResponse.message === \"OTP  doesn't match!!!\"){\r\n              this.setState({\r\n                OTPDoesNotMatch: true,\r\n                dialogBoxStatus: true,\r\n              });\r\n            }\r\n            else if(this.state.APIResponse.message === \"OTP expired\"){\r\n              this.setState({\r\n                resendOTP: true,\r\n                dialogBoxStatus: true,\r\n              });\r\n            }\r\n          },\r\n      );\r\n\r\n    }\r\n    else {\r\n      this.setState({\r\n        SubmitAlert: true,\r\n        dialogBoxStatus: true\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      dialogBoxStatus: false,\r\n      SubmitAlert : false,\r\n      OTPDoesNotMatch : false,\r\n      resendOTP : false\r\n    });\r\n  }\r\n\r\n  resendOTP_SAT() {\r\n\r\n    if (sessionStorage.getItem(\"phoneNumber\")) {\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(\r\n          {\r\n            \"phonenumber\": sessionStorage.getItem(\"phoneNumber\")\r\n          }\r\n        )\r\n      };\r\n      fetch('https://scity.gmmspl.com:3000/smartcity/resendotp', requestOptions)\r\n        .then(response => response.json())\r\n        .then(\r\n          (data) => {\r\n            // this.setState({\r\n            //   APIResponse: data\r\n            // });\r\n            console.log(\"APIResponse = \", data);\r\n            // if(this.state.APIResponse.message === \"OTP match\"){\r\n            //   // sessionStorage.setItem(\"phoneNumber\", this.state.phone_numberValue_SAT);\r\n            //   // console.log(\"PhoneNumber\", this.state.APIResponse.data.user_id);\r\n            //   this.props.history.push(\"/\"); \r\n            // }\r\n            // else if(this.state.APIResponse.message === \"OTP  doesn't match!!!\"){\r\n            //   this.setState({\r\n            //     OTPDoesNotMatch: true,\r\n            //     dialogBoxStatus: true,\r\n            //   });\r\n            // }\r\n            // else if(this.state.APIResponse.message === \"No Data Found\"){\r\n            //   this.setState({\r\n            //     resendOTP: true,\r\n            //     dialogBoxStatus: true,\r\n            //   });\r\n            // }\r\n          },\r\n      );\r\n\r\n    }\r\n    else {\r\n      this.setState({\r\n        SubmitAlert: true,\r\n        dialogBoxStatus: true\r\n      });\r\n    }\r\n  }\r\n\r\n\r\nrender() {\r\n\r\n    return <div>\r\n      <Container fluid className=\"header-style\">\r\n        <div>\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"forget-password-header-height-style_SAT\">\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\" className=\"header-title-style_SAT\">\r\n              {/* <label class=\"header-heading-label-style\">Menu</label> */}\r\n              <img className=\"forgetheader-profile-image-style\" src={HeaderLogo} alt=\"\" />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        </div>\r\n        </Container>\r\n\r\n        <Container className=\"profile-header-space\"></Container>\r\n        \r\n          <Container>\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\" className=\"verifyotp-welcome-text-style \">\r\n\r\n                <label>{LoginHeadings.VerifyOTP_HMD}</label>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\" className=\"verifyotp-text-message-style\">\r\n                <label>{LoginHeadings.VerifyOTP_MESSAGE_HMD}</label>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n            <Container>\r\n              <Row>\r\n                <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                  <Grid container spacing={1} alignItems=\"flex-center\" className=\"VerifyOTPMuiGrid-spacing-xs-1 > .MuiGrid-item\"  >\r\n                    <Grid item >\r\n                      {/* <passwordwindow className=\"login-icon-color\" /> */}\r\n                       <img src={passwordwindow}  alt=\"Logo\" />\r\n                    </Grid>\r\n                    {/* <Grid item className=\"login-field-width-style\"> */}\r\n                    {/* <TextField id=\"input-with-icon-grid\" label=\"Full Name\" value={this.state.value} onChange={this.full_nameValidate_SAT} /> */}\r\n                  {/* </Grid> */}\r\n                  </Grid>\r\n                </Col>\r\n                <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              </Row>\r\n\r\n              {/* <Row className=\"Otp-Input-class\">\r\n              <OtpInput\r\n                \r\n                value={this.state.otp}\r\n                onChange={this.handleChange}\r\n                numInputs={4}\r\n                containerStyle = {style}\r\n                separator={<span class=\"mr-2 ml-2\">  </span>}\r\n              />\r\n              </Row> */}\r\n\r\n              <Row>\r\n          <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n            <Grid container spacing={1} alignItems=\"flex-end\">\r\n              <Grid item className=\"otp-field-width-style\">\r\n                <TextField id=\"textfieldOtp\" type=\"number\" inputmode=\"numeric\"  variant=\"outlined\" maxLength=\"4\" pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{3}\" label=\"OTP\" value={this.state.value} onChange={this.otpValidate} onInput={(e) => e.target.value = e.target.value.slice(0, 4)} required />\r\n              </Grid>\r\n            </Grid>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n\r\n              \r\n              \r\n            </Container>\r\n            <Row className=\"pt-4\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\" className=\"signup-text-message-style\">\r\n                <Button className=\"signup-button-style\" onClick={this.submit_SAT}>\r\n                  {LoginHeadings.VerifyOTP_HMD}\r\n                </Button>\r\n                {\r\n                  (this.state.SubmitAlert) &&\r\n                  <Dialog open={this.state.dialogBoxStatus} onClose={this.handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n                    <DialogTitle id=\"simple-dialog-title\">Invalid OTP</DialogTitle>\r\n                  </Dialog>\r\n                }\r\n                {\r\n                  (this.state.OTPDoesNotMatch) &&\r\n                  <Dialog open={this.state.dialogBoxStatus} onClose={this.handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n                    <DialogTitle id=\"simple-dialog-title\">OTP does not Match</DialogTitle>\r\n                  </Dialog>\r\n                }\r\n                 {\r\n                  (this.state.resendOTP) &&\r\n                  <Dialog open={this.state.dialogBoxStatus} onClose={this.handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n                    <DialogTitle id=\"simple-dialog-title\">Your OTP has been expired. Please click on resend  OTP</DialogTitle>\r\n                  </Dialog>\r\n                }\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n            <Row>\r\n          <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n          <Row className=\"\">\r\n            <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n            </Col>\r\n            <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\" className=\"resendOTP-text-style\">\r\n              <label onClick={this.resendOTP_SAT}>\r\n                Resend OTP\r\n              </label>\r\n            </Col>\r\n          </Row>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n\r\n\r\n            <Row className=\"login-registration-button-style\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Navbar expand=\"lg\" sticky=\"bottom\" className=\"signup-navbar-style\">\r\n                  <Row>\r\n                    <Col className=\"Reg-text-alignment\">\r\n                      <label>\r\n                        <span class=\"Question-style\">{LoginHeadings.VerifyOTP_MESSAGE_BOTTOM}</span>\r\n                        <Link to='/'><span class=\"Login-style\">Login</span></Link>\r\n                      </label>\r\n                    </Col>\r\n                  </Row>\r\n                </Navbar>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n\r\n\r\n\r\n\r\n          </Container>\r\n\r\n\r\n\r\n\r\n        {/* </div> */}\r\n      \r\n\r\n\r\n\r\n    </div>;\r\n  }\r\n}\r\n// export default class App extends Component{\r\n//   state={ otp: '' };\r\n//   handleChange = (otp) => this.setState({ otp });\r\n\r\n// }\r\nexport default VerifyOTP;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Complaint_Management\\My-Complaints\\My-Complaints.js",["882","883","884","885","886","887","888","889","890","891","892","893"],"import React, { Component } from \"react\";\r\nimport Header from \"../../Dashboard-header\";\r\nimport Footer from \"../../Footer\";\r\nimport ComplaintDetails from \"../../../jsonFiles/CollaborationJson/complaintDetails\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Link } from \"react-router-dom\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport \"./My-Complaints.css\";\r\nimport LinesEllipsis from \"react-lines-ellipsis\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport footer_data from \"../../../jsonFiles/DashboardInfoJson/DashboardFooter\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nclass MyComplaints extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      APIResponse: \"\",\r\n      SearchData: ComplaintDetails.Search_data,\r\n      AttachmentAvailable: false,\r\n      isOpen: false,\r\n      submit: false,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      eventTarget: \"\",\r\n      footer: footer_data.paths,\r\n      isLogin: \"\",\r\n    };\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      document.body.style = \"background-image: url();\";\r\n      document.body.style = \"background: #F9F9F9\";\r\n    }\r\n\r\n    this.getAPIListSearchedList();\r\n  }\r\n\r\n  getAPIListSearchedList() {\r\n    var complaint_cat_id_SAT = Number(\r\n      sessionStorage.getItem(\"complaint_cat_id\")\r\n    );\r\n    if (complaint_cat_id_SAT == 0) {\r\n      complaint_cat_id_SAT = null;\r\n    }\r\n\r\n    var complaint_status_id_SAT = Number(\r\n      sessionStorage.getItem(\"complaint_status_id\")\r\n    );\r\n    if (complaint_status_id_SAT == 0) {\r\n      complaint_status_id_SAT = null;\r\n    }\r\n\r\n    var thread_id_SAT = Number(sessionStorage.getItem(\"thread_id\"));\r\n    if (thread_id_SAT == 0) {\r\n      thread_id_SAT = null;\r\n    }\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        complaint_cat_id: complaint_cat_id_SAT,\r\n        complaint_status_id: complaint_status_id_SAT,\r\n        thread_id: thread_id_SAT,\r\n      }),\r\n    };\r\n\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/complaint/searchComplaint\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.message === \"Data Found\") {\r\n          var JsonDate = this.state.APIResponse.data;\r\n          this.setState({\r\n            SearchData: JsonDate,\r\n          });\r\n         // sessionStorage.removeItem(\"complaint_cat_id\");\r\n         // sessionStorage.removeItem(\"complaint_status_id\");\r\n         // sessionStorage.removeItem(\"thread_id\");\r\n\r\n          // sessionStorage.setItem(\"complaint_cat_id\",SelectedType_SAT);\r\n          // sessionStorage.setItem(\"complaint_status_id\",complaintStatusValue_SAT);\r\n          // sessionStorage.setItem(\"thread_id\",complaintId_SAT);\r\n          //   this.props.history.push(\"/my-complaints\");\r\n        }\r\n        // else {\r\n        //   this.setState({\r\n        //     SubmitAlert: true,\r\n        //     dialogBoxStatus: true,\r\n        //   });\r\n        // }\r\n      });\r\n  }\r\n\r\n  CardDetails = (search_data) => {\r\n    sessionStorage.setItem(\"complaintId\", search_data.complaint_id);\r\n    this.props.history.push(\"/ComplaintsDetailsByID\");\r\n  };\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n    sessionStorage.removeItem(\"complaint_cat_id\");\r\n    sessionStorage.removeItem(\"complaint_status_id\");\r\n    sessionStorage.removeItem(\"thread_id\");\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <Header /> */}\r\n        {/* <Container className=\"all-header-space\"></Container> */}\r\n\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              <Link to={sessionStorage.getItem(\"complaint_back\")} onClick={()=>{\r\n                sessionStorage.removeItem(\"complaint_cat_id\");\r\n                sessionStorage.removeItem(\"complaint_status_id\");\r\n                sessionStorage.removeItem(\"thread_id\");\r\n              }}>\r\n                <Tooltip\r\n                  title=\"Dashboard\"\r\n                  placement=\"top\"\r\n                  TransitionProps={{ timeout: 600 }}\r\n                >\r\n                  <MDBIcon\r\n                    icon=\"chevron-circle-left\"\r\n                    size=\"2x\"\r\n                    className=\"back-arrow-icon\"\r\n                  />\r\n                </Tooltip>\r\n              </Link>\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">\r\n                My Complaint List\r\n              </label>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            {/* <Row className=\"pt-3\">\r\n                <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"1\" xl=\"1\" xxl=\"1\" className=\"back-arrow-icon-style pl-4\">\r\n                  <Link to = {sessionStorage.getItem(\"complaint_back\")}>\r\n                    <MDBIcon icon=\"arrow-circle-left\" size=\"2x\" className=\"back-arrow-icon\"/>\r\n                  </Link>\r\n                </Col>\r\n                <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"11\" xl=\"11\" xxl=\"11\" className=\"pr-4 start-new-Idea-heading\">\r\n                  My Complaint List\r\n                </Col>\r\n              </Row> */}\r\n\r\n            <div class=\"details-container-style inner-container-style-collaboration\">\r\n              <Container className=\"p-4\">\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table table-container-style\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th\r\n                          scope=\"col\"\r\n                          class=\"table-font-style table-heading-style\"\r\n                        >\r\n                          ID\r\n                        </th>\r\n                        <th\r\n                          scope=\"col\"\r\n                          class=\"table-font-style table-heading-style\"\r\n                        >\r\n                          Title\r\n                        </th>\r\n                        <th\r\n                          scope=\"col\"\r\n                          class=\"table-font-style table-heading-style\"\r\n                        >\r\n                          Status\r\n                        </th>\r\n                        <th\r\n                          scope=\"col\"\r\n                          class=\"table-font-style table-heading-style\"\r\n                        ></th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {this.state.SearchData.map((search_data, index) => (\r\n                        <tr>\r\n                          <th scope=\"row\" class=\"table-font-style\">\r\n                            {search_data.complaint_id}\r\n                          </th>\r\n                          <td class=\"table-font-style\">\r\n                                <div className=\"table-title-div-ellipsis\">\r\n                                <span className=\"table-title-ellipsis\">\r\n                                  {search_data.complaint_subject}\r\n                                </span>\r\n                              </div>\r\n                          </td>\r\n                          <td class=\"table-font-style table-status-width\">\r\n                            {search_data.status === \"Open\" && (\r\n                              <MDBIcon\r\n                                icon=\"circle\"\r\n                                size=\"sm\"\r\n                                className=\"circle-icon-style circle-icon-style-open\"\r\n                              />\r\n                            )}\r\n                            {search_data.status === \"In Progress\" && (\r\n                              <MDBIcon\r\n                                icon=\"circle\"\r\n                                size=\"sm\"\r\n                                className=\"circle-icon-style circle-icon-style-inProgress\"\r\n                              />\r\n                            )}\r\n                            {search_data.status === \"Rejected\" && (\r\n                              <MDBIcon\r\n                                icon=\"circle\"\r\n                                size=\"sm\"\r\n                                className=\"circle-icon-style circle-icon-style-regected\"\r\n                              />\r\n                            )}\r\n                            {search_data.status === \"Closed\" && (\r\n                              <MDBIcon\r\n                                icon=\"circle\"\r\n                                size=\"sm\"\r\n                                className=\"circle-icon-style circle-icon-style-closed\"\r\n                              />\r\n                            )}\r\n                            {search_data.status === \"Reopen\" && (\r\n                              <MDBIcon\r\n                                icon=\"circle\"\r\n                                size=\"sm\"\r\n                                className=\"circle-icon-style circle-icon-style-reopen\"\r\n                              />\r\n                            )}\r\n                            {search_data.status}\r\n                          </td>\r\n                          <td class=\"table-font-style\">\r\n                            <MDBIcon\r\n                              far\r\n                              icon=\"eye\"\r\n                              size=\"sl\"\r\n                              className=\"complaint-view-details-eye-icon\"\r\n                              onClick={() => this.CardDetails(search_data)}\r\n                            />\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </Container>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyComplaints;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\forget-password-verifyOTP\\forget-password-verifyOTP.js",["894","895","896"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport passwordwindow from \"../../assets/passwordwindow.png\";\r\nimport LoginHeadings from \"../../jsonFiles/UserInfoJson/userLogin\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport HeaderLogo from \"../../assets/HeaderLogo.png\";\r\nimport \"./forget-password-verifyOTP.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nclass ForgetPasswordVerifyOTP extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      otpValue: \"\",\r\n      otpValidate: false,\r\n      APIResponse: \"\",\r\n      dialogBoxStatus: false,\r\n      SubmitAlert: false,\r\n      OTPDoesNotMatch: false,\r\n      resendOTP: false,\r\n      ResentOTPAPIResponse: \"\",\r\n    };\r\n\r\n    this.otpValidate = this.otpValidate.bind(this);\r\n    this.submit_SAT = this.submit_SAT.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.resendOTP_SAT = this.resendOTP_SAT.bind(this);\r\n  }\r\n\r\n  otpValidate = (e) => {\r\n    var otp = e.target.value.trim();\r\n    if (otp != null || otp !== \"\") {\r\n      this.setState({\r\n        otpValidate: true,\r\n        otpValue: otp,\r\n      });\r\n    }\r\n  };\r\n\r\n  submit_SAT() {\r\n    console.log(\"otpValue = \", this.state.otpValue);\r\n    if (this.state.otpValue) {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          phonenumber: sessionStorage.getItem(\"phoneNumber\"),\r\n          otp: this.state.otpValue,\r\n        }),\r\n      };\r\n      fetch(\"https://scity.gmmspl.com:3000/smartcity/mobileotp\", requestOptions)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          console.log(\"APIResponse = \", this.state.APIResponse);\r\n          if (this.state.APIResponse.message === \"OTP match\") {\r\n            // sessionStorage.setItem(\"phoneNumber\", this.state.phone_numberValue_SAT);\r\n            // console.log(\"PhoneNumber\", this.state.APIResponse.data.user_id);\r\n            this.props.history.push(\"/ResetPassword\");\r\n          } else if (\r\n            this.state.APIResponse.message === \"OTP  doesn't match!!!\"\r\n          ) {\r\n            toast.warn(\"OTP  doesn't match, please re-enter your OTP\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              // onClose: () => this.props.history.push(\"/verifyotp\")\r\n            });\r\n          } else if (this.state.APIResponse.message === \"OTP expired\") {\r\n            this.setState({\r\n              resendOTP: true,\r\n              dialogBoxStatus: true,\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      toast.warn(\"Please enter your OTP\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        // onClose: () => this.props.history.push(\"/verifyotp\")\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      dialogBoxStatus: false,\r\n      SubmitAlert: false,\r\n      OTPDoesNotMatch: false,\r\n      resendOTP: false,\r\n    });\r\n  }\r\n\r\n  resendOTP_SAT() {\r\n    if (sessionStorage.getItem(\"phoneNumber\")) {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          phonenumber: sessionStorage.getItem(\"phoneNumber\"),\r\n        }),\r\n      };\r\n      fetch(\"https://scity.gmmspl.com:3000/smartcity/resendotp\", requestOptions)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          if (this.state.APIResponse.message === \"OTP resend\") {\r\n            toast.success(\"OTP resend successfully\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              // onClose: () => this.props.history.push(\"/verifyotp\")\r\n            });\r\n          }\r\n          // else if(this.state.APIResponse.message === \"OTP  doesn't match!!!\"){\r\n          //   this.setState({\r\n          //     OTPDoesNotMatch: true,\r\n          //     dialogBoxStatus: true,\r\n          //   });\r\n          // }\r\n          // else if(this.state.APIResponse.message === \"No Data Found\"){\r\n          //   this.setState({\r\n          //     resendOTP: true,\r\n          //     dialogBoxStatus: true,\r\n          //   });\r\n          // }\r\n        });\r\n    } else {\r\n      this.setState({\r\n        SubmitAlert: true,\r\n        dialogBoxStatus: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover={true}\r\n          toastClassName=\"toaster-style\"\r\n        />\r\n\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"forget-password-header-height-style_SAT\">\r\n            <Col\r\n              xs=\"12\"\r\n              sm=\"12\"\r\n              md=\"12\"\r\n              lg=\"12\"\r\n              xl=\"12\"\r\n              xxl=\"12\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              {/* <label class=\"header-heading-label-style\">Menu</label> */}\r\n              <img\r\n                className=\"forgetheader-profile-image-style\"\r\n                src={HeaderLogo}\r\n                alt=\"\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Row className=\"pt-5\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"4\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"12\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"verifyotp-welcome-text-style \"\r\n          >\r\n            <label>Verify OTP</label>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"4\" xxl=\"3\"></Col>\r\n        </Row>\r\n\r\n        <Container>\r\n          <Row className=\"\">\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"4\" xxl=\"3\"></Col>\r\n            <Col\r\n              xs=\"12\"\r\n              sm=\"12\"\r\n              md=\"12\"\r\n              lg=\"6\"\r\n              xl=\"6\"\r\n              xxl=\"6\"\r\n              className=\"verifyotp-text-style\"\r\n            >\r\n              <label>Code is sent to your registered mobile number</label>\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"4\" xxl=\"3\"></Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n              <Grid\r\n                container\r\n                spacing={1}\r\n                alignItems=\"flex-center\"\r\n                className=\"VerifyOTPMuiGrid-spacing-xs-1 > .MuiGrid-item\"\r\n              >\r\n                <Grid item>\r\n                  {/* <passwordwindow className=\"login-icon-color\" /> */}\r\n                  <img src={passwordwindow} alt=\"Logo\" />\r\n                </Grid>\r\n                {/* <Grid item className=\"login-field-width-style\"> */}\r\n                {/* <TextField id=\"input-with-icon-grid\" label=\"Full Name\" value={this.state.value} onChange={this.full_nameValidate_SAT} /> */}\r\n                {/* </Grid> */}\r\n              </Grid>\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n              <Grid container spacing={1} alignItems=\"flex-end\">\r\n                <Grid item className=\"otp-field-width-style\">\r\n                  <TextField\r\n                    id=\"textfieldOtp\"\r\n                    type=\"number\"\r\n                    inputmode=\"numeric\"\r\n                    variant=\"outlined\"\r\n                    maxLength=\"4\"\r\n                    pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{3}\"\r\n                    label=\"OTP\"\r\n                    value={this.state.value}\r\n                    onChange={this.otpValidate}\r\n                    onInput={(e) =>\r\n                      (e.target.value = e.target.value.slice(0, 4))\r\n                    }\r\n                    required\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          </Row>\r\n\r\n          <Row className=\"pt-4\">\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            <Col\r\n              xs=\"12\"\r\n              sm=\"12\"\r\n              md=\"12\"\r\n              lg=\"6\"\r\n              xl=\"6\"\r\n              xxl=\"6\"\r\n              className=\"signup-text-message-style\"\r\n            >\r\n              <Button className=\"signup-button-style\" onClick={this.submit_SAT}>\r\n                {LoginHeadings.VerifyOTP_HMD}\r\n              </Button>\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n              <Row className=\"\">\r\n                <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                <Col\r\n                  xs=\"6\"\r\n                  sm=\"6\"\r\n                  md=\"6\"\r\n                  lg=\"6\"\r\n                  xl=\"6\"\r\n                  xxl=\"6\"\r\n                  className=\"resendOTP-text-style\"\r\n                >\r\n                  <label onClick={this.resendOTP_SAT}>Resend OTP</label>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          </Row>\r\n\r\n          <Row className=\"pt-4 pb-5\">\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n              {/* <Navbar expand=\"lg\" sticky=\"bottom\" className=\"signup-navbar-style\"> */}\r\n              <Row>\r\n                <Col className=\"click-here-to-login\">\r\n                  <label>\r\n                    <span class=\"Question-style\">Click here to go back to</span>\r\n                    <Link to=\"/\">\r\n                      <span class=\"Login-style pl-2\">Login</span>\r\n                    </Link>\r\n                  </label>\r\n                </Col>\r\n              </Row>\r\n              {/* </Navbar> */}\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgetPasswordVerifyOTP;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Complaint_Management\\Log-A-Complaint\\Log-A-Complaint.js",["897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917"],"import React, { Component } from \"react\";\r\nimport Header from \"../../Dashboard-header\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport CollaborationsHeadings from \"../../../jsonFiles/CollaborationJson/complaintDetails\";\r\nimport { Link } from \"react-router-dom\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"react-select\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Footer from \"../../Footer\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport PublishUpload from \"@material-ui/icons/Publish\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./Log-A-Complaint.css\";\r\nimport DefaultMaps from \"../../DefaultMapsLoadComponent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport footer_data from \"../../../jsonFiles/DashboardInfoJson/DashboardFooter\";\r\n\r\nclass LogAComplaint extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n     this.myRef = React.createRef();\r\n    this.state = {\r\n      // shareIcons: DashboardHeadings.DashIcons\r\n      newTitle: \"\",\r\n      newTitleValidate: false,\r\n      description: \"\",\r\n      descriptionValidate: false,\r\n      tag: \"\",\r\n      tagValidate: false,\r\n      SelectedType: \"\",\r\n      SelectedTypeValidate: false,\r\n      APIResponse: \"\",\r\n      successfullyLogComplaint: false,\r\n      SubmitAlert: false,\r\n      dialogBoxStatus: false,\r\n      file_upload1: null,\r\n      file_upload2: null,\r\n      file_upload3: null,\r\n      fileName1: \"\",\r\n      fileName2: \"\",\r\n      fileName3: \"\",\r\n      file_upload: [],\r\n      fileName: [],\r\n      fileNameData: [],\r\n      tooManyFiles: false,\r\n      largeFileSize: false,\r\n      dialogBoxStatus: false,\r\n      fileSuccessfullyUploaded: false,\r\n      CategoryList: \"\",\r\n      isOpen: false,\r\n      submit: false,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      eventTarget: \"\",\r\n      footer: footer_data.paths,\r\n      isLogin: \"\",\r\n      // display:\"none\"\r\n    };\r\n    this.newTitleValidate = this.newTitleValidate.bind(this);\r\n    this.Submit = this.Submit.bind(this);\r\n    this.descriptionValidate = this.descriptionValidate.bind(this);\r\n    this.UploadAttachedFiles = this.UploadAttachedFiles.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.cancelUpload = this.cancelUpload.bind(this);\r\n    this.changeLocation = this.changeLocation.bind(this);\r\n    this.complaintBack = this.complaintBack.bind(this);\r\n    this.getTruncatedName=this.getTruncatedName.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      //alert(\"mont\");\r\n      document.body.style = \"background-image: url();\";\r\n      document.body.style = \"background: #F9F9F9\";\r\n\r\n      if (sessionStorage.getItem(\"complaintCatgValue\")) {\r\n        var tempObj = {\r\n          value: sessionStorage.getItem(\"complaintCatgValue\"),\r\n          label: sessionStorage.getItem(\"complaintCatglabel\"),\r\n        };\r\n        this.setState({\r\n          SelectedType: tempObj,\r\n          SelectedTypeValidate: true,\r\n        });\r\n      }\r\n\r\n      if (sessionStorage.getItem(\"complaintTitle\")) {\r\n        this.setState({\r\n          newTitle: sessionStorage.getItem(\"complaintTitle\"),\r\n          newTitleValidate: true,\r\n        });\r\n      }\r\n      if (sessionStorage.getItem(\"complaintDesc\")) {\r\n        this.setState({\r\n          description: sessionStorage.getItem(\"complaintDesc\"),\r\n          descriptionValidate: true,\r\n        });\r\n      }\r\n      this.getCategoryList();\r\n    }\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  // componentDidUpdate(){\r\n  //   alert(\"update\");\r\n  //   this.state.newTitle=sessionStorage.getItem(\"complaintTitle\");\r\n  // }\r\n\r\n  complaintBack() {\r\n    sessionStorage.removeItem(\"complaintLogBack\");\r\n    sessionStorage.setItem(\r\n      \"compliantLocation\",\r\n      sessionStorage.getItem(\"currentAddress\")\r\n    );\r\n    sessionStorage.removeItem(\"mapsBack\");\r\n    sessionStorage.removeItem(\"complaintTemplong\");\r\n    sessionStorage.removeItem(\"complaintTemplat\");\r\n    sessionStorage.removeItem(\"compliantTempLocation\");\r\n    sessionStorage.removeItem(\"complaintlong\");\r\n    sessionStorage.removeItem(\"complaintlat\");\r\n    sessionStorage.removeItem(\"complaintTitle\");\r\n    sessionStorage.removeItem(\"complaintDesc\");\r\n    sessionStorage.removeItem(\"complaintCatgValue\");\r\n    sessionStorage.removeItem(\"complaintCatglabel\");\r\n  }\r\n\r\n  getCategoryList() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n      }),\r\n    };\r\n\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/complaint/complaintcategory\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.message === \"Data Found Sucessfully\") {\r\n          const options = this.state.APIResponse.data.map((d) => ({\r\n            value: d.complaint_cat_id,\r\n            label: d.category_name,\r\n          }));\r\n          this.setState({ CategoryList: options });\r\n        } else {\r\n          toast.error(\"Something went wrong, Please try again\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () =>\r\n              this.props.history.push(\"/dashboard-complaintManagement\"),\r\n          });\r\n        }\r\n      })\r\n      .catch(function () {\r\n        toast.error(\"Server response failed. please try again\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n      });\r\n  }\r\n\r\n  newTitleValidate = (e) => {\r\n    var title = e.target.value;\r\n    if (title != \"\" && title != null) {\r\n      this.setState({\r\n        newTitle: e.target.value,\r\n        newTitleValidate: true,\r\n      });\r\n      sessionStorage.setItem(\"complaintTitle\", title);\r\n    } else {\r\n      this.setState({\r\n        newTitle: e.target.value,\r\n        newTitleValidate: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  descriptionValidate = (e) => {\r\n    this.setState({\r\n      description: e.target.value,\r\n      descriptionValidate: true,\r\n    });\r\n    sessionStorage.setItem(\"complaintDesc\", e.target.value);\r\n  };\r\n\r\n  CategoryTypeValidate = (Selected_option) => {\r\n    this.setState({\r\n      SelectedType: Selected_option,\r\n      SelectedTypeValidate: true,\r\n    });\r\n    sessionStorage.setItem(\"complaintCatgValue\", Selected_option.value);\r\n    sessionStorage.setItem(\"complaintCatglabel\", Selected_option.label);\r\n  };\r\n\r\n  changeLocation() {\r\n    sessionStorage.setItem(\"complaintLogBack\", \"log-complaint\");\r\n  }\r\n\r\n  UploadAttachedFiles = (e) => {\r\n    var test = document.getElementsByClassName(\"file1upload\")[0].attributes[0]\r\n      .nodeValue;\r\n\r\n    if (e.currentTarget.files.length < 4) {\r\n      for (var i = 0; i < e.currentTarget.files.length; i++) {\r\n        // console.log(\"File size = \", e.currentTarget.files[i].size/1024/1024);\r\n        if (e.currentTarget.files[i].size / 1024 / 1024 > 5) {\r\n          this.state.largeFileSize = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (this.state.largeFileSize === false) {\r\n        this.setState({\r\n          file_upload1: e.currentTarget.files[0],\r\n          file_upload2: e.currentTarget.files[1],\r\n          file_upload3: e.currentTarget.files[2],\r\n          fileName1: e.currentTarget.files[0].name,\r\n          fileName2: e.currentTarget.files[1].name,\r\n          fileName3: e.currentTarget.files[2].name,\r\n        });\r\n      } else {\r\n        toast.warn(\"The file size should not be greater than 5 MB.\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n         this.state.largeFileSize = false;\r\n         this.myRef.current.value=\"\" ;\r\n      }\r\n    } else {\r\n      toast.error(\"Only 3 files are allowed to upload.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      largeFileSize: false,\r\n      tooManyFiles: false,\r\n      dialogBoxStatus: false,\r\n    });\r\n  }\r\n  getTruncatedName=(attachmentname)=>{\r\n    if(attachmentname.length>25)\r\n    {\r\n      var truncatename= attachmentname.substr(0,10)+'...'+attachmentname.substr(attachmentname.length-8,attachmentname.length-1)\r\n      return truncatename;\r\n    }\r\n    else{\r\n    return(attachmentname);\r\n    }\r\n  }\r\n  cancelUpload(num) {\r\n    var array = [...this.state.fileName]; // make a separate copy of the array\r\n    var index = num;\r\n    if (index !== -1) {\r\n      array.splice(index, 1);\r\n      this.setState({ fileName: array });\r\n      this.myRef.current.value=\"\";\r\n    }\r\n  }\r\n\r\n  onChangeFile(e) {\r\n    let files = e.target.files;\r\n    //  console.log(files);  var test=document.getElementsByClassName(\"file1upload\")[0].attributes[0].nodeValue;\r\n\r\n    var totalSelectedCount =\r\n      e.currentTarget.files.length + this.state.fileName.length;\r\n    if (e.currentTarget.files.length < 4 && totalSelectedCount < 4) {\r\n      for (var i = 0; i < e.currentTarget.files.length; i++) {\r\n        if (e.currentTarget.files[i].size / 1024 / 1024 > 5) {\r\n          this.state.largeFileSize = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (this.state.largeFileSize === false) {\r\n        console.log(this.state.fileName.length);\r\n\r\n        var test = [];\r\n        for (var j = 0; j < this.state.fileName.length; j++) {\r\n          test[j] = this.state.fileName[j];\r\n        }\r\n        for (var i = 0; i < e.currentTarget.files.length; i++) {\r\n          test[j] = e.currentTarget.files[i];\r\n          j++;\r\n        }\r\n        this.setState({ test });\r\n\r\n        this.setState({\r\n          fileName: test,\r\n        });\r\n        console.log(\"test\", this.state.fileName);\r\n\r\n        // toast.success('Files Uploaded', {\r\n        //   position: \"top-center\",\r\n        //         autoClose: 3000,\r\n        //         hideProgressBar: false,\r\n        //         closeOnClick: true,\r\n        //         pauseOnHover: true,\r\n        //         draggable: true,\r\n        //         progress: undefined,\r\n        //         theme: \"light\",\r\n        //   });\r\n      } else {\r\n        toast.warn(\"The file size should not be greater than 5 MB.\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n         this.state.largeFileSize = false;\r\n         this.myRef.current.value=\"\" ;\r\n      }\r\n    } else {\r\n      toast.error(\"Only 3 files are allowed to upload.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n\r\n  Submit() {\r\n    if (this.state.newTitleValidate && this.state.SelectedTypeValidate) {\r\n      this.refs.btn.setAttribute(\"disabled\", \"disabled\");\r\n      let formData = new FormData();\r\n\r\n      formData.append(\"token\", sessionStorage.getItem(\"token\"));\r\n      formData.append(\"user_id\", sessionStorage.getItem(\"user_id\"));\r\n      formData.append(\"complaint_cat_id\", this.state.SelectedType.value);\r\n      formData.append(\"title\", this.state.newTitle);\r\n      if (\r\n        this.state.description == null ||\r\n        this.state.description == undefined ||\r\n        this.state.description == \"null\"\r\n      ) {\r\n        formData.append(\"complaint\", \" \");\r\n      } else {\r\n        formData.append(\"complaint\", this.state.description);\r\n      }\r\n\r\n      formData.append(\"ward_id\", sessionStorage.getItem(\"ward_id\"));\r\n\r\n      for (var i = 1; i <= this.state.fileName.length; i++) {\r\n        formData.append(\"file\" + i, this.state.fileName[i - 1]);\r\n      }\r\n\r\n      if (sessionStorage.getItem(\"complaintlong\")) {\r\n        formData.append(\"longitude\", sessionStorage.getItem(\"complaintlong\"));\r\n        formData.append(\"latitude\", sessionStorage.getItem(\"complaintlat\"));\r\n        formData.append(\"address\", sessionStorage.getItem(\"compliantLocation\"));\r\n      } else {\r\n        formData.append(\r\n          \"longitude\",\r\n          sessionStorage.getItem(\"currentLongitude\")\r\n        );\r\n        formData.append(\"latitude\", sessionStorage.getItem(\"currentLatitude\"));\r\n        formData.append(\"address\", sessionStorage.getItem(\"currentAddress\"));\r\n      }\r\n\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        body: formData,\r\n        // headers: { 'Content-Type': 'application/json' },\r\n        // body: JSON.stringify(\r\n        //   {\r\n        //     \"user_id\": sessionStorage.getItem(\"user_id\"),\r\n        //     \"token\": sessionStorage.getItem(\"token\"),\r\n        //     \"latitude\": null,\r\n        //     \"longitude\": null,\r\n        //     \"complaint_cat_id\": this.state.SelectedType.value,\r\n        //     \"title\": this.state.newTitle,\r\n        //     \"complaint\": this.state.description,\r\n        //     \"ward_id\":sessionStorage.getItem(\"ward_id\")\r\n        //   }\r\n        // )\r\n      };\r\n\r\n      fetch(\r\n        \"https://scity.gmmspl.com:3000/complaint/createComplaint\",\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          if (this.state.APIResponse.message === \"Complaint Registered\") {\r\n            this.refs.btn.setAttribute(\"disabled\", \"disabled\");\r\n            toast.success(\"Complaint Registered Successfully.\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              onClose: () =>\r\n                this.props.history.push(\"/dashboard-complaintManagement\"),\r\n            });\r\n            sessionStorage.removeItem(\"complaintLogBack\");\r\n            sessionStorage.setItem(\r\n              \"compliantLocation\",\r\n              sessionStorage.getItem(\"currentAddress\")\r\n            );\r\n            sessionStorage.removeItem(\"mapsBack\");\r\n            sessionStorage.removeItem(\"complaintTemplong\");\r\n            sessionStorage.removeItem(\"complaintTemplat\");\r\n            sessionStorage.removeItem(\"compliantTempLocation\");\r\n            sessionStorage.removeItem(\"complaintlong\");\r\n            sessionStorage.removeItem(\"complaintlat\");\r\n            sessionStorage.removeItem(\"complaintTitle\");\r\n            sessionStorage.removeItem(\"complaintDesc\");\r\n            sessionStorage.removeItem(\"complaintCatgValue\");\r\n            sessionStorage.removeItem(\"complaintCatglabel\");\r\n          } else {\r\n            toast.error(\"Complaint is not registered, please try again.\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      toast.error(\"Title and category cannot be empty\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      dialogBoxStatus: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // const listItems = this.state.fileName.map((d) => <li key={d.name}>{d.name}</li>);\r\n\r\n    return (\r\n      <div>\r\n        {/* <Header /> */}\r\n        {/* <Container className=\"all-header-space\"></Container> */}\r\n\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              <Link\r\n                onClick={this.complaintBack}\r\n                to=\"/dashboard-complaintManagement\"\r\n              >\r\n                <Tooltip\r\n                  title=\"Dashboard\"\r\n                  placement=\"top\"\r\n                  TransitionProps={{ timeout: 600 }}\r\n                >\r\n                  <MDBIcon\r\n                    icon=\"chevron-circle-left\"\r\n                    size=\"2x\"\r\n                    className=\"back-arrow-icon\"\r\n                  />\r\n                </Tooltip>\r\n              </Link>\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">\r\n                {CollaborationsHeadings.Complaint_log_HEADING}\r\n              </label>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            {/* <Row className=\"pt-1 pb-1\">\r\n              <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"1\" xl=\"1\" xxl=\"1\" className=\"back-arrow-icon-style pl-4\">\r\n                <Link onClick={this.complaintBack} to = \"/dashboard-complaintManagement\">\r\n                  <MDBIcon icon=\"arrow-circle-left\" size=\"2x\" className=\"back-arrow-icon\"/>\r\n                </Link>\r\n              </Col>\r\n              <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"11\" xl=\"11\" xxl=\"11\" className=\"start-new-Idea-heading\">\r\n                {CollaborationsHeadings.Complaint_log_HEADING}\r\n              </Col>\r\n            </Row> */}\r\n\r\n            <div class=\"details-container-style inner-container-style-collaboration\">\r\n              <Row className=\"ml-3 mt-3 mr-3\">\r\n                <Col\r\n                  xs=\"12\"\r\n                  sm=\"12\"\r\n                  md=\"12\"\r\n                  lg=\"12\"\r\n                  xl=\"12\"\r\n                  xxl=\"12\"\r\n                  className=\"complaint-banners banner-submenu-style\"\r\n                >\r\n                  <Row>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                      <Row className=\"log-a-complaint-banner-text\">\r\n                        Explain your problem with supporting media and location\r\n                        for faster resolution.\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n\r\n              {/* <Row className=\"text-align-style\">\r\n                <Col xs=\"1\" sm=\"1\" md=\"2\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                <Col\r\n                  xs=\"10\"\r\n                  sm=\"10\"\r\n                  md=\"8\"\r\n                  lg=\"6\"\r\n                  xl=\"6\"\r\n                  xxl=\"6\"\r\n                  className=\"pl-0\"\r\n                >\r\n                  <label class=\"log-complaint-heading-style\">\r\n                    I would like to log a complaint about\r\n                  </label>\r\n                </Col>\r\n                <Col xs=\"1\" sm=\"1\" md=\"2\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              </Row> */}\r\n\r\n              <Container className=\"p-4\">\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <TextField\r\n                      id=\"standard-required\"\r\n                      label=\"Title\"\r\n                      onInput={(e) =>\r\n                        (e.target.value = e.target.value.slice(0, 250))\r\n                      }\r\n                      value={this.state.newTitle}\r\n                      onChange={this.newTitleValidate}\r\n                      required\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <Select\r\n                      placeholder={\r\n                        <label>\r\n                          Select Category\r\n                          <span class=\"select-astric-red\"> *</span>\r\n                        </label>\r\n                      }\r\n                      options={this.state.CategoryList}\r\n                      isSearchable={false}\r\n                      className=\"category-drop-style\"\r\n                      value={this.state.SelectedType}\r\n                      onChange={this.CategoryTypeValidate}\r\n                      maxMenuHeight={170}\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pt-4\"\r\n                  >\r\n                    <TextField\r\n                      id=\"outlined-textarea\"\r\n                      onInput={(e) =>\r\n                        (e.target.value = e.target.value.slice(0, 500))\r\n                      }\r\n                      label=\"Tell us more...\"\r\n                      multiline\r\n                    //  variant=\"outlined\"\r\n                      rows={3}\r\n                      className=\"start-new-idea-description-box\"\r\n                      value={this.state.description}\r\n                      onChange={this.descriptionValidate}\r\n                    />\r\n                    <label class=\"max-char-count-text-display\">\r\n                      Max character limit : 500\r\n                    </label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pt-4\"\r\n                  >\r\n                    <Row>\r\n                      <Col\r\n                        xs=\"7\"\r\n                        sm=\"7\"\r\n                        md=\"7\"\r\n                        lg=\"7\"\r\n                        xl=\"7\"\r\n                        xxl=\"7\"\r\n                        className=\"geolocation-font-style\"\r\n                      >\r\n                        <label>\r\n                          {sessionStorage.getItem(\"compliantLocation\")}\r\n                        </label>\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"5\"\r\n                        sm=\"5\"\r\n                        md=\"5\"\r\n                        lg=\"5\"\r\n                        xl=\"5\"\r\n                        xxl=\"5\"\r\n                        className=\"text-align-right pl-0\"\r\n                      >\r\n                        <Link\r\n                          className=\"geolocation-button-style\"\r\n                          onClick={this.changeLocation}\r\n                          to=\"/Maps\"\r\n                        >\r\n                          <MDBIcon icon=\"map-marker-alt\" />\r\n                          <label class=\"geolocation-button-font-style\">\r\n                            Change Location\r\n                          </label>\r\n                        </Link>\r\n                      </Col>\r\n                    </Row>\r\n                    <hr className=\"bold-hr\"></hr>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pt-4\"\r\n                  >\r\n                    <Row className=\"pt-3 pl-3\">\r\n                      <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\">\r\n                        <Row>\r\n                          <Col\r\n                            xs=\"4\"\r\n                            sm=\"4\"\r\n                            md=\"4\"\r\n                            lg=\"4\"\r\n                            xl=\"4\"\r\n                            xxl=\"4\"\r\n                            className=\"Attachment-font-style pl-0\"\r\n                          >\r\n                            Attachment\r\n                          </Col>\r\n\r\n                          <Col\r\n                            xs=\"8\"\r\n                            sm=\"8\"\r\n                            md=\"8\"\r\n                            lg=\"8\"\r\n                            xl=\"8\"\r\n                            xxl=\"8\"\r\n                            className=\"text-align-right\"\r\n                          >\r\n                            <label\r\n                              htmlFor=\"myInput\"\r\n                              className=\"uploadbuttonstyle\"\r\n                            >\r\n                              Upload\r\n                              <PublishUpload fontSize=\"small\" />\r\n                            </label>\r\n                            <input\r\n                              id=\"myInput\"\r\n                              style={{ display: \"none\" }}\r\n                              type={\"file\"}\r\n                              multiple\r\n                              accept=\"image/png, image/jpg, image/jpeg ,video/mp4,video/x-m4v,video/*,application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint,\r\n                            text/plain, application/pdf, .docx, .doc, .xlsx, .pptx, .txt\"\r\n                              onChange={(e) => this.onChangeFile(e)}\r\n                               ref={this.myRef}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className=\"max-size-font-style\">\r\n                          Attach Image/Video/Document <i>(max size 5MB)</i>\r\n                        </Row>\r\n                        <Row className=\"max-size-font-style\">\r\n                          Maximum 3 attachments allowed\r\n                        </Row>\r\n                        <Row className=\"pt-3\">\r\n                          <Col\r\n                            xs=\"10\"\r\n                            sm=\"10\"\r\n                            md=\"10\"\r\n                            lg=\"10\"\r\n                            xl=\"10\"\r\n                            xxl=\"10\"\r\n                            className=\"pl-0\"\r\n                          >\r\n                            {this.state.fileName.map((file, index) => (\r\n                              <div className=\"file1upload\">{this.getTruncatedName(file.name)}</div>\r\n                            ))}\r\n                          </Col>\r\n                          <Col\r\n                            xs=\"2\"\r\n                            sm=\"2\"\r\n                            md=\"2\"\r\n                            lg=\"2\"\r\n                            xl=\"2\"\r\n                            xxl=\"2\"\r\n                            className=\"pl-0\"\r\n                          >\r\n                            {this.state.fileName.map((file, index) => (\r\n                              <div className=\"file1upload\">\r\n                                <CancelIcon\r\n                                  color=\"secondary\"\r\n                                  fontSize=\"small\"\r\n                                  onClick={() => this.cancelUpload(index)}\r\n                                />\r\n                              </div>\r\n                            ))}\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n\r\n                      <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\" xl=\"4\" xxl=\"4\"></Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-4 pb-5\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"5\" lg=\"5\" xl=\"5\" xxl=\"5\">\r\n                    <Button\r\n                      className=\"login-button-style\"\r\n                      onClick={this.Submit}\r\n                      ref=\"btn\"\r\n                    >\r\n                      SUBMIT\r\n                    </Button>\r\n                  </Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"5\" lg=\"5\" xl=\"5\" xxl=\"5\">\r\n                    <Link\r\n                      onClick={this.complaintBack}\r\n                      to=\"/dashboard-complaintManagement\"\r\n                    >\r\n                      <Button className=\"skip-button-style\">CANCEL</Button>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"10\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                {/* <Row className=\"pt-4\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                <Button className=\"login-button-style\" onClick={this.Submit} ref=\"btn\">\r\n                  SUBMIT\r\n                  </Button>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"10\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n            </Row>\r\n\r\n            <Row className=\"pt-4\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                <Link onClick={this.complaintBack} to=\"/dashboard-complaintManagement\">\r\n                  <Button className=\"skip-button-style\">\r\n                    CANCEL\r\n                  </Button>\r\n                </Link>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"10\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n            </Row> */}\r\n              </Container>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        {/* <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover={false}\r\n                className=\"toaster-style\"\r\n                /> */}\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(LogAComplaint);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-EditVolunteer\\Collaboration-bAV-EditVolunteer.js",["918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972"],"import React, { Component } from \"react\";\r\n\r\nimport Header from \"../../Dashboard-header\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport CollaborationsHeadings from \"../../../jsonFiles/CollaborationJson/collaborationVolunteer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"react-select\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport Footer from \"../../Footer\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport PublishUpload from \"@material-ui/icons/Publish\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport footer_data from \"../../../jsonFiles/DashboardInfoJson/DashboardFooter\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport fileDownload from 'js-file-download';\r\nimport {Capacitor} from '@capacitor/core';\r\nimport { Filesystem, Directory, Encoding } from '@capacitor/filesystem';\r\nimport {FileOpener} from '@ionic-native/file-opener';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { confirm } from \"react-confirm-box\";\r\nimport axios from 'axios';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faFileCsv} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass CollaborationBAVEditVolunteer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // shareIcons: DashboardHeadings.DashIcons\r\n      newTitle: \"\",\r\n      address: \"\",\r\n      newTitleValidate: false,\r\n      description: \"\",\r\n      descriptionValidate: false,\r\n      tag: \"\",\r\n      tagValidate: false,\r\n      SelectedType: \"\",\r\n      start_date: \"\",\r\n      startDateValidate: \"\",\r\n      end_date: \"\",\r\n      endDateValidate: \"\",\r\n      file_upload1: null,\r\n      file_upload2: null,\r\n      file_upload3: null,\r\n      tooManyFiles: false,\r\n      largeFileSize: false,\r\n      dialogBoxStatus: false,\r\n      currentDate: \"\",\r\n      CategoryList: \"\",\r\n      isOpen: false,\r\n      submit: false,\r\n      mimeType:'',\r\n      extension:'',\r\n      isActive:false,\r\n      progressbarVisible:false,\r\n      progress:0,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      eventTarget: \"\",\r\n      footer: footer_data.paths,\r\n      isLogin: \"\",\r\n      file_upload: [],\r\n      fileName: [],\r\n      fileNameData: [],\r\n      shareLocationflag: false,\r\n      ACardAttachments: CollaborationsHeadings.ACardDetails[0].media_files,\r\n      latEdit:\"\",\r\n      longEdit:\"\",\r\n    };\r\n    this.newTitleValidate = this.newTitleValidate.bind(this);\r\n    this.Submit = this.Submit.bind(this);\r\n    this.descriptionValidate = this.descriptionValidate.bind(this);\r\n    this.startDateValidate = this.startDateValidate.bind(this);\r\n    this.UploadAttachedFiles = this.UploadAttachedFiles.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.changeLocation = this.changeLocation.bind(this);\r\n    this.volunterBack = this.volunterBack.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n     this.getMimeType = this.getMimeType.bind(this);\r\n    this.downloadAttachmentFile = this.downloadAttachmentFile.bind(this);\r\n    this.cancelUpload = this.cancelUpload.bind(this);\r\n    this.getTruncatedName=this.getTruncatedName.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n    this.ShareLocationCheckboxToggle_SAT = this.ShareLocationCheckboxToggle_SAT.bind(\r\n      this\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      document.body.style = \"background-image: url();\";\r\n      document.body.style = \"background: #F9F9F9\";\r\n      if (sessionStorage.getItem(\"volunterCatgValue\")) {\r\n        var tempObj = {\r\n          value: sessionStorage.getItem(\"volunterCatgValue\"),\r\n          label: sessionStorage.getItem(\"volunterCatglabel\"),\r\n        };\r\n        this.setState({\r\n          SelectedType: tempObj,\r\n          SelectedTypeValidate: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        newTitle: sessionStorage.getItem(\"volunterTitle\"),\r\n        newTitleValidate: true,\r\n        description: sessionStorage.getItem(\"volunterDesc\"),\r\n        descriptionValidate: true,\r\n        start_date: sessionStorage.getItem(\"volunterSdate\"),\r\n        startDateValidate: \"\",\r\n        end_date: sessionStorage.getItem(\"volunterEdate\"),\r\n        endDateValidate: \"\",\r\n        //   address: sessionStorage.getItem(\"volunterEditLocation\"),\r\n      });\r\n      if (sessionStorage.getItem(\"BAV_shareLocationflag\")) {\r\n        this.setState({\r\n          shareLocationflag: sessionStorage.getItem(\"BAV_shareLocationflag\"),\r\n        });\r\n      } else {\r\n        this.setState({\r\n          shareLocationflag: false,\r\n        });\r\n      }\r\n      this.getCategoryList();\r\n      this.getParticularDetails();\r\n    }\r\n    this.state.currentDate = new Date();\r\n  }\r\n\r\n  volunterBack() {\r\n    sessionStorage.removeItem(\"volunterBackEdit\");\r\n    sessionStorage.setItem(\r\n      \"volunterLocation\",\r\n      sessionStorage.getItem(\"currentAddress\")\r\n    );\r\n    sessionStorage.removeItem(\"mapsBack\");\r\n    sessionStorage.removeItem(\"volunterTemplong\");\r\n    sessionStorage.removeItem(\"volunterTemplat\");\r\n    sessionStorage.removeItem(\"volunterTempLocation\");\r\n    sessionStorage.removeItem(\"volunterlong\");\r\n    sessionStorage.removeItem(\"volunterlat\");\r\n\r\n    sessionStorage.removeItem(\"volunterTitle\");\r\n    sessionStorage.removeItem(\"volunterDesc\");\r\n    sessionStorage.removeItem(\"volunterCatgValue\");\r\n    sessionStorage.removeItem(\"volunterCatglabel\");\r\n    sessionStorage.removeItem(\"volunterSdate\");\r\n    sessionStorage.removeItem(\"volunterEdate\");\r\n    sessionStorage.removeItem(\"BAV_shareLocationflag\");\r\n\r\n    sessionStorage.removeItem(\"volunterEditLocation\");\r\n    sessionStorage.removeItem(\"volunterEditTemplong\");\r\n    sessionStorage.removeItem(\"volunterEditTemplat\");\r\n    sessionStorage.removeItem(\"volunterEditTempLocation\");\r\n    sessionStorage.removeItem(\"volunterEditlong\");\r\n    sessionStorage.removeItem(\"volunterEditlat\");\r\n  }\r\n\r\n  ShareLocationCheckboxToggle_SAT = (e) => {\r\n    var temp;\r\n    if (this.state.shareLocationflag == false) {\r\n      this.setState({\r\n        shareLocationflag: true,\r\n      });\r\n      temp=true;\r\n      sessionStorage.setItem(\r\n        \"BAV_shareLocationflag\",\r\n        temp\r\n      );\r\n    } else {\r\n      this.setState({\r\n        shareLocationflag: false,\r\n      });\r\n     // temp=false;\r\n     sessionStorage.removeItem(\"BAV_shareLocationflag\");\r\n    }\r\n    // sessionStorage.setItem(\r\n    //   \"BAV_shareLocationflag\",\r\n    //   temp\r\n    // );\r\n  };\r\n   getMimeType=(file_path)=>{\r\n    const extension = file_path.substr(file_path.lastIndexOf(\"/\") + 1).split('.')[1];\r\n    if(extension=='jpg' || extension=='jpeg'){\r\n      return 'image/jpeg';\r\n    }else if(extension=='png'){\r\n      return 'image/jpeg';\r\n    }else if(extension=='pdf'){\r\n      return 'application/pdf';\r\n    }else if(extension=='doc'){\r\n      return 'application/msword';\r\n    }else if(extension=='docx'){\r\n      return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\r\n    }else if(extension=='xlsx'){\r\n      return 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\r\n    }else if(extension=='xls'){\r\n      return 'application/vnd.ms-excel';\r\n    }else if(extension=='txt'){\r\n      return 'text/plain';\r\n    }else if(extension=='ppt'){\r\n      return 'application/vnd.ms-powerpoint';\r\n    }else if(extension=='pptx'){\r\n      return 'application/vnd.openxmlformats-officedocument.presentationml.presentation';\r\n    }else if(extension=='mp3'){\r\n      return 'audio/mpeg';\r\n    }else if(extension=='mp4'){\r\n      return 'video/mp4';\r\n    }\r\n  }\r\n  getTruncatedName=(attachmentname)=>{\r\n    if(attachmentname.length>25)\r\n    {\r\n      var truncatename= attachmentname.substr(0,10)+'...'+attachmentname.substr(attachmentname.length-8,attachmentname.length-1)\r\n      return truncatename;\r\n    }\r\n    else{\r\n    return(attachmentname);\r\n    }\r\n  }\r\n  downloadAttachmentFile = (AttachmentDetails) => {\r\n     var file_path=\"https://scity.gmmspl.com:3000/\" + AttachmentDetails.media_file_name;\r\n        var extension= file_path.substr(file_path.lastIndexOf(\"/\") + 1).split('.')[1];\r\n        var mime = this.getMimeType(file_path);\r\n        this.setState({progressbarVisible:true})\r\n        axios.get(file_path, {responseType: 'blob',onDownloadProgress: (progressEvent) => {\r\n        this.setState({progress:Math.round((progressEvent.loaded * 100) / progressEvent.total)}) \r\n         \r\n  }}).then((res) => {\r\n           this.setState({progress:0})\r\n           this.setState({progressbarVisible:false})\r\n          if(Capacitor.getPlatform()=='web')\r\n          {\r\n          fileDownload(res.data,'SmartCityActivityAttachment.'+extension);\r\n          }else\r\n          {\r\n            var date = new Date();\r\n           var reader = new FileReader();\r\n            reader.readAsDataURL(res.data);\r\n            reader.onloadend = async function () {\r\n            var base64String = reader.result;\r\n            console.log('Base64 String - ', base64String);\r\n            const savedFile = await Filesystem.writeFile({\r\n              path :'SmartCityActivityAttachment'+Math.floor(date.getTime() + date.getSeconds() / 2) +'.'+extension,\r\n              data : base64String,\r\n              directory : Directory.Documents,\r\n            })\r\n            alert(\"Your file is stored into DOCUMENTS directory of your device\")\r\n            const path =savedFile.uri;   \r\n            const mimeType =mime;\r\n            FileOpener.showOpenWithDialog(path,mimeType).then(()=>console.log('File is opened')).catch(error=>console.log('error while opening File : ',error));\r\n            }\r\n          }\r\n          });     \r\n  };\r\n  getCategoryList() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n      }),\r\n    };\r\n\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/volunteer/getvoluntercategory\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.message === \"Data Found\") {\r\n          const options = this.state.APIResponse.data.map((d) => ({\r\n            value: d.volunteer_cat_id,\r\n            label: d.category_name,\r\n          }));\r\n          this.setState({ CategoryList: options });\r\n        } else {\r\n          toast.error(\"Something went wrong, Please try again\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () =>\r\n              this.props.history.push(\"/collaboration-shareDiscussIdeas\"),\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  getParticularDetails() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        volunteer_id: sessionStorage.getItem(\"VolunteerId\"),\r\n        offset: 3,\r\n        is_admin: false,\r\n      }),\r\n    };\r\n    fetch('https://scity.gmmspl.com:3000/volunteer/volunteerbyid', requestOptions)\r\n        .then(response => response.json())\r\n        .then(\r\n          (data) => {\r\n            this.setState({\r\n              APIResponse: data\r\n            });\r\n            // console.log(\"APIResponse = \", this.state.APIResponse);\r\n            if(this.state.APIResponse.status === true){\r\n              var JsonDate = this.state.APIResponse.data[0];\r\n              this.setState({\r\n                newTitle : JsonDate.title,\r\n                description : sessionStorage.getItem(\"description\")?sessionStorage.getItem(\"description\"):JsonDate.description,\r\n                start_date : sessionStorage.getItem(\"startdatevolunteer\") ? sessionStorage.getItem(\"startdatevolunteer\") : JsonDate.d_start_date,\r\n                end_date : sessionStorage.getItem(\"enddatevolunteer\")?sessionStorage.getItem(\"enddatevolunteer\") :JsonDate.d_end_date,\r\n                shareLocationflag : JsonDate.share_location_flag,\r\n                ACardAttachments : JsonDate.media_files,\r\n                address:JsonDate.address,\r\n                latEdit:JsonDate.latitude,\r\n                longEdit:JsonDate.longitude,\r\n              })\r\n              if(sessionStorage.getItem(\"startdatevolunteer\"))\r\n              {\r\n                sessionStorage.removeItem(\"startdatevolunteer\");\r\n              }\r\n              if(sessionStorage.getItem(\"enddatevolunteer\"))\r\n              {\r\n                sessionStorage.removeItem(\"enddatevolunteer\");\r\n              }\r\n               if(sessionStorage.getItem(\"description\"))\r\n              {\r\n                sessionStorage.removeItem(\"description\");\r\n              }\r\n              if(JsonDate.address) {\r\n                sessionStorage.setItem(\"volunterLocation\", JsonDate.address);  \r\n              }\r\n              \r\n              const temp = {\r\n                \"value\" : JsonDate.volunteer_cat_id,\r\n                \"label\" : JsonDate.volunteer_category_name\r\n              }\r\n              this.setState({SelectedType: temp})              \r\n        }\r\n        // else{\r\n        //   this.setState({\r\n        //     SubmitAlert: true,\r\n        //     dialogBoxStatus: true,\r\n        //   });\r\n        // }\r\n      });\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  onChangeFile(e) {\r\n    let files = e.target.files;\r\n    //  console.log(files);  var test=document.getElementsByClassName(\"file1upload\")[0].attributes[0].nodeValue;\r\n\r\n    var totalSelectedCount =\r\n      e.currentTarget.files.length + this.state.fileName.length;\r\n    if (e.currentTarget.files.length < 4 && totalSelectedCount < 4) {\r\n      for (var i = 0; i < e.currentTarget.files.length; i++) {\r\n        if (e.currentTarget.files[i].size / 1024 / 1024 > 5) {\r\n          this.state.largeFileSize = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (this.state.largeFileSize === false) {\r\n        console.log(this.state.fileName.length);\r\n\r\n        var test = [];\r\n        for (var j = 0; j < this.state.fileName.length; j++) {\r\n          test[j] = this.state.fileName[j];\r\n        }\r\n        for (var i = 0; i < e.currentTarget.files.length; i++) {\r\n          test[j] = e.currentTarget.files[i];\r\n          j++;\r\n        }\r\n        this.setState({ test });\r\n\r\n        this.setState({\r\n          fileName: test,\r\n        });\r\n        // console.log(\"test\",this.state.fileName);\r\n      } else {\r\n        toast.warn(\"The file size should not be greater than 5 MB.\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        \r\n      }\r\n    } else {\r\n      toast.error(\"Only 3 files are allowed to upload.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n\r\n  cancelUpload(num) {\r\n    var array = [...this.state.fileName]; // make a separate copy of the array\r\n    var index = num;\r\n    if (index !== -1) {\r\n      array.splice(index, 1);\r\n      this.setState({ fileName: array });\r\n    }\r\n  }\r\n\r\n  newTitleValidate = (e) => {\r\n    var title = e.target.value;\r\n    if (title != \"\") {\r\n      this.setState({\r\n        newTitle: e.target.value,\r\n        newTitleValidate: true,\r\n      });\r\n      sessionStorage.setItem(\"volunterTitle\", title);\r\n    } else {\r\n      this.setState({\r\n        newTitle: e.target.value,\r\n        newTitleValidate: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  descriptionValidate = (e) => {\r\n    this.setState({\r\n      description: e.target.value,\r\n      descriptionValidate: true,\r\n    });\r\n    sessionStorage.setItem(\"volunterDesc\", e.target.value);\r\n  };\r\n\r\n  startDateValidate = (e) => {\r\n    this.setState({\r\n      start_date: e.target.value,\r\n      startDateValidate: \"\",\r\n    });\r\n    console.log(\"volunterSdate = \", e.target.value);\r\n    sessionStorage.setItem(\"volunterSdate\", e.target.value);\r\n  };\r\n\r\n  endDateValidate = (e) => {\r\n    this.setState({\r\n      end_date: e.target.value,\r\n      endDateValidate: \"\",\r\n    });\r\n    sessionStorage.setItem(\"volunterEdate\", e.target.value);\r\n  };\r\n\r\n  CategoryTypeValidate = (Selected_option) => {\r\n    this.setState({\r\n      SelectedType: Selected_option,\r\n    });\r\n    sessionStorage.setItem(\"volunterCatgValue\", Selected_option.value);\r\n    sessionStorage.setItem(\"volunterCatglabel\", Selected_option.label);\r\n  };\r\n\r\n  UploadAttachedFiles = (e) => {\r\n    if (e.currentTarget.files.length < 4) {\r\n      for (var i = 0; i < e.currentTarget.files.length; i++) {\r\n        console.log(\r\n          \"File size = \",\r\n          e.currentTarget.files[i].size / 1024 / 1024\r\n        );\r\n        if (e.currentTarget.files[i].size / 1024 / 1024 > 5) {\r\n          this.state.largeFileSize = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (this.state.largeFileSize === false) {\r\n        this.setState({\r\n          file_upload1: e.currentTarget.files[0],\r\n          file_upload2: e.currentTarget.files[1],\r\n          file_upload3: e.currentTarget.files[2],\r\n        });\r\n        toast.success(\"File Successfully Uploaded\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n      } else {\r\n        toast.warn(\"The file size should not be greater than 5 MB.\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n      }\r\n    } else {\r\n      toast.error(\"Only 3 files are allowed to upload.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      largeFileSize: false,\r\n      tooManyFiles: false,\r\n      dialogBoxStatus: false,\r\n    });\r\n  }\r\n\r\n  Submit() {\r\n    // console.log(\"Title = \", this.state.newTitle);\r\n    // console.log(\"Description = \", );\r\n    // console.log(\"start_date = \", this.state.start_date);\r\n    // console.log(\"end_date = \", );\r\n    // console.log(\"SelectedType = \", );\r\n    // console.log(\"this.state.file_upload1 = \", this.state.file_upload1);\r\n    // console.log(\"this.state.file_upload2 = \", this.state.file_upload2);\r\n    // console.log(\"this.state.file_upload3 = \", this.state.file_upload3);\r\n\r\n    if (\r\n      this.state.newTitle != \"\" &&\r\n      this.state.newTitle != null &&\r\n      this.state.newTitle != undefined\r\n    ) {\r\n      let formData = new FormData();\r\n      formData.append(\"token\", sessionStorage.getItem(\"token\"));\r\n      formData.append(\"user_id\", sessionStorage.getItem(\"user_id\"));\r\n      // formData.append('category',this.state.SelectedType.value);\r\n      // formData.append('title', this.state.newTitle);\r\n      formData.append(\r\n        \"volunteer_id\",\r\n        sessionStorage.getItem(\"VolunteerId\")\r\n      );\r\n      formData.append(\"start_date\", this.state.start_date);\r\n      formData.append(\"end_date\", this.state.end_date);\r\n\r\n      formData.append(\"share_location_flag\", ((sessionStorage.getItem(\"BAV_shareLocationflag\"))?sessionStorage.getItem(\"BAV_shareLocationflag\"):this.state.shareLocationflag));\r\n      \r\n      \r\n      if (\r\n        this.state.description == null ||\r\n        this.state.description == undefined ||\r\n        this.state.description == \"null\"\r\n      ) {\r\n        formData.append(\"description\", \" \");\r\n      } else {\r\n        formData.append(\"description\", this.state.description);\r\n      }\r\n\r\n      // for(var i=1;i<=this.state.fileName.length;i++)\r\n      // {\r\n      //   formData.append('file'+i,this.state.fileName[i-1])\r\n      // }\r\n\r\n      if (sessionStorage.getItem(\"volunterEditlong\")) {\r\n        formData.append(\r\n          \"longitude\",\r\n          sessionStorage.getItem(\"volunterEditlong\")\r\n        );\r\n        formData.append(\"latitude\", sessionStorage.getItem(\"volunterEditlat\"));\r\n        formData.append(\r\n          \"address\",\r\n          sessionStorage.getItem(\"volunterEditLocation\")\r\n        );\r\n      } else {\r\n        if(this.state.shareLocationflag){\r\n          formData.append(\"longitude\",this.state.longEdit);\r\n          formData.append(\"latitude\", this.state.latEdit);\r\n          formData.append(\"address\",this.state.address);\r\n        }\r\n        else{\r\n        formData.append(\r\n          \"longitude\",\r\n          sessionStorage.getItem(\"currentLongitude\")\r\n        );\r\n        formData.append(\"latitude\", sessionStorage.getItem(\"currentLatitude\"));\r\n        formData.append(\"address\", sessionStorage.getItem(\"currentAddress\"));\r\n      }\r\n      }\r\n\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        body: formData,\r\n      };\r\n      fetch(\r\n        \"https://scity.gmmspl.com:3000/volunteer/updatevolunteerInfo\",\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          // console.log(\"APIResponse = \", this.state.APIResponse);\r\n          if (this.state.APIResponse.message === \"Volunteer update\") {\r\n            toast.success(\"Volunteer activity updated successfully.\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              onClose: () =>\r\n                this.props.history.push(\"/collaboration-becomeAVolunteer\"),\r\n            });\r\n            sessionStorage.removeItem(\"volunterBackEdit\");\r\n            sessionStorage.setItem(\r\n              \"volunterLocation\",\r\n              sessionStorage.getItem(\"currentAddress\")\r\n            );\r\n            sessionStorage.removeItem(\"mapsBack\");\r\n            sessionStorage.removeItem(\"volunterTemplong\");\r\n            sessionStorage.removeItem(\"volunterTemplat\");\r\n            sessionStorage.removeItem(\"volunterTempLocation\");\r\n            sessionStorage.removeItem(\"volunterlong\");\r\n            sessionStorage.removeItem(\"volunterlat\");\r\n            sessionStorage.removeItem(\"volunterTitle\");\r\n            sessionStorage.removeItem(\"volunterDesc\");\r\n            sessionStorage.removeItem(\"volunterCatgValue\");\r\n            sessionStorage.removeItem(\"volunterCatglabel\");\r\n            sessionStorage.removeItem(\"volunterSdate\");\r\n            sessionStorage.removeItem(\"volunterEdate\");\r\n            sessionStorage.removeItem(\"BAV_shareLocationflag\");\r\n            sessionStorage.removeItem(\"volunterEditLocation\");\r\n            sessionStorage.removeItem(\"volunterEditTemplong\");\r\n            sessionStorage.removeItem(\"volunterEditTemplat\");\r\n            sessionStorage.removeItem(\"volunterEditTempLocation\");\r\n            sessionStorage.removeItem(\"volunterEditlong\");\r\n            sessionStorage.removeItem(\"volunterEditlat\");\r\n            sessionStorage.removeItem(\"volunterEditBack\");\r\n          }else if(this.state.APIResponse.message === \"start_date cannot be less than current_date\"){\r\n             toast.error(\r\n              \"start_date cannot be less than current_date\",\r\n              {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              }\r\n            );\r\n          }else if(this.state.APIResponse.message === \"start_date cannot be greater than end_date\"){\r\n             toast.error(\r\n              \"start_date cannot be greater than end_date\",\r\n              {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              }\r\n            );\r\n          }else if (this.state.APIResponse.message==='Please select category') {\r\n            toast.error(\"Please select category\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n          } else {\r\n            toast.error(\r\n              \"Activity is not added, something went wrong. Please try again\",\r\n              {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              }\r\n            );\r\n          }\r\n        });\r\n    } else {\r\n      toast.error(\"Please fill the fields.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n\r\n  BackButton() {\r\n    this.props.history.push(\"/collaboration-becomeAVolunteer\");\r\n  }\r\n\r\n  changeLocation() {\r\n    sessionStorage.setItem(\"volunterEditBack\",\"CollaborationBAVEditVolunteer\");\r\n    sessionStorage.setItem(\"startdatevolunteer\",this.state.start_date);\r\n    sessionStorage.setItem(\"enddatevolunteer\",this.state.end_date);\r\n    sessionStorage.setItem(\"description\",this.state.description);  \r\n    console.log(\"start date volunteer \",sessionStorage.getItem(\"startdatevolunteer\"));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              <Link\r\n                onClick={this.volunterBack}\r\n                to=\"/collaboration-becomeAVolunteer\"\r\n              >\r\n                <Tooltip\r\n                  title=\"Dashboard\"\r\n                  placement=\"top\"\r\n                  TransitionProps={{ timeout: 600 }}\r\n                >\r\n                  <MDBIcon\r\n                    icon=\"chevron-circle-left\"\r\n                    size=\"2x\"\r\n                    className=\"back-arrow-icon\"\r\n                  />\r\n                </Tooltip>\r\n              </Link>\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">\r\n                Edit A Volunteer Activity\r\n              </label>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n            {this.state.progressbarVisible && <Row>\r\n           <div style={{height:15,backgroundColor:'rgba(0,0,0,0.2)',width:this.state.progress+'%',color:'white',fontWeight:'600',fontSize:12,textAlign:'center',borderRadius:5}}>\r\n              {this.state.progress==0 ? '' : this.state.progress+'%'}\r\n            </div>\r\n            </Row>}\r\n        </Container>\r\n\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            <div class=\"details-container-style inner-container-style-collaboration\">\r\n              <Row className=\"m-3\">\r\n                <Col\r\n                  xs=\"12\"\r\n                  sm=\"12\"\r\n                  md=\"12\"\r\n                  lg=\"12\"\r\n                  xl=\"12\"\r\n                  xxl=\"12\"\r\n                  className=\"become-volunter-banners banner-submenu-style\"\r\n                >\r\n                  <Row>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                      <Row className=\"become-a-volunteer-banner-text\">\r\n                        Share details of your initiative with supporting media\r\n                        and location to involve other citizens.\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Container className=\"\">\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <TextField\r\n                      id=\"standard-required\"\r\n                      label=\"Title\"\r\n                      onInput={(e) =>\r\n                        (e.target.value = e.target.value.slice(0, 250))\r\n                      }\r\n                      value={this.state.newTitle}\r\n                      onChange={this.newTitleValidate}\r\n                      required\r\n                      disabled\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-4\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <TextField\r\n                      id=\"date\"\r\n                      label={\r\n                        <label>\r\n                          Start Date<span class=\"select-astric-red\"> *</span>\r\n                        </label>\r\n                      }\r\n                      type=\"date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.startDateValidate}\r\n                      defaultValue={new Date()}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      InputProps={{\r\n                        inputProps: { min: this.state.currentDate },\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-4\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <TextField\r\n                      id=\"date\"\r\n                      label={\r\n                        <label>\r\n                          End Date<span class=\"select-astric-red\"> *</span>\r\n                        </label>\r\n                      }\r\n                      type=\"date\"\r\n                      defaultValue={new Date()}\r\n                      value={this.state.end_date}\r\n                      onChange={this.endDateValidate}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      InputProps={{\r\n                        inputProps: { min: this.state.start_date },\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <Select\r\n                      // placeholder=\" \"\r\n                      placeholder={\r\n                        <label>\r\n                          Select Category\r\n                          <span class=\"select-astric-red\"> *</span>\r\n                        </label>\r\n                      }\r\n                      options={this.state.CategoryList}\r\n                      isSearchable={false}\r\n                      className=\"category-drop-style\"\r\n                      value={this.state.SelectedType}\r\n                      onChange={this.CategoryTypeValidate}\r\n                      maxMenuHeight={170}\r\n                      isDisabled=\"true\"\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pt-4\"\r\n                  >\r\n                    <TextField\r\n                      id=\"outlined-textarea\"\r\n                      label=\"Describe your Activity here...\"\r\n                      onInput={(e) =>\r\n                        (e.target.value = e.target.value.slice(0, 500))\r\n                      }\r\n                      multiline\r\n                      //variant=\"outlined\"\r\n                      rows={3}\r\n                      className=\"start-new-idea-description-box\"\r\n                      value={this.state.description}\r\n                      onChange={this.descriptionValidate}\r\n                    />\r\n                    <label class=\"max-char-count-text-display\">\r\n                      Max 500 characters\r\n                    </label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-2\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <Row className=\"\">\r\n                      <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                      {console.log(\"location\",this.state.shareLocationflag)}\r\n                        <Checkbox\r\n                          checked={sessionStorage.getItem(\"BAV_shareLocationflag\") || this.state.shareLocationflag}\r\n                          size=\"small\"\r\n                          className=\"login-checkbox-style\"\r\n                          inputProps={{\r\n                            \"aria-label\": \"checkbox with default color\",\r\n                          }}\r\n                          onChange={this.ShareLocationCheckboxToggle_SAT}\r\n                        />\r\n                        <label class=\"keep-me-log-in-style\">\r\n                          Share my Location\r\n                        </label>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <div>\r\n                  {(sessionStorage.getItem(\"BAV_shareLocationflag\") || this.state.shareLocationflag ) && (\r\n                    <Row>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                      <Col\r\n                        xs=\"12\"\r\n                        sm=\"12\"\r\n                        md=\"10\"\r\n                        lg=\"10\"\r\n                        xl=\"10\"\r\n                        xxl=\"10\"\r\n                        className=\"pt-4\"\r\n                      >\r\n                        <Row>\r\n                          <Col\r\n                            xs=\"7\"\r\n                            sm=\"7\"\r\n                            md=\"7\"\r\n                            lg=\"7\"\r\n                            xl=\"7\"\r\n                            xxl=\"7\"\r\n                            className=\"geolocation-font-style\"\r\n                          >\r\n                            <label>\r\n                              {sessionStorage.getItem(\"volunterEditLocation\")\r\n                                ? sessionStorage.getItem(\"volunterEditLocation\")\r\n                                : this.state.address}\r\n                            </label>\r\n                          </Col>\r\n                          <Col\r\n                            xs=\"5\"\r\n                            sm=\"5\"\r\n                            md=\"5\"\r\n                            lg=\"5\"\r\n                            xl=\"5\"\r\n                            xxl=\"5\"\r\n                            className=\"text-align-right pl-0\"\r\n                          >\r\n                            <Link\r\n                              className=\"geolocation-button-style\"\r\n                              onClick={this.changeLocation}\r\n                              to=\"/Maps\"\r\n                            >\r\n                              <MDBIcon icon=\"map-marker-alt\" />\r\n                              <label class=\"geolocation-button-font-style\">\r\n                                Change Location\r\n                              </label>\r\n                            </Link>\r\n                          </Col>\r\n                        </Row>\r\n                        <hr className=\"bold-hr\"></hr>\r\n                      </Col>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                    </Row>\r\n                  )}\r\n                </div>\r\n\r\n                <Row className=\"card-details-title-row-style attachment-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    {this.state.ACardAttachments.map((Attachment) => (\r\n                      <Row className=\"pt-1 pb-1\" id=\"downloadFile\">\r\n                        <Button\r\n                        color=\"transparent\"\r\n                         onClick={()=>{this.downloadAttachmentFile(Attachment)}} \r\n                        >\r\n                          <Col\r\n                            xs=\"2\"\r\n                            sm=\"2\"\r\n                            md=\"1\"\r\n                            lg=\"1\"\r\n                            xl=\"1\"\r\n                            xxl=\"1\"\r\n                            className=\"pl-3\"\r\n                          >\r\n                            {(Attachment.media_file_name\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"png\" ||\r\n                              Attachment.media_file_name\r\n                                .split(\"/\")\r\n                                .pop()\r\n                                .split(\".\")\r\n                                .pop() == \"jpg\" ||\r\n                              Attachment.media_file_name\r\n                                .split(\"/\")\r\n                                .pop()\r\n                                .split(\".\")\r\n                                .pop() == \"jpeg\") && (\r\n                              <MDBIcon\r\n                                far\r\n                                icon=\"image\"\r\n                                size=\"lg\"\r\n                                className=\"image-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {Attachment.media_file_name\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"pdf\" && (\r\n                              <MDBIcon\r\n                                icon=\"file-pdf\"\r\n                                size=\"lg\"\r\n                                className=\"doc-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {(Attachment.media_file_name\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"doc\" ||\r\n                              Attachment.media_file_name\r\n                                .split(\"/\")\r\n                                .pop()\r\n                                .split(\".\")\r\n                                .pop() == \"docx\") && (\r\n                              <MDBIcon\r\n                                icon=\"file-word\"\r\n                                size=\"lg\"\r\n                                className=\"word-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {Attachment.media_file_name\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"xlsx\" && (\r\n                              <MDBIcon\r\n                                icon=\"file-excel\"\r\n                                size=\"lg\"\r\n                                className=\"xlsx-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {Attachment.media_file_name\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"txt\" && (\r\n                              <MDBIcon\r\n                                icon=\"file-alt\"\r\n                                size=\"lg\"\r\n                                className=\"txt-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {(Attachment.media_file_name\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"mp3\" ||\r\n                              Attachment.media_file_name\r\n                                .split(\"/\")\r\n                                .pop()\r\n                                .split(\".\")\r\n                                .pop() == \"mp4\") && (\r\n                              <MDBIcon\r\n                                icon=\"video\"\r\n                                size=\"lg\"\r\n                                className=\"media-file-icon-style\"\r\n                              />\r\n                            )}\r\n                             {Attachment.media_file_name\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"csv\" && (\r\n                              <FontAwesomeIcon\r\n                                icon={faFileCsv}\r\n                                color=\"green\"\r\n                                size=\"lg\">\r\n                                </FontAwesomeIcon>\r\n                            )}\r\n                            {(Attachment.media_file_name\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"ppt\" ||\r\n                              Attachment.media_file_name\r\n                                .split(\"/\")\r\n                                .pop()\r\n                                .split(\".\")\r\n                                .pop() == \"pptx\") && (\r\n                              <MDBIcon\r\n                                icon=\"file-powerpoint\"\r\n                                size=\"lg\"\r\n                                className=\"ppt-file-icon-style\"\r\n                              />\r\n                            )}\r\n                          </Col>\r\n                          <Col xs=\"10\" sm=\"10\" md=\"11\" lg=\"11\" xl=\"11\" xxl=\"11\">\r\n                            <label>\r\n                              {this.getTruncatedName(Attachment.media_file_name.split(\"/\").pop())}\r\n                            </label>\r\n                          </Col>\r\n                        </Button>\r\n                      </Row>\r\n                    ))}\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-4 pb-5\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"5\" lg=\"5\" xl=\"5\" xxl=\"5\">\r\n                    <Button\r\n                      className=\"login-button-style\"\r\n                      onClick={this.Submit}\r\n                    >\r\n                      SUBMIT\r\n                    </Button>\r\n                  </Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"5\" lg=\"5\" xl=\"5\" xxl=\"5\">\r\n                    <Link\r\n                      onClick={this.volunterBack}\r\n                      to=\"/collaboration-becomeAVolunteer\"\r\n                    >\r\n                      <Button className=\"skip-button-style\">CANCEL</Button>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"10\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n              </Container>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        <Footer />\r\n        {/* <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover={false}\r\n                className=\"toaster-style\"\r\n                /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CollaborationBAVEditVolunteer;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Complaint_Management\\Search-Complaint\\Search-Complaint.js",["973","974","975","976","977","978","979","980","981","982"],"import React, { Component } from \"react\";\r\nimport Header from \"../../Dashboard-header\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Link } from \"react-router-dom\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport ComplaintDetails from \"../../../jsonFiles/CollaborationJson/complaintDetails\";\r\nimport Select from \"react-select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./Search-Complaint.css\";\r\nimport Footer from \"../../Footer\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport CollaborationsHeadings from \"../../../jsonFiles/CollaborationJson/complaintDetails\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport footer_data from \"../../../jsonFiles/DashboardInfoJson/DashboardFooter\";\r\n\r\nclass SearchComplaint extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      SelectedType: null,\r\n      SelectedTypeValidate: false,\r\n      complaintId: null,\r\n      complaintIdValidate: false,\r\n      complaintStatusValue: null,\r\n      complaintStatusValidate: false,\r\n      APIResponse: \"\",\r\n      APIResponseForStatus: \"\",\r\n      SubmitAlert: false,\r\n      dialogBoxStatus: false,\r\n      StatusData: \"\",\r\n      CategoryList: \"\",\r\n      StatusList: \"\",\r\n      isOpen: false,\r\n      submit: false,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      eventTarget: \"\",\r\n      footer: footer_data.paths,\r\n      isLogin: \"\",\r\n    };\r\n    this.Submit = this.Submit.bind(this);\r\n    this.complaintIdValidate = this.complaintIdValidate.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      document.body.style = \"background-image: url();\";\r\n      document.body.style = \"background: #F9F9F9\";\r\n\r\n      this.getCategoryList();\r\n      this.getComplaintStatusList();\r\n    }\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  CategoryTypeValidate = (Selected_option) => {\r\n    this.setState({\r\n      SelectedType: Selected_option,\r\n      SelectedTypeValidate: true,\r\n    });\r\n  };\r\n\r\n  complaintIdValidate = (e) => {\r\n    var title = e.target.value;\r\n    this.setState({\r\n      complaintId: e.target.value,\r\n      complaintIdValidate: true,\r\n    });\r\n  };\r\n\r\n  StatusTypeValidate = (Selected_option) => {\r\n    this.setState({\r\n      complaintStatusValue: Selected_option,\r\n      complaintStatusValidate: true,\r\n    });\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      SubmitAlert: false,\r\n      dialogBoxStatus: false,\r\n    });\r\n  }\r\n\r\n  getComplaintStatusList() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n      }),\r\n    };\r\n\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/complaint/getComplaintStatus\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.message === \"Data Found Successfully\") {\r\n          const options = this.state.APIResponse.data.map((d) => ({\r\n            value: d.value,\r\n            label: d.label,\r\n          }));\r\n          this.setState({ StatusList: options });\r\n        } else {\r\n          toast.error(\"Something went wrong, Please try again\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () =>\r\n              this.props.history.push(\"/dashboard-complaintManagement\"),\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  getCategoryList() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n      }),\r\n    };\r\n\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/complaint/complaintcategory\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.message === \"Data Found Sucessfully\") {\r\n          const options = this.state.APIResponse.data.map((d) => ({\r\n            value: d.complaint_cat_id,\r\n            label: d.category_name,\r\n          }));\r\n          this.setState({ CategoryList: options });\r\n        } else {\r\n          toast.error(\"Something went wrong, Please try again\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () =>\r\n              this.props.history.push(\"/dashboard-complaintManagement\"),\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  Submit() {\r\n    // console.log(\"SelectedType = \", this.state.SelectedType);\r\n    // console.log(\"complaintId = \", this.state.complaintId);\r\n    // console.log(\"complaintStatusValue = \", this.state.complaintStatusValue);\r\n\r\n    var SelectedType_SAT = null;\r\n    if (this.state.SelectedType !== null && this.state.SelectedType !== \"\") {\r\n      SelectedType_SAT = this.state.SelectedType.value;\r\n    }\r\n\r\n    var complaintId_SAT = null;\r\n    if (this.state.complaintId !== null && this.state.complaintId !== \"\") {\r\n      complaintId_SAT = this.state.complaintId;\r\n    }\r\n\r\n    var complaintStatusValue_SAT = null;\r\n    if (\r\n      this.state.complaintStatusValue !== null &&\r\n      this.state.complaintStatusValue !== \"\"\r\n    ) {\r\n      complaintStatusValue_SAT = this.state.complaintStatusValue.value;\r\n    }\r\n\r\n    // console.log(\"SelectedType = \", SelectedType_SAT);\r\n    // console.log(\"complaintId = \", complaintId_SAT);\r\n    // console.log(\"complaintStatusValue = \", complaintId_SAT);\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        complaint_cat_id: SelectedType_SAT,\r\n        complaint_status_id: complaintStatusValue_SAT,\r\n        thread_id: complaintId_SAT,\r\n      }),\r\n    };\r\n\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/complaint/searchComplaint\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.message === \"Data Found\") {\r\n          //   this.setState({\r\n          //     successfullyLogComplaint: true,\r\n          //     dialogBoxStatus: true,\r\n          //   });\r\n          sessionStorage.setItem(\"complaint_cat_id\", SelectedType_SAT);\r\n          sessionStorage.setItem(\r\n            \"complaint_status_id\",\r\n            complaintStatusValue_SAT\r\n          );\r\n          sessionStorage.setItem(\"thread_id\", complaintId_SAT);\r\n          sessionStorage.setItem(\"complaint_back\", \"search-complaint\");\r\n          this.props.history.push(\"/my-complaints\");\r\n        } else {\r\n          toast.warn(\"No complaints available with entered details\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <Header /> */}\r\n        {/* <Container className=\"all-header-space\"></Container> */}\r\n\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              <Link to=\"/dashboard-complaintManagement\">\r\n                <Tooltip\r\n                  title=\"Dashboard\"\r\n                  placement=\"top\"\r\n                  TransitionProps={{ timeout: 600 }}\r\n                >\r\n                  <MDBIcon\r\n                    icon=\"chevron-circle-left\"\r\n                    size=\"2x\"\r\n                    className=\"back-arrow-icon\"\r\n                  />\r\n                </Tooltip>\r\n              </Link>\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">\r\n                {ComplaintDetails.Complaint_Search_HEADING}\r\n              </label>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            {/* <Row className=\"pt-1 pb-1\">\r\n              <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"1\" xl=\"1\" xxl=\"1\" className=\"back-arrow-icon-style pl-4\">\r\n                <Link to = \"/dashboard-complaintManagement\">\r\n                  <MDBIcon icon=\"arrow-circle-left\" size=\"2x\" className=\"back-arrow-icon\"/>\r\n                </Link>\r\n              </Col>\r\n              <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"11\" xl=\"11\" xxl=\"11\" className=\"pr-4 start-new-Idea-heading\">\r\n                {ComplaintDetails.Complaint_Search_HEADING}\r\n              </Col>\r\n            </Row> */}\r\n\r\n            <div class=\"details-container-style inner-container-style-collaboration\">\r\n              <Row className=\"ml-3 mt-3 mr-3\">\r\n                <Col\r\n                  xs=\"12\"\r\n                  sm=\"12\"\r\n                  md=\"12\"\r\n                  lg=\"12\"\r\n                  xl=\"12\"\r\n                  xxl=\"12\"\r\n                  className=\"search-complaint-banners banner-submenu-style\"\r\n                >\r\n                  <Row>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                      <Row className=\"search-complaint-banner-text\">\r\n                        Filter the search for your complaints.\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Container className=\"pl-4 pb-2 pr-4\">\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pt-4\"\r\n                  >\r\n                    <Select\r\n                      placeholder=\"Select Category\"\r\n                      maxMenuHeight={200}\r\n                      options={this.state.CategoryList}\r\n                      isSearchable={false}\r\n                      className=\"category-drop-style-search\"\r\n                      value={this.state.SelectedType}\r\n                      onChange={this.CategoryTypeValidate}\r\n                      menuPlacement=\"top\"\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pb-3\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pt-3\"\r\n                  >\r\n                    <TextField\r\n                      id=\"standard-required\"\r\n                      label=\"Complaint ID\"\r\n                      value={this.state.complaintId}\r\n                      onChange={this.complaintIdValidate}\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-2\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pt-1\"\r\n                  >\r\n                    <Select\r\n                      placeholder=\"Select Status\"\r\n                      options={this.state.StatusList}\r\n                      isSearchable={false}\r\n                      className=\"category-drop-style-search \"\r\n                      value={this.state.complaintStatusValue}\r\n                      onChange={this.StatusTypeValidate}\r\n                      menuPlacement=\"top\"\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-3\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pt-4\"\r\n                  >\r\n                    <Button\r\n                      className=\"login-button-style\"\r\n                      type=\"submit\"\r\n                      onClick={this.Submit}\r\n                    >\r\n                      SUBMIT\r\n                    </Button>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n              </Container>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchComplaint;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Complaint_Management\\My-Complaint-Status\\My-Complaint-Status.js",["983","984","985","986","987","988","989","990","991","992","993"],"import React, { Component } from \"react\";\r\nimport Header from \"../../Dashboard-header\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Link } from \"react-router-dom\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport ComplaintDetails from \"../../../jsonFiles/CollaborationJson/complaintDetails\";\r\nimport Select from \"react-select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"./My-Complaint-Status.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport CallMadeIcon from \"@material-ui/icons/CallMade\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\r\nimport Footer from \"../../Footer\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\n// import Button from '@material-ui/core/Button';\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nclass MyComplaintStatus extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      APIResponse: \"\",\r\n      CardsData: \"\",\r\n      complaintId: null,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      eventTarget: \"\",\r\n      // footer: footer_data.paths,\r\n      isLogin: \"\",\r\n    };\r\n    this.statusClickFunc = this.statusClickFunc.bind(this);\r\n    this.complaintIdValidate = this.complaintIdValidate.bind(this);\r\n    this.submit = this.submit.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      document.body.style = \"background-image: url();\";\r\n      document.body.style = \"background: #F9F9F9\";\r\n      this.getComplaintStatus();\r\n    }\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  complaintIdValidate = (e) => {\r\n    var title = e.target.value;\r\n    this.setState({\r\n      complaintId: e.target.value,\r\n    });\r\n  };\r\n\r\n  submit = () => {\r\n    //var complaintId_SAT = null;\r\n    if (this.state.complaintId !== null && this.state.complaintId !== \"\") {\r\n      var complaintId_SAT = this.state.complaintId;\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          user_id: sessionStorage.getItem(\"user_id\"),\r\n          token: sessionStorage.getItem(\"token\"),\r\n          complaint_cat_id: null,\r\n          complaint_status_id: null,\r\n          thread_id: complaintId_SAT,\r\n        }),\r\n      };\r\n\r\n      fetch(\r\n        \"https://scity.gmmspl.com:3000/complaint/searchComplaint\",\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          if (this.state.APIResponse.message === \"Data Found\") {\r\n            sessionStorage.setItem(\"thread_id\", complaintId_SAT);\r\n            this.props.history.push(\"/my-complaints\");\r\n          } else {\r\n            toast.warn(\"Data is not available\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  statusClickFunc = (params) => {\r\n    // console.log('you need params from Card', params);\r\n    var complaintId_SAT = null;\r\n    if (this.state.complaintId !== null && this.state.complaintId !== \"\") {\r\n      complaintId_SAT = this.state.complaintId;\r\n    }\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        complaint_cat_id: null,\r\n        complaint_status_id: params,\r\n        thread_id: complaintId_SAT,\r\n      }),\r\n    };\r\n\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/complaint/searchComplaint\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.message === \"Data Found\") {\r\n          sessionStorage.setItem(\"complaint_status_id\", params);\r\n          // var test=window.location.href;\r\n          sessionStorage.setItem(\"complaint_back\", \"complaintStatus\");\r\n\r\n          this.props.history.push(\"/my-complaints\");\r\n        } else {\r\n          toast.warn(\"Data is not available\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  getComplaintStatus() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n      }),\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/complaint/myComplaintStatus\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.status === true) {\r\n          var JsonDate = this.state.APIResponse.data[0];\r\n          this.setState({\r\n            CardsData: JsonDate,\r\n          });\r\n        }\r\n        // else{\r\n        //   this.setState({\r\n        //     SubmitAlert: true,\r\n        //     dialogBoxStatus: true,\r\n        //   });\r\n        // }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const ComplaintType = [\r\n      { label: \"Unauthorized Hoardings\", value: 1 },\r\n      { label: \"Road repair/Potholes issues\", value: 2 },\r\n      { label: \"Drainage and sewage issues\", value: 3 },\r\n      { label: \"Street light issues\", value: 4 },\r\n      { label: \"Garbage lifting/Area cleaning\", value: 5 },\r\n      { label: \"Water supply issues\", value: 6 },\r\n      { label: \"Property tax related issues\", value: 7 },\r\n      { label: \"Tress/Garden related issues\", value: 8 },\r\n      { label: \"Illegal construction\", value: 9 },\r\n      { label: \"Animal issues\", value: 10 },\r\n    ];\r\n    return (\r\n      <div>\r\n        {/* <Header /> */}\r\n        {/* <Container className=\"inner-header-space\"></Container> */}\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              <Link to={ComplaintDetails.Complaint_NavigateTo_COMPLAINTS}>\r\n                <Tooltip\r\n                  title=\"Dashboard\"\r\n                  placement=\"top\"\r\n                  TransitionProps={{ timeout: 600 }}\r\n                >\r\n                  <MDBIcon\r\n                    icon=\"chevron-circle-left\"\r\n                    size=\"2x\"\r\n                    className=\"back-arrow-icon\"\r\n                  />\r\n                </Tooltip>\r\n              </Link>\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">\r\n                {ComplaintDetails.Complaint_Status_HEADING}\r\n              </label>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            <Row className=\"search-bar-allignemt-style\">\r\n              <Col xs=\"1\" sm=\"1\" md=\"4\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n              <Col\r\n                xs=\"10\"\r\n                sm=\"10\"\r\n                md=\"8\"\r\n                lg=\"6\"\r\n                xl=\"6\"\r\n                xxl=\"6\"\r\n                className=\"small-screen-padding\"\r\n              >\r\n                <TextField\r\n                  value={this.state.complaintId}\r\n                  onChange={this.complaintIdValidate}\r\n                  placeholder=\"Complaint ID\"\r\n                  className=\"serach-bar-style\"\r\n                  id=\"outlined-search\"\r\n                  type=\"search\"\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton>\r\n                          <MDBIcon\r\n                            icon=\"search\"\r\n                            className=\"search-bar-icon-style\"\r\n                            onClick={() => this.submit()}\r\n                          />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col xs=\"1\" sm=\"1\" md=\"0\" lg=\"0\" xl=\"0\" xxl=\"0\"></Col>\r\n            </Row>\r\n\r\n            <Row className=\"mt-3 ml-3 mr-3\">\r\n              <Col\r\n                xs=\"12\"\r\n                sm=\"12\"\r\n                md=\"12\"\r\n                lg=\"12\"\r\n                xl=\"12\"\r\n                xxl=\"12\"\r\n                className=\"complaintStatus-banners banner-submenu-style\"\r\n              >\r\n                <Row>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                    {/* <Row className=\"pl-3 pt-4 collaboration-banner-text\">Complaint</Row>\r\n                    <Row className=\"pl-3 collaboration-banner-text2\">Status</Row> */}\r\n                    <Row className=\"pl-3 pt-5 collaboration-banner-text3\">\r\n                      View status report of your complaints\r\n                    </Row>\r\n                    <Row className=\"start-new-idea-btn-allignment\"></Row>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            <Container className=\"tab-card-container-style\">\r\n              {/* <hr ></hr> */}\r\n              <div className=\"statusList\">\r\n                {/* <Row className=\"mb-3 mt-3\">\r\n            <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" className=\"pt-1\">\r\n              <TextField id=\"standard-required\" label=\"Complaint Number\" value={this.state.complaintId} onChange={this.complaintIdValidate}/>\r\n            </Col>\r\n            <Col className=\"pt-3 pl-0\">\r\n            <i class=\"fas fa-search search-icon\" aria-hidden=\"true\" onClick={() => this.submit()}></i>\r\n              </Col>\r\n          </Row> */}\r\n                <Row\r\n                  className=\"mb-3 mt-3 card-style\"\r\n                  onClick={() => this.statusClickFunc()}\r\n                >\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" className=\"pr-0\">\r\n                    <PlaylistAddIcon className=\"icon-style total-style\" />\r\n                  </Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" className=\"pt-2 pl-3\">\r\n                    <label className=\"statusLabel\">Total</label>\r\n                  </Col>\r\n                  <Col\r\n                    xs=\"4\"\r\n                    sm=\"4\"\r\n                    md=\"4\"\r\n                    lg=\"4\"\r\n                    xl=\"4\"\r\n                    className=\"pt-2 numberCol\"\r\n                  >\r\n                    <label>{this.state.CardsData.total}</label>\r\n                  </Col>\r\n                </Row>\r\n                <Row\r\n                  className=\"mb-3 mt-3 card-style\"\r\n                  onClick={() => this.statusClickFunc(1)}\r\n                >\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" className=\"pr-0\">\r\n                    <DraftsIcon className=\"icon-style open-style\" />\r\n                  </Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" className=\"pt-2 pl-3\">\r\n                    <label className=\"statusLabel\">Open</label>\r\n                  </Col>\r\n                  <Col\r\n                    xs=\"4\"\r\n                    sm=\"4\"\r\n                    md=\"4\"\r\n                    lg=\"4\"\r\n                    xl=\"4\"\r\n                    className=\"pt-2 numberCol\"\r\n                  >\r\n                    <label>{this.state.CardsData.open}</label>\r\n                  </Col>\r\n                </Row>\r\n                <Row\r\n                  className=\"mb-3 mt-3 card-style\"\r\n                  onClick={() => this.statusClickFunc(2)}\r\n                >\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" className=\"pr-0\">\r\n                    <CallMadeIcon className=\"icon-style inprogress-style\" />\r\n                  </Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" className=\"pt-2 pl-3\">\r\n                    <label className=\"statusLabel\">Inprogress</label>\r\n                  </Col>\r\n                  <Col\r\n                    xs=\"4\"\r\n                    sm=\"4\"\r\n                    md=\"4\"\r\n                    lg=\"4\"\r\n                    xl=\"4\"\r\n                    className=\"pt-2 numberCol\"\r\n                  >\r\n                    <label>{this.state.CardsData.in_progress}</label>\r\n                  </Col>\r\n                </Row>\r\n                <Row\r\n                  className=\"mb-3 mt-3 card-style\"\r\n                  onClick={() => this.statusClickFunc(4)}\r\n                >\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" className=\"pr-0\">\r\n                    <CancelIcon className=\"icon-style rejected-style\" />\r\n                  </Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" className=\"pt-2 pl-3\">\r\n                    <label className=\"statusLabel\">Rejected</label>\r\n                  </Col>\r\n                  <Col\r\n                    xs=\"4\"\r\n                    sm=\"4\"\r\n                    md=\"4\"\r\n                    lg=\"4\"\r\n                    xl=\"4\"\r\n                    className=\"pt-2 numberCol\"\r\n                  >\r\n                    <label>{this.state.CardsData.rejected}</label>\r\n                  </Col>\r\n                </Row>\r\n                <Row\r\n                  className=\"mb-3 mt-3 card-style\"\r\n                  onClick={() => this.statusClickFunc(3)}\r\n                >\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" className=\"pr-0\">\r\n                    <DoneAllIcon className=\"icon-style closed-style\" />\r\n                  </Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" className=\"pt-2 pl-3\">\r\n                    <label className=\"statusLabel\">Closed</label>\r\n                  </Col>\r\n                  <Col\r\n                    xs=\"4\"\r\n                    sm=\"4\"\r\n                    md=\"4\"\r\n                    lg=\"4\"\r\n                    xl=\"4\"\r\n                    className=\"pt-2 numberCol\"\r\n                  >\r\n                    <label>{this.state.CardsData.closed}</label>\r\n                  </Col>\r\n                </Row>\r\n                <Row\r\n                  className=\"mt-3 card-style last-card\"\r\n                  onClick={() => this.statusClickFunc(5)}\r\n                >\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" className=\"pr-0\">\r\n                    <ReplayIcon className=\"icon-style reopened-style\" />\r\n                  </Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" className=\"pt-2 pl-3\">\r\n                    <label className=\"statusLabel\">Reopened</label>\r\n                  </Col>\r\n                  <Col\r\n                    xs=\"4\"\r\n                    sm=\"4\"\r\n                    md=\"4\"\r\n                    lg=\"4\"\r\n                    xl=\"4\"\r\n                    className=\"pt-2 numberCol\"\r\n                  >\r\n                    <label>{this.state.CardsData.reopen}</label>\r\n                  </Col>\r\n                </Row>\r\n                <Footer></Footer>\r\n              </div>\r\n              <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={1000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover={false}\r\n                className=\"toaster-style\"\r\n              />\r\n            </Container>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyComplaintStatus;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\IncidentReport\\IncidentStatus\\IncidentStatus.js",["994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006"],"import React, { Component } from \"react\";\r\nimport Header from \"../../Dashboard-header\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Link } from \"react-router-dom\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport ComplaintDetails from \"../../../jsonFiles/CollaborationJson/complaintDetails\";\r\nimport Select from \"react-select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport CallMadeIcon from \"@material-ui/icons/CallMade\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\r\nimport Footer from \"../../Footer\";\r\n\r\nclass IncidentStatus extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      APIResponse: \"\",\r\n      CardsData: \"\",\r\n      incidentId: null,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      eventTarget: \"\",\r\n      // footer: footer_data.paths,\r\n      isLogin: \"\",\r\n    };\r\n    this.statusClickFunc = this.statusClickFunc.bind(this);\r\n    this.incidentIdValidate = this.incidentIdValidate.bind(this);\r\n    this.submit = this.submit.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      document.body.style = \"background-image: url();\";\r\n      document.body.style = \"background: #F9F9F9\";\r\n      this.getComplaintStatus();\r\n    }\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  getComplaintStatus() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n      }),\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/incident/incidentstatus\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.status === true) {\r\n          var JsonDate = this.state.APIResponse.data[0];\r\n          this.setState({\r\n            CardsData: JsonDate,\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  incidentIdValidate = (e) => {\r\n    var title = e.target.value;\r\n    this.setState({\r\n      incidentId: e.target.value,\r\n    });\r\n  };\r\n\r\n  submit = () => {\r\n    if (this.state.incidentId !== null && this.state.incidentId !== \"\") {\r\n      var incidentId_SAT = this.state.incidentId;\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          user_id: sessionStorage.getItem(\"user_id\"),\r\n          token: sessionStorage.getItem(\"token\"),\r\n          incident_cat_id: null,\r\n          incident_status_id: null,\r\n          incident_id: incidentId_SAT,\r\n        }),\r\n      };\r\n\r\n      fetch(\r\n        \"https://scity.gmmspl.com:3000/incident/searchincident\",\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          if (this.state.APIResponse.message === \"Data Found\") {\r\n            sessionStorage.setItem(\"incident_id\", incidentId_SAT);\r\n            this.props.history.push(\"/My-incident-list\");\r\n          } else {\r\n            toast.warn(\"Data is not available\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  statusClickFunc = (params) => {\r\n    // console.log('you need params from Card', params);\r\n    var incidentId_SAT = null;\r\n    if (this.state.incidentId !== null && this.state.incidentId !== \"\") {\r\n      incidentId_SAT = this.state.incidentId;\r\n    }\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        incident_cat_id: null,\r\n        incident_status_id: params,\r\n        incident_id: incidentId_SAT,\r\n      }),\r\n    };\r\n\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/incident/searchincident\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.message === \"Data Found\") {\r\n          sessionStorage.setItem(\"incident_status_id\", params);\r\n          // var test=window.location.href;\r\n          sessionStorage.setItem(\"incident_back\", \"incident-Status\");\r\n\r\n          this.props.history.push(\"/My-incident-list\");\r\n        } else {\r\n          toast.warn(\"Data is not available\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const ComplaintType = [\r\n      { label: \"Road blockage\", value: 1 },\r\n      { label: \"Fire\", value: 2 },\r\n      { label: \"Blocked Drainage/Leakage\", value: 3 },\r\n      { label: \"Trespassing\", value: 4 },\r\n      { label: \"Animal Assault \", value: 5 },\r\n      { label: \"Illegal activity\", value: 6 },\r\n      { label: \"Cyber attack\", value: 7 },\r\n      { label: \"Violence\", value: 8 },\r\n      { label: \"Public obscenity\", value: 9 },\r\n      { label: \"Threatening/Abusive Treatment\", value: 10 },\r\n      { label: \"Theft/Loss/Harm\", value: 11 },\r\n      { label: \"Garden/Greenary issues\", value: 12 },\r\n      { label: \"Smoking Violation\", value: 13 },\r\n      { label: \"Sexual Exploitation\", value: 14 },\r\n      { label: \"Other\", value: 15 },\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        {/* <Header /> */}\r\n        {/* <Container className=\"inner-header-space\"></Container> */}\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              <Link to=\"/incidentReport\">\r\n                <Tooltip\r\n                  title=\"Dashboard\"\r\n                  placement=\"top\"\r\n                  TransitionProps={{ timeout: 600 }}\r\n                >\r\n                  <MDBIcon\r\n                    icon=\"chevron-circle-left\"\r\n                    size=\"2x\"\r\n                    className=\"back-arrow-icon\"\r\n                  />\r\n                </Tooltip>\r\n              </Link>\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">\r\n                {\" \"}\r\n                My Incident Status\r\n              </label>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            <Row className=\"search-bar-allignemt-style\">\r\n              <Col xs=\"1\" sm=\"1\" md=\"4\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n              <Col\r\n                xs=\"10\"\r\n                sm=\"10\"\r\n                md=\"8\"\r\n                lg=\"6\"\r\n                xl=\"6\"\r\n                xxl=\"6\"\r\n                className=\"small-screen-padding\"\r\n              >\r\n                <TextField\r\n                  value={this.state.incidentId}\r\n                  onChange={this.incidentIdValidate}\r\n                  placeholder=\"Incident ID\"\r\n                  className=\"serach-bar-style\"\r\n                  id=\"outlined-search\"\r\n                  type=\"search\"\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton>\r\n                          <MDBIcon\r\n                            icon=\"search\"\r\n                            className=\"search-bar-icon-style\"\r\n                            onClick={() => this.submit()}\r\n                          />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col xs=\"1\" sm=\"1\" md=\"0\" lg=\"0\" xl=\"0\" xxl=\"0\"></Col>\r\n            </Row>\r\n\r\n            <Row className=\"mt-3 ml-3 mr-3\">\r\n              <Col\r\n                xs=\"12\"\r\n                sm=\"12\"\r\n                md=\"12\"\r\n                lg=\"12\"\r\n                xl=\"12\"\r\n                xxl=\"12\"\r\n                className=\"complaintStatus-banners banner-submenu-style\"\r\n              >\r\n                <Row>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                    {/* <Row className=\"pl-3 pt-4 collaboration-banner-text\">Incident</Row>\r\n                    <Row className=\"pl-3 collaboration-banner-text2\">Status</Row> */}\r\n                    <Row className=\"pl-3 pt-3 collaboration-banner-text3\">\r\n                      View status report of incidents reported by you\r\n                    </Row>\r\n                    <Row className=\"start-new-idea-btn-allignment\"></Row>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            <Container className=\"tab-card-container-style\">\r\n              {/* <hr ></hr> */}\r\n              <div className=\"statusList\">\r\n                {/* <Row className=\"mb-3 mt-3\">\r\n            <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" className=\"pt-1\">\r\n              <TextField id=\"standard-required\" label=\"Complaint Number\" value={this.state.complaintId} onChange={this.complaintIdValidate}/>\r\n            </Col>\r\n            <Col className=\"pt-3 pl-0\">\r\n            <i class=\"fas fa-search search-icon\" aria-hidden=\"true\" onClick={() => this.submit()}></i>\r\n              </Col>\r\n          </Row> */}\r\n                <Row\r\n                  className=\"mb-3 mt-3 card-style\"\r\n                  onClick={() => this.statusClickFunc()}\r\n                >\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" className=\"pr-0\">\r\n                    <PlaylistAddIcon className=\"icon-style total-style\" />\r\n                  </Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" className=\"pt-2 pl-3\">\r\n                    <label className=\"statusLabel\">Total</label>\r\n                  </Col>\r\n                  <Col\r\n                    xs=\"4\"\r\n                    sm=\"4\"\r\n                    md=\"4\"\r\n                    lg=\"4\"\r\n                    xl=\"4\"\r\n                    className=\"pt-2 numberCol\"\r\n                  >\r\n                    <label>{this.state.CardsData.total}</label>\r\n                  </Col>\r\n                </Row>\r\n                <Row\r\n                  className=\"mb-3 mt-3 card-style\"\r\n                  onClick={() => this.statusClickFunc(1)}\r\n                >\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" className=\"pr-0\">\r\n                    <DraftsIcon className=\"icon-style open-style\" />\r\n                  </Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" className=\"pt-2 pl-3\">\r\n                    <label className=\"statusLabel\">Open</label>\r\n                  </Col>\r\n                  <Col\r\n                    xs=\"4\"\r\n                    sm=\"4\"\r\n                    md=\"4\"\r\n                    lg=\"4\"\r\n                    xl=\"4\"\r\n                    className=\"pt-2 numberCol\"\r\n                  >\r\n                    <label>{this.state.CardsData.open}</label>\r\n                  </Col>\r\n                </Row>\r\n                <Row\r\n                  className=\"mb-3 mt-3 card-style\"\r\n                  onClick={() => this.statusClickFunc(3)}\r\n                >\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" className=\"pr-0\">\r\n                    <CallMadeIcon className=\"icon-style inprogress-style\" />\r\n                  </Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" className=\"pt-2 pl-3\">\r\n                    <label className=\"statusLabel\">Inprogress</label>\r\n                  </Col>\r\n                  <Col\r\n                    xs=\"4\"\r\n                    sm=\"4\"\r\n                    md=\"4\"\r\n                    lg=\"4\"\r\n                    xl=\"4\"\r\n                    className=\"pt-2 numberCol\"\r\n                  >\r\n                    <label>{this.state.CardsData.in_progress}</label>\r\n                  </Col>\r\n                </Row>\r\n                <Row\r\n                  className=\"mb-3 mt-3 card-style\"\r\n                  onClick={() => this.statusClickFunc(4)}\r\n                >\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" className=\"pr-0\">\r\n                    <CancelIcon className=\"icon-style rejected-style\" />\r\n                  </Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" className=\"pt-2 pl-3\">\r\n                    <label className=\"statusLabel\">Rejected</label>\r\n                  </Col>\r\n                  <Col\r\n                    xs=\"4\"\r\n                    sm=\"4\"\r\n                    md=\"4\"\r\n                    lg=\"4\"\r\n                    xl=\"4\"\r\n                    className=\"pt-2 numberCol\"\r\n                  >\r\n                    <label>{this.state.CardsData.rejected}</label>\r\n                  </Col>\r\n                </Row>\r\n                <Row\r\n                  className=\"mt-3 card-style last-card\"\r\n                  onClick={() => this.statusClickFunc(2)}\r\n                >\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" className=\"pr-0\">\r\n                    <DoneAllIcon className=\"icon-style closed-style\" />\r\n                  </Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" className=\"pt-2 pl-3\">\r\n                    <label className=\"statusLabel\">Closed</label>\r\n                  </Col>\r\n                  <Col\r\n                    xs=\"4\"\r\n                    sm=\"4\"\r\n                    md=\"4\"\r\n                    lg=\"4\"\r\n                    xl=\"4\"\r\n                    className=\"pt-2 numberCol\"\r\n                  >\r\n                    <label>{this.state.CardsData.closed}</label>\r\n                  </Col>\r\n                </Row>\r\n                <Footer></Footer>\r\n              </div>\r\n              <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={1000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover={false}\r\n                className=\"toaster-style\"\r\n              />\r\n            </Container>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IncidentStatus;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\IncidentReport\\Incident-Details-By-ID\\Incident-Details-By-ID.js",["1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051"],"import React, { Component } from \"react\";\r\nimport Header from \"../../Dashboard-header\";\r\nimport Footer from \"../../Footer\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Link } from \"react-router-dom\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport ComplaintDetails from \"../../../jsonFiles/CollaborationJson/complaintDetails\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LoginHeadings from \"../../../jsonFiles/UserInfoJson/userLogin\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport footer_data from \"../../../jsonFiles/DashboardInfoJson/DashboardFooter\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport UserGeoMapComponent from \"../../UserGeoMapComponent\";\r\nimport axios from 'axios';\r\nimport fileDownload from 'js-file-download';\r\nimport {Capacitor} from '@capacitor/core';\r\nimport { Filesystem, Directory, Encoding } from '@capacitor/filesystem';\r\nimport {FileOpener} from '@ionic-native/file-opener';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { confirm } from \"react-confirm-box\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faFileCsv} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass IncidentDetailsByID extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      APIResponse: \"\",\r\n      SearchData: ComplaintDetails.Search_incident_Details,\r\n      ACardComments: ComplaintDetails.Search_incident_Details[0].comments,\r\n      description: \"\",\r\n      descriptionValidate: false,\r\n      rating: 0,\r\n      feedBack: \"\",\r\n      feedBackValidate: false,\r\n      commentsCounts: 3,\r\n      AttachmentAvailable: false,\r\n      isOpen: false,\r\n      submit: false,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      eventTarget: \"\",\r\n       mimeType:'',\r\n      extension:'',\r\n      isActive:false,\r\n      progress:0,\r\n      footer: footer_data.paths,\r\n      isLogin: \"\",\r\n      progressbarVisible:false,\r\n      DeleteSubmit: false,\r\n      DeleteDialogStatus: false,\r\n      incidentCommentCount:0,\r\n      deteledID: \"\",\r\n      ACardAttachments:\r\n        ComplaintDetails.Search_Complaint_Details[0].incident_media,\r\n    };\r\n    this.sendComment = this.sendComment.bind(this);\r\n    this.submitFeedBack_SAT = this.submitFeedBack_SAT.bind(this);\r\n    this.getComplaintDetails = this.getComplaintDetails.bind(this);\r\n    this.LoadMore_SAT = this.LoadMore_SAT.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.Delete = this.Delete.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n     this.getMimeType = this.getMimeType.bind(this);\r\n    this.downloadAttachmentFile = this.downloadAttachmentFile.bind(this);\r\n    this.getTruncatedName=this.getTruncatedName.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      document.body.style = \"background-image: url();\";\r\n      document.body.style = \"background: #F9F9F9\";\r\n    }\r\n\r\n    this.getComplaintDetails();\r\n  }\r\n\r\n  getComplaintDetails() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        incident_id: Number(sessionStorage.getItem(\"incidentId\")),\r\n        offset: this.state.commentsCounts,\r\n        is_admin: false,\r\n      }),\r\n    };\r\n\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/incident/getincidentbyid\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        //console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.message === \"Data Found\") {\r\n          var JsonDate = this.state.APIResponse.data;\r\n          if(!JsonDate[0].Image || JsonDate[0].Image.indexOf('https')!== -1 || JsonDate[0].Image==\"\"){\r\n            console.log(\"https present\");\r\n          }\r\n          else{\r\n            console.log(\"https absent\");\r\n              JsonDate[0].Image=\"https://scity.gmmspl.com:3000/\" +JsonDate[0].Image\r\n          }\r\n          for(var commentobject in JsonDate[0].comments)\r\n          {\r\n          console.log(\"Acard comment image in :\",JsonDate[0].comments[commentobject].image_path);\r\n            if(!JsonDate[0].comments[commentobject].image_path || JsonDate[0].comments[commentobject].image_path.indexOf('https')!== -1 || JsonDate[0].comments[commentobject].image_path==\"\"){\r\n            console.log(\"https present\");\r\n          }\r\n          else{\r\n            console.log(\"https absent\");\r\n              JsonDate[0].comments[commentobject].image_path=\"https://scity.gmmspl.com:3000/\" +JsonDate[0].comments[commentobject].image_path;\r\n          }\r\n        }\r\n          this.setState({\r\n            SearchData: JsonDate[0],\r\n            ACardComments: JsonDate[0].comments,\r\n            ACardAttachments: JsonDate[0].incident_media,\r\n            incidentCommentCount:JsonDate[0].comment_count\r\n          });\r\n\r\n          console.log(\"ACardComments = \", this.state.SearchData);\r\n          //   sessionStorage.removeItem(\"complaint_cat_id\");\r\n          //   sessionStorage.removeItem(\"complaint_status_id\");\r\n          //   sessionStorage.removeItem(\"thread_id\");\r\n          // sessionStorage.setItem(\"complaint_cat_id\",SelectedType_SAT);\r\n          // sessionStorage.setItem(\"complaint_status_id\",complaintStatusValue_SAT);\r\n          // sessionStorage.setItem(\"thread_id\",complaintId_SAT);\r\n          //   this.props.history.push(\"/my-complaints\");\r\n        }\r\n        // else {\r\n        //   this.setState({\r\n        //     SubmitAlert: true,\r\n        //     dialogBoxStatus: true,\r\n        //   });\r\n        // }\r\n      });\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n    sessionStorage.removeItem(\"incident_cat_id\");\r\n    sessionStorage.removeItem(\"incident_status_id\");\r\n    sessionStorage.removeItem(\"incident_id\");\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  LoadMore_SAT() {\r\n    if (this.state.commentsCounts <= 100) {\r\n      var currentCount = this.state.commentsCounts + 3;\r\n      this.state.commentsCounts = currentCount;\r\n      this.getComplaintDetails();\r\n    }\r\n  }\r\n\r\n  description = (e) => {\r\n    if (e.target.value != null) {\r\n      this.setState({\r\n        description: e.target.value,\r\n        descriptionValidate: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        description: e.target.value,\r\n        descriptionValidate: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  feedBack = (e) => {\r\n    if (e.target.value != null) {\r\n      this.setState({\r\n        feedBack: e.target.value,\r\n        feedBackValidate: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        feedBack: e.target.value,\r\n        feedBackValidate: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  sendComment() {\r\n    if (this.state.description != \"\") {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          user_id: sessionStorage.getItem(\"user_id\"),\r\n          token: sessionStorage.getItem(\"token\"),\r\n          comment: this.state.description,\r\n          incident_id: this.state.SearchData.Incident_Id,\r\n        }),\r\n      };\r\n      fetch(\r\n        \"https://scity.gmmspl.com:3000/incident/addincidentcomment\",\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          // console.log(\"APIResponse = \", this.state.APIResponse);\r\n          if (this.state.APIResponse.message == \"Comment  added successfully\") {\r\n            toast.success(\"Comment successfully added\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              onClose: () => this.getComplaintDetails(),\r\n            });\r\n            // this.getComplaintDetails();\r\n            //   var JsonDate = this.state.APIResponse.Details;\r\n            this.setState({\r\n              description: \"\",\r\n              descriptionValidate: false,\r\n            });\r\n          } else if (\r\n            this.state.APIResponse.message === \"Failed to authenticate token.\"\r\n          ) {\r\n            toast.error(\"Please login, your session has expired\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              onClose: () => this.props.history.push(\"/\"),\r\n            });\r\n          } else {\r\n            toast.error(\"Unable to add comment, please try again\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  DeleteACard = () => {\r\n    // console.log(\"CardID = \", CardID);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        incident_id: this.state.deteledID,\r\n      }),\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/incident/deleteincidentcomment\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.message === \"Comment deleted successfully\") {\r\n          this.DeleteDialogClose();\r\n          this.getComplaintDetails();\r\n        }\r\n      });\r\n  };\r\n\r\n  getFeedbakRating = (e) => {\r\n    this.setState({\r\n      rating: e.target.value,\r\n    });\r\n    console.log(\"e.target.value = \", e.target.value);\r\n  };\r\n\r\n  submitFeedBack_SAT() {\r\n    console.log(\"Rating = \", this.state.rating);\r\n    console.log(\"feedBack = \", this.state.feedBack);\r\n\r\n    if (this.state.rating || this.state.feedBack) {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          user_id: sessionStorage.getItem(\"user_id\"),\r\n          token: sessionStorage.getItem(\"token\"),\r\n          feedback_rating: this.state.rating,\r\n          feedback_description: this.state.feedBack,\r\n          incident_id: this.state.SearchData.Incident_Id,\r\n        }),\r\n      };\r\n      fetch(\r\n        \"https://scity.gmmspl.com:3000/incident/incidentfeedback\",\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          // console.log(\"APIResponse = \", this.state.APIResponse);\r\n          if (this.state.APIResponse.message === \"Feedback Updated\") {\r\n            this.getComplaintDetails();\r\n            toast.success(\"Thank you for your feedback.\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n          } else {\r\n            toast.error(\r\n              \"Something went wrong. Your feedback is not submitted. Please try again.\",\r\n              {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              }\r\n            );\r\n          }\r\n        });\r\n    } else {\r\n      toast.error(\"Please give your feedback.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n  getMimeType=(file_path)=>{\r\n    const extension = file_path.substr(file_path.lastIndexOf(\"/\") + 1).split('.')[1];\r\n    if(extension=='jpg' || extension=='jpeg'){\r\n      return 'image/jpeg';\r\n    }else if(extension=='png'){\r\n      return 'image/jpeg';\r\n    }else if(extension=='pdf'){\r\n      return 'application/pdf';\r\n    }else if(extension=='doc'){\r\n      return 'application/msword';\r\n    }else if(extension=='docx'){\r\n      return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\r\n    }else if(extension=='xlsx'){\r\n      return 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\r\n    }else if(extension=='xls'){\r\n      return 'application/vnd.ms-excel';\r\n    }else if(extension=='txt'){\r\n      return 'text/plain';\r\n    }else if(extension=='ppt'){\r\n      return 'application/vnd.ms-powerpoint';\r\n    }else if(extension=='pptx'){\r\n      return 'application/vnd.openxmlformats-officedocument.presentationml.presentation';\r\n    }else if(extension=='mp3'){\r\n      return 'audio/mpeg';\r\n    }else if(extension=='mp4'){\r\n      return 'video/mp4';\r\n    }\r\n  }\r\ndownloadAttachmentFile = (AttachmentDetails) => {\r\n     var file_path=\"https://scity.gmmspl.com:3000/\" + AttachmentDetails.incident_media_file;\r\n        var extension= file_path.substr(file_path.lastIndexOf(\"/\") + 1).split('.')[1];\r\n        var mime = this.getMimeType(file_path);\r\n        this.setState({progressbarVisible:true})\r\n        axios.get(file_path, {responseType: 'blob',onDownloadProgress: (progressEvent) => {\r\n        this.setState({progress:Math.round((progressEvent.loaded * 100) / progressEvent.total)})  \r\n  }}).then((res) => {\r\n           this.setState({progress:0})\r\n           this.setState({progressbarVisible:false})\r\n          if(Capacitor.getPlatform()=='web')\r\n          {\r\n          fileDownload(res.data,'SmartCityIncidentAttachment.'+extension);\r\n          }else\r\n          {\r\n            var date = new Date();\r\n           var reader = new FileReader();\r\n            reader.readAsDataURL(res.data);\r\n            reader.onloadend = async function () {\r\n            var base64String = reader.result;\r\n            console.log('Base64 String - ', base64String);\r\n            const savedFile = await Filesystem.writeFile({\r\n              path :'SmartCityIncidentAttachment'+Math.floor(date.getTime() + date.getSeconds() / 2) +'.'+extension,\r\n              data : base64String,\r\n              directory : Directory.Documents,\r\n            })\r\n            alert(\"Your file is stored into DOCUMENTS directory of your device\")\r\n            const path =savedFile.uri;   \r\n            const mimeType =mime;\r\n            FileOpener.showOpenWithDialog(path,mimeType).then(()=>console.log('File is opened')).catch(error=>console.log('error while opening File : ',error));\r\n            }\r\n          }\r\n          });   \r\n  };\r\n  Delete = (CardID) => {\r\n    this.setState({\r\n      DeleteSubmit: true,\r\n      DeleteDialogStatus: true,\r\n      deteledID: CardID.comment_incident_id,\r\n    });\r\n  };\r\n  getTruncatedName=(attachmentname)=>{\r\n    if(attachmentname.length>25)\r\n    {\r\n      var truncatename= attachmentname.substr(0,10)+'...'+attachmentname.substr(attachmentname.length-8,attachmentname.length-1)\r\n      return truncatename;\r\n    }\r\n    else{\r\n    return(attachmentname);\r\n    }\r\n  }\r\n  DeleteDialogClose = () => {\r\n    this.setState({\r\n      DeleteDialogStatus: false,\r\n    });\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <Header /> */}\r\n        {/* <Container className=\"inner-header-space\"></Container> */}\r\n        <Container fluid className=\"header-style\">\r\n           \r\n          <Row className=\"header-height-style_SAT\">\r\n           \r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              <Link to=\"/My-incident-list\">\r\n                <Tooltip\r\n                  title=\"Dashboard\"\r\n                  placement=\"top\"\r\n                  TransitionProps={{ timeout: 600 }}\r\n                >\r\n                  <MDBIcon\r\n                    icon=\"chevron-circle-left\"\r\n                    size=\"2x\"\r\n                    className=\"back-arrow-icon\"\r\n                  />\r\n                </Tooltip>\r\n              </Link>\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">Incident Details</label>\r\n            </Col>\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n           {this.state.progressbarVisible && <Row>\r\n           <div style={{height:15,backgroundColor:'rgba(0,0,0,0.2)',width:this.state.progress+'%',color:'white',fontWeight:'600',fontSize:12,textAlign:'center',borderRadius:5}}>\r\n              {this.state.progress==0 ? '' : this.state.progress+'%'}\r\n            </div>\r\n          </Row>}\r\n        </Container>\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            <hr></hr>\r\n            <div class=\"details-container-style inner-container-style-collaboration\">\r\n              <Container className=\"p-4\">\r\n                <Row className=\"card-details-title-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <div\r\n                      id=\"card-details-category\"\r\n                      class=\"tab-card-heading-style\"\r\n                    >\r\n                      <label>\r\n                        {this.state.SearchData.Incident_CategoryName}\r\n                      </label>\r\n                    </div>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"card-details-title-style\"\r\n                  >\r\n                    {/* <span class=\"card-details-category-style\"><label>Title :&nbsp;</label></span> */}\r\n                    <label>{this.state.SearchData.Incident_Title}</label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"card-details-title-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"card-details-description-style\"\r\n                  >\r\n                    {/* <span class=\"card-details-category-style\"><label>Description :&nbsp;</label></span> */}\r\n                    <label>{this.state.SearchData.Incident_Description}</label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n                <Row className=\"card-details-title-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <span class=\"card-details-category-style\">\r\n                      <label>Status Type :&nbsp;</label>\r\n                    </span>\r\n                    <span class=\"card-details-category-value-style\">\r\n                      <label>{this.state.SearchData.Incident_Status}</label>\r\n                    </span>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                {this.state.SearchData.Incident_Status === \"Closed\" &&\r\n                  !this.state.SearchData.feedback_submit_flag && (\r\n                    <Row className=\"pt-1 card-details-title-row-style\">\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                      <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                        <span class=\"card-details-category-style\">\r\n                          <label>Feedback &nbsp;</label>\r\n                        </span>\r\n                        <Rating\r\n                          name=\"simple-controlled\"\r\n                          value={this.state.rating}\r\n                          onChange={this.getFeedbakRating}\r\n                        />\r\n                      </Col>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                    </Row>\r\n                  )}\r\n\r\n                {this.state.SearchData.Incident_Status === \"Closed\" &&\r\n                  this.state.SearchData.feedback_submit_flag && (\r\n                    <Row className=\"pt-1 card-details-title-row-style\">\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                      <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                        <span class=\"card-details-category-style\">\r\n                          <label>Feedback &nbsp;</label>\r\n                        </span>\r\n                        <Rating\r\n                          name=\"simple-controlled\"\r\n                          value={this.state.SearchData.feedback_rating}\r\n                        />\r\n                      </Col>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                    </Row>\r\n                  )}\r\n\r\n                {this.state.SearchData.Incident_Status === \"Closed\" &&\r\n                  !this.state.SearchData.feedback_submit_flag && (\r\n                    <Row className=\"card-details-title-row-style\">\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                      <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                        <TextField\r\n                          id=\"outlined-textarea\"\r\n                          label=\"Please share your valuable feedback.\"\r\n                          value={this.state.feedBack}\r\n                          onChange={this.feedBack}\r\n                          multiline\r\n                        //  variant=\"outlined\"\r\n                          rows={2}\r\n                          className=\"start-new-idea-description-box\"\r\n                          onInput={(e) =>\r\n                            (e.target.value = e.target.value.slice(0, 500))\r\n                          }\r\n                        />\r\n                      </Col>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                    </Row>\r\n                  )}\r\n                {this.state.SearchData.Incident_Status === \"Closed\" &&\r\n                  this.state.SearchData.feedback_submit_flag && (\r\n                    <Row className=\"card-details-title-row-style feedback-style-message\">\r\n                      <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                      <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                        <span class=\"card-details-category-style feedback-style \">\r\n                          <label>Feedback Message :&nbsp;</label>\r\n                        </span>\r\n                      </Col>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                    </Row>\r\n                  )}\r\n                {this.state.SearchData.Incident_Status === \"Closed\" &&\r\n                  this.state.SearchData.feedback_submit_flag && (\r\n                    <Row>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                      <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                        <span class=\"card-details-category-value-style feedback-style\">\r\n                          <label>\r\n                            {this.state.SearchData.feedback_description}\r\n                          </label>\r\n                        </span>\r\n                      </Col>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                    </Row>\r\n                  )}\r\n\r\n                {this.state.SearchData.Incident_Status === \"Closed\" &&\r\n                  !this.state.SearchData.feedback_submit_flag && (\r\n                    <Row className=\"pt-3 pb-3 card-details-title-row-style\">\r\n                      <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                      <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                        <Row className=\"\">\r\n                          <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                            <Button\r\n                              className=\"signup-button-style\"\r\n                              onClick={this.submitFeedBack_SAT}\r\n                            >\r\n                              {LoginHeadings.Profile_SUBMIT_HMD}\r\n                            </Button>\r\n                            <ToastContainer\r\n                              position=\"top-center\"\r\n                              autoClose={5000}\r\n                              hideProgressBar={false}\r\n                              newestOnTop\r\n                              closeOnClick\r\n                              rtl={false}\r\n                              pauseOnFocusLoss\r\n                              draggable\r\n                              pauseOnHover={true}\r\n                              className=\"toaster-style\"\r\n                            />\r\n                          </Col>\r\n                          <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                    </Row>\r\n                  )}\r\n\r\n                <Row className=\"card-details-title-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <Row>\r\n                      <Col\r\n                        xs=\"1\"\r\n                        sm=\"1\"\r\n                        md=\"1\"\r\n                        lg=\"1\"\r\n                        xl=\"1\"\r\n                        xxl=\"1\"\r\n                        className=\"pr-0\"\r\n                      >\r\n                        <MDBIcon\r\n                          icon=\"map-marker-alt\"\r\n                          className=\"red-text\"\r\n                          size=\"lg\"\r\n                        />\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"11\"\r\n                        sm=\"11\"\r\n                        md=\"11\"\r\n                        lg=\"11\"\r\n                        xl=\"11\"\r\n                        xxl=\"11\"\r\n                        className=\"\"\r\n                      >\r\n                        <label class=\"card-details-description-style\">\r\n                          {this.state.SearchData.address}\r\n                        </label>\r\n                      </Col>\r\n                      <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\">\r\n                        <UserGeoMapComponent\r\n                          long={this.state.SearchData.longitude}\r\n                          lat={this.state.SearchData.latitude}\r\n                          address={this.state.SearchData.address}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                 {this.state.ACardAttachments.length>0 &&(<Row className=\"card-details-title-row-style attachment-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    {this.state.ACardAttachments.map((Attachment) => (\r\n                      <Row className=\"pt-1 pb-1\" id=\"downloadFile\">\r\n                        <Button\r\n                          color=\"transparent\"\r\n                          onClick={()=>{this.downloadAttachmentFile(Attachment)}}\r\n                        >\r\n                          <Col\r\n                            xs=\"2\"\r\n                            sm=\"2\"\r\n                            md=\"1\"\r\n                            lg=\"1\"\r\n                            xl=\"1\"\r\n                            xxl=\"1\"\r\n                            className=\"pl-3\"\r\n                          >\r\n                            {(Attachment.incident_media_file\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"png\" ||\r\n                              Attachment.incident_media_file\r\n                                .split(\"/\")\r\n                                .pop()\r\n                                .split(\".\")\r\n                                .pop() == \"jpg\" ||\r\n                              Attachment.incident_media_file\r\n                                .split(\"/\")\r\n                                .pop()\r\n                                .split(\".\")\r\n                                .pop() == \"jpeg\") && (\r\n                              <MDBIcon\r\n                                far\r\n                                icon=\"image\"\r\n                                size=\"lg\"\r\n                                className=\"image-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {Attachment.incident_media_file\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"pdf\" && (\r\n                              <MDBIcon\r\n                                icon=\"file-pdf\"\r\n                                size=\"lg\"\r\n                                className=\"doc-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {Attachment.incident_media_file\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"csv\" && (\r\n                             <FontAwesomeIcon\r\n                                icon={faFileCsv}\r\n                                color=\"green\"\r\n                                size=\"lg\">\r\n                              </FontAwesomeIcon>\r\n                            )}\r\n                            {(Attachment.incident_media_file\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"doc\" ||\r\n                              Attachment.incident_media_file\r\n                                .split(\"/\")\r\n                                .pop()\r\n                                .split(\".\")\r\n                                .pop() == \"docx\") && (\r\n                              <MDBIcon\r\n                                icon=\"file-word\"\r\n                                size=\"lg\"\r\n                                className=\"word-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {Attachment.incident_media_file\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"xlsx\" && (\r\n                              <MDBIcon\r\n                                icon=\"file-excel\"\r\n                                size=\"lg\"\r\n                                className=\"xlsx-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {Attachment.incident_media_file\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"txt\" && (\r\n                              <MDBIcon\r\n                                icon=\"file-alt\"\r\n                                size=\"lg\"\r\n                                className=\"txt-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {(Attachment.incident_media_file\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"mp3\" ||\r\n                              Attachment.incident_media_file\r\n                                .split(\"/\")\r\n                                .pop()\r\n                                .split(\".\")\r\n                                .pop() == \"mp4\") && (\r\n                              <MDBIcon\r\n                                icon=\"video\"\r\n                                size=\"lg\"\r\n                                className=\"media-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {(Attachment.incident_media_file\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"ppt\" ||\r\n                              Attachment.incident_media_file\r\n                                .split(\"/\")\r\n                                .pop()\r\n                                .split(\".\")\r\n                                .pop() == \"pptx\") && (\r\n                              <MDBIcon\r\n                                icon=\"file-powerpoint\"\r\n                                size=\"lg\"\r\n                                className=\"ppt-file-icon-style\"\r\n                              />\r\n                            )}\r\n                          </Col>\r\n                          <Col xs=\"10\" sm=\"10\" md=\"11\" lg=\"11\" xl=\"11\" xxl=\"11\">\r\n                            {this.getTruncatedName(Attachment.incident_media_file.split(\"/\").pop())}\r\n                          </Col>\r\n                        </Button>\r\n                      </Row>\r\n                    ))}\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>)}\r\n\r\n                {/* <Row className=\"card-details-title-row-style\">\r\n                    <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                    <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    {\r\n                      (this.state.AttachmentAvailable == true) &&\r\n                      <span class=\"card-details-category-style\"><label>Attachments :&nbsp;</label></span>\r\n                    }\r\n                    </Col>\r\n                    <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  </Row> */}\r\n\r\n                <Row className=\"pt-3 pb-3\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <Row>\r\n                      <Col\r\n                        xs=\"2\"\r\n                        sm=\"2\"\r\n                        md=\"2\"\r\n                        lg=\"2\"\r\n                        xl=\"2\"\r\n                        className=\"details-profile-image-col-style\"\r\n                      >\r\n                        <img\r\n                          src={this.state.SearchData.Image}\r\n                          alt=\"\"\r\n                          class=\"details-profile-image-style\"\r\n                        />\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"10\"\r\n                        sm=\"10\"\r\n                        md=\"10\"\r\n                        lg=\"10\"\r\n                        xl=\"10\"\r\n                        className=\"details-image-imfo-style pr-0\"\r\n                      >\r\n                        <Row className=\"details-image-profile-name-style\">\r\n                          <label>{this.state.SearchData.Full_name}</label>\r\n                        </Row>\r\n                        <Row className=\"card-image-imfo-row-style\">\r\n                          <label>\r\n                            {this.state.SearchData.Incident_PostdedDate}\r\n                          </label>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <hr></hr>\r\n\r\n                <Row className=\"details-comment-count-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <Row>\r\n                      <Col\r\n                        xs=\"1\"\r\n                        sm=\"1\"\r\n                        md=\"1\"\r\n                        lg=\"1\"\r\n                        xl=\"1\"\r\n                        xxl=\"1\"\r\n                        className=\"pr-0\"\r\n                      >\r\n                        <MDBIcon\r\n                          icon=\"comment\"\r\n                          className=\"add-comment-style\"\r\n                          size=\"lg\"\r\n                        />\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"11\"\r\n                        sm=\"11\"\r\n                        md=\"11\"\r\n                        lg=\"11\"\r\n                        xl=\"11\"\r\n                        xxl=\"11\"\r\n                        className=\"\"\r\n                      >\r\n                        <p className=\"card-comments-style\">\r\n                          <label>\r\n                            <span>{this.state.SearchData.comment_count}</span>{\" \"}\r\n                            <span class=\"comments-count-style\">Comments</span>\r\n                          </label>\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"card-details-title-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"card-details-description-style\"\r\n                  >\r\n                    {this.state.ACardComments.map((AComent) => (\r\n                      <Container className=\"comment-cards-row-style pt-2 pb-0 pl-0 pr-0\">\r\n                        <Card className=\"comment-cards-row-style\">\r\n                          <Row className=\"p-1\">\r\n                            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n                              <img\r\n                                src={AComent.image_path}\r\n                                alt=\"\"\r\n                                class=\"card-profile-image-style\"\r\n                              />\r\n                            </Col>\r\n                            <Col xs=\"9\" sm=\"9\" md=\"9\" lg=\"9\" xl=\"9\" xxl=\"9\">\r\n                              <label class=\"mb-0 cards-lable-style\">\r\n                                {AComent.full_name}\r\n                                <span class=\"commet-postedOnn-date\">\r\n                                  {\" \"}\r\n                                  - {AComent.submission_date}\r\n                                </span>\r\n                              </label>\r\n                              <p class=\"card-comment-description-style\">\r\n                                {AComent.comments}\r\n                              </p>\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"1\"\r\n                              sm=\"1\"\r\n                              md=\"1\"\r\n                              lg=\"1\"\r\n                              xl=\"1\"\r\n                              xxl=\"1\"\r\n                              className=\"pl-0\"\r\n                            >\r\n                              {AComent.user_id ==\r\n                                sessionStorage.getItem(\"user_id\") && (\r\n                                <div>\r\n                                  <MDBIcon\r\n                                    icon=\"trash\"\r\n                                    onClick={() => this.Delete(AComent)}\r\n                                  />\r\n                                  {this.state.DeleteSubmit && (\r\n                                    <Dialog\r\n                                      open={this.state.DeleteDialogStatus}\r\n                                      onClose={this.DeleteDialogClose}\r\n                                      aria-labelledby=\"alert-dialog-title\"\r\n                                      aria-describedby=\"alert-dialog-description\"\r\n                                    >\r\n                                      <DialogTitle id=\"simple-dialog-title\">\r\n                                        Are you sure you want to delete comment?\r\n                                        <DialogActions>\r\n                                          <Button\r\n                                            onClick={this.DeleteACard}\r\n                                            color=\"primary\"\r\n                                          >\r\n                                            Yes\r\n                                          </Button>\r\n                                          <Button\r\n                                            onClick={this.DeleteDialogClose}\r\n                                            color=\"primary\"\r\n                                            autoFocus\r\n                                          >\r\n                                            No\r\n                                          </Button>\r\n                                        </DialogActions>\r\n                                      </DialogTitle>\r\n                                    </Dialog>\r\n                                  )}\r\n                                </div>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                          {/* <Card.Text className=\"p-1\">\r\n                                \r\n                              </Card.Text> */}\r\n                        </Card>\r\n                        <hr></hr>\r\n                      </Container>\r\n                    ))}\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-2\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"9\" xl=\"9\" xxl=\"9\">\r\n                    <Row className=\"\">\r\n                      <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                      <Col\r\n                        xs=\"6\"\r\n                        sm=\"6\"\r\n                        md=\"6\"\r\n                        lg=\"6\"\r\n                        xl=\"6\"\r\n                        xxl=\"6\"\r\n                        className=\"load-more-comments-text-style\"\r\n                      >\r\n                        <label>\r\n                          {this.state.incidentCommentCount >\r\n                            this.state.commentsCounts && (\r\n                            <Link onClick={this.LoadMore_SAT}>\r\n                              Load more comments...                            </Link>\r\n                          )}\r\n                        </label>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\">\r\n                    <Row className=\"card-details-title-row-style\">\r\n                      <Col\r\n                        xs=\"12\"\r\n                        sm=\"12\"\r\n                        md=\"12\"\r\n                        lg=\"12\"\r\n                        xl=\"12\"\r\n                        xxl=\"12\"\r\n                        className=\"card-details-title-style\"\r\n                      >\r\n                        {this.state.SearchData.Incident_Status != \"Closed\" && (\r\n                          <TextField\r\n                            id=\"outlined-textarea\"\r\n                            label=\"Comment\"\r\n                            value={this.state.description}\r\n                            onChange={this.description}\r\n                            multiline\r\n                          //  variant=\"outlined\"\r\n                            rows={2}\r\n                            onInput={(e) =>\r\n                              (e.target.value = e.target.value.slice(0, 250))\r\n                            }\r\n                            className=\"p-0 start-new-idea-description-box\"\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\" className=\"p-0\">\r\n                                  <IconButton>\r\n                                    <i\r\n                                      class=\"fas fa-paper-plane fa-xs add-comment-style\"\r\n                                      onClick={this.sendComment}\r\n                                    ></i>\r\n                                  </IconButton>\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n              </Container>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={3000}\r\n          hideProgressBar={false}\r\n          newestOnTop\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover={false}\r\n          className=\"toaster-style\"\r\n        />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IncidentDetailsByID;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\IncidentReport\\SearchIncident\\SearchIncident.js",["1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062"],"import React, { Component } from \"react\";\r\nimport Header from \"../../Dashboard-header\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Link } from \"react-router-dom\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport ComplaintDetails from \"../../../jsonFiles/CollaborationJson/complaintDetails\";\r\nimport Select from \"react-select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Footer from \"../../Footer\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport \"./SearchIncident.css\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport footer_data from \"../../../jsonFiles/DashboardInfoJson/DashboardFooter\";\r\n\r\nclass SearchIncident extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      SelectedType: null,\r\n      SelectedTypeValidate: false,\r\n      complaintId: null,\r\n      complaintIdValidate: false,\r\n      complaintStatusValue: null,\r\n      complaintStatusValidate: false,\r\n      APIResponse: \"\",\r\n      SubmitAlert: false,\r\n      dialogBoxStatus: false,\r\n      CategoryList: \"\",\r\n      StatusList: \"\",\r\n      isOpen: false,\r\n      submit: false,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      eventTarget: \"\",\r\n      footer: footer_data.paths,\r\n      isLogin: \"\",\r\n    };\r\n    this.Submit = this.Submit.bind(this);\r\n    this.complaintIdValidate = this.complaintIdValidate.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      document.body.style = \"background-image: url();\";\r\n      document.body.style = \"background: #F9F9F9\";\r\n\r\n      this.getCategoryList();\r\n      this.getComplaintStatusList();\r\n    }\r\n  }\r\n\r\n  getCategoryList() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n      }),\r\n    };\r\n\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/incident/getincidentcategory\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.message === \"Data Found\") {\r\n          const options = this.state.APIResponse.data.map((d) => ({\r\n            value: d.incident_cat_id,\r\n            label: d.incident_cat_type,\r\n          }));\r\n          this.setState({ CategoryList: options });\r\n        } else {\r\n          toast.error(\"Something went wrong, Please try again\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () => this.props.history.push(\"/incidentReport\"),\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  getComplaintStatusList() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n      }),\r\n    };\r\n\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/incident/getincidentstatus\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.message === \"Data Found\") {\r\n          const options = this.state.APIResponse.data.map((d) => ({\r\n            value: d.incident_status_id,\r\n            label: d.incident_status_type,\r\n          }));\r\n          this.setState({ StatusList: options });\r\n        } else {\r\n          toast.error(\"Something went wrong, Please try again\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () => this.props.history.push(\"/incidentReport\"),\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  CategoryTypeValidate = (Selected_option) => {\r\n    this.setState({\r\n      SelectedType: Selected_option,\r\n      SelectedTypeValidate: true,\r\n    });\r\n  };\r\n\r\n  complaintIdValidate = (e) => {\r\n    var title = e.target.value;\r\n    this.setState({\r\n      complaintId: e.target.value,\r\n      complaintIdValidate: true,\r\n    });\r\n  };\r\n\r\n  StatusTypeValidate = (Selected_option) => {\r\n    this.setState({\r\n      complaintStatusValue: Selected_option,\r\n      complaintStatusValidate: true,\r\n    });\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      SubmitAlert: false,\r\n      dialogBoxStatus: false,\r\n    });\r\n  }\r\n\r\n  Submit() {\r\n    // console.log(\"SelectedType = \", this.state.SelectedType);\r\n    // console.log(\"complaintId = \", this.state.complaintId);\r\n    // console.log(\"complaintStatusValue = \", this.state.complaintStatusValue);\r\n\r\n    var SelectedType_SAT = null;\r\n    if (this.state.SelectedType !== null && this.state.SelectedType !== \"\") {\r\n      SelectedType_SAT = this.state.SelectedType.value;\r\n    }\r\n\r\n    var complaintId_SAT = null;\r\n    if (this.state.complaintId !== null && this.state.complaintId !== \"\") {\r\n      complaintId_SAT = this.state.complaintId;\r\n    }\r\n\r\n    var complaintStatusValue_SAT = null;\r\n    if (\r\n      this.state.complaintStatusValue !== null &&\r\n      this.state.complaintStatusValue !== \"\"\r\n    ) {\r\n      complaintStatusValue_SAT = this.state.complaintStatusValue.value;\r\n    }\r\n\r\n    console.log(\"SelectedType = \", SelectedType_SAT);\r\n    console.log(\"complaintId = \", complaintId_SAT);\r\n    console.log(\"complaintStatusValue = \", complaintId_SAT);\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        incident_cat_id: SelectedType_SAT,\r\n        incident_status_id: complaintStatusValue_SAT,\r\n        incident_id: complaintId_SAT,\r\n      }),\r\n    };\r\n\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/incident/searchincident\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.message === \"Data Found\") {\r\n          //   this.setState({\r\n          //     successfullyLogComplaint: true,\r\n          //     dialogBoxStatus: true,\r\n          //   });\r\n          sessionStorage.setItem(\"incident_cat_id\", SelectedType_SAT);\r\n          sessionStorage.setItem(\r\n            \"incident_status_id\",\r\n            complaintStatusValue_SAT\r\n          );\r\n          sessionStorage.setItem(\"incident_id\", complaintId_SAT);\r\n          sessionStorage.setItem(\"incident_back\", \"search-incident\");\r\n          this.props.history.push(\"/My-incident-list\");\r\n        } else {\r\n          toast.warn(\"Data is not available\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const ComplaintType = [\r\n      { label: \"Road blockage\", value: 1 },\r\n      { label: \"Fire\", value: 2 },\r\n      { label: \"Blocked Drainage/Leakage\", value: 3 },\r\n      { label: \"Trespassing\", value: 4 },\r\n      { label: \"Animal Assault \", value: 5 },\r\n      { label: \"Illegal activity\", value: 6 },\r\n      { label: \"Cyber attack\", value: 7 },\r\n      { label: \"Violence\", value: 8 },\r\n      { label: \"Public obscenity\", value: 9 },\r\n      { label: \"Threatening/Abusive Treatment\", value: 10 },\r\n      { label: \"Theft/Loss/Harm\", value: 11 },\r\n      { label: \"Garden/Greenary issues\", value: 12 },\r\n      { label: \"Smoking Violation\", value: 13 },\r\n      { label: \"Sexual Exploitation\", value: 14 },\r\n      { label: \"Other\", value: 15 },\r\n    ];\r\n\r\n    // According to API\r\n    const ComplaintStatus = [\r\n      { label: \"Open\", value: 1 },\r\n      { label: \"Closed\", value: 2 },\r\n      { label: \"In Progress\", value: 3 },\r\n      { label: \"Rejected\", value: 4 },\r\n    ];\r\n    return (\r\n      <div>\r\n        {/* <Header /> */}\r\n        {/* <Container className=\"all-header-space\"></Container> */}\r\n\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              <Link to=\"/incidentReport\">\r\n                <Tooltip\r\n                  title=\"Dashboard\"\r\n                  placement=\"top\"\r\n                  TransitionProps={{ timeout: 600 }}\r\n                >\r\n                  <MDBIcon\r\n                    icon=\"chevron-circle-left\"\r\n                    size=\"2x\"\r\n                    className=\"back-arrow-icon\"\r\n                  />\r\n                </Tooltip>\r\n              </Link>\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">\r\n                {ComplaintDetails.Incident_Search_HEADING}\r\n              </label>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            {/* <Row className=\"pt-1 pb-1\">\r\n                <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"1\" xl=\"1\" xxl=\"1\" className=\"back-arrow-icon-style pl-4\">\r\n                  <Link to = \"/incidentReport\" >\r\n                    <MDBIcon icon=\"arrow-circle-left\" size=\"2x\" className=\"back-arrow-icon\"/>\r\n                  </Link>\r\n                </Col>\r\n                <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"11\" xl=\"11\" xxl=\"11\" className=\"pr-4 start-new-Idea-heading\">\r\n                  {ComplaintDetails.Incident_Search_HEADING}\r\n                </Col>\r\n              </Row> */}\r\n\r\n            <div class=\"details-container-style inner-container-style-collaboration\">\r\n              <Row className=\"ml-3 mt-3 mr-3\">\r\n                <Col\r\n                  xs=\"12\"\r\n                  sm=\"12\"\r\n                  md=\"12\"\r\n                  lg=\"12\"\r\n                  xl=\"12\"\r\n                  xxl=\"12\"\r\n                  className=\"search-complaint-banners banner-submenu-style\"\r\n                >\r\n                  <Row>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                      <Row className=\"search-incident-banner-text\">\r\n                        Filter the search for incidents reported by you.\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Container className=\"pl-4 pb-2 pr-4\">\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pt-4\"\r\n                  >\r\n                    <Select\r\n                      placeholder=\"Select Category\"\r\n                      maxMenuHeight={200}\r\n                      options={this.state.CategoryList}\r\n                      isSearchable={false}\r\n                      className=\"category-drop-style-search\"\r\n                      value={this.state.SelectedType}\r\n                      onChange={this.CategoryTypeValidate}\r\n                      menuPlacement=\"top\"\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pb-3\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pt-3\"\r\n                  >\r\n                    <TextField\r\n                      id=\"standard-required\"\r\n                      label=\"Incident ID\"\r\n                      value={this.state.complaintId}\r\n                      onChange={this.complaintIdValidate}\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-2\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pt-1\"\r\n                  >\r\n                    <Select\r\n                      placeholder=\"Select Status\"\r\n                      options={this.state.StatusList}\r\n                      isSearchable={false}\r\n                      className=\"category-drop-style-search \"\r\n                      value={this.state.complaintStatusValue}\r\n                      onChange={this.StatusTypeValidate}\r\n                      menuPlacement=\"top\"\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-3\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pt-4\"\r\n                  >\r\n                    <Button\r\n                      className=\"login-button-style\"\r\n                      type=\"submit\"\r\n                      onClick={this.Submit}\r\n                    >\r\n                      SUBMIT\r\n                    </Button>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n              </Container>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchIncident;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Complaint_Management\\Complaints-Details-By-ID\\Complaints-Details-By-ID.js",["1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109"],"import React, { Component } from \"react\";\r\nimport Header from \"../../Dashboard-header\";\r\nimport Footer from \"../../Footer\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Link } from \"react-router-dom\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport ComplaintDetails from \"../../../jsonFiles/CollaborationJson/complaintDetails\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import Rating from \"@material-ui/lab/Rating\";\r\nimport { MDBContainer, MDBRating } from \"mdbreact\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport \"./Complaints-Details-By-ID.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LoginHeadings from \"../../../jsonFiles/UserInfoJson/userLogin\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport UserGeoMapComponent from \"../../UserGeoMapComponent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport footer_data from \"../../../jsonFiles/DashboardInfoJson/DashboardFooter\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport fileDownload from 'js-file-download';\r\nimport {Capacitor} from '@capacitor/core';\r\nimport { Filesystem, Directory, Encoding } from '@capacitor/filesystem';\r\nimport {FileOpener} from '@ionic-native/file-opener';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { confirm } from \"react-confirm-box\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faFileCsv} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\n\r\nclass ComplaintsDetailsByID extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      downloadedFile:null,\r\n      APIResponse: \"\",\r\n      SearchData: ComplaintDetails.Search_Complaint_Details,\r\n      ACardComments: ComplaintDetails.Search_Complaint_Details[0].comments,\r\n      description: \"\",\r\n      descriptionValidate: false,\r\n      rating: 0,\r\n      feedBack: \"\",\r\n      feedBackValidate: false,\r\n      commentsCounts: 3,\r\n      AttachmentAvailable: false,\r\n      isOpen: false,\r\n      submit: false,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      file_path:'',\r\n      eventTarget: \"\",\r\n      footer: footer_data.paths,\r\n      isLogin: \"\",\r\n      DeleteSubmit: false,\r\n      progressbarVisible:false,\r\n      mimeType:'',\r\n      extension:'',\r\n      isActive:false,\r\n      progress:0,\r\n      DeleteDialogStatus: false,\r\n      deteledID: \"\",\r\n      ACardAttachments:\r\n      ComplaintDetails.Search_Complaint_Details[0].complaint_media,\r\n      ComplaintCommentCount : 0\r\n    };\r\n    this.sendComment = this.sendComment.bind(this);\r\n    this.submitFeedBack_SAT = this.submitFeedBack_SAT.bind(this);\r\n    this.LoadMore_SAT = this.LoadMore_SAT.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.Delete = this.Delete.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n    this.getMimeType = this.getMimeType.bind(this);\r\n    this.downloadAttachmentFile = this.downloadAttachmentFile.bind(this);\r\n    this.getTruncatedName=this.getTruncatedName.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      document.body.style = \"background-image: url();\";\r\n      document.body.style = \"background: #F9F9F9\";\r\n    }\r\n\r\n    this.getComplaintDetails();\r\n  }\r\n\r\n  getComplaintDetails() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        complaint_id: Number(sessionStorage.getItem(\"complaintId\")),\r\n        offset: this.state.commentsCounts,\r\n        is_admin: false,\r\n      }),\r\n    };\r\n\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/complaint/getComplaintSummarybyid\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.message === \"Data Found\") {\r\n          var JsonDate = this.state.APIResponse.data;\r\n          if(!JsonDate[0].image || JsonDate[0].image.indexOf('https')!== -1 || JsonDate[0].image==\"\"){\r\n            console.log(\"https present\");\r\n          }\r\n          else{\r\n            console.log(\"https absent\");\r\n              JsonDate[0].image=\"https://scity.gmmspl.com:3000/\" +JsonDate[0].image\r\n          }\r\n          for(var commentobject in JsonDate[0].comments)\r\n          {\r\n          console.log(\"Acard comment image in :\",JsonDate[0].comments[commentobject].image_path);\r\n            if(!JsonDate[0].comments[commentobject].image_path || JsonDate[0].comments[commentobject].image_path.indexOf('https')!== -1 || JsonDate[0].comments[commentobject].image_path==\"\"){\r\n            console.log(\"https present\");\r\n          }\r\n          else{\r\n            console.log(\"https absent\");\r\n              JsonDate[0].comments[commentobject].image_path=\"https://scity.gmmspl.com:3000/\" +JsonDate[0].comments[commentobject].image_path;\r\n          }\r\n        }\r\n          this.setState({\r\n            SearchData: JsonDate[0],\r\n            ACardComments: JsonDate[0].comments,\r\n            ACardAttachments: JsonDate[0].complaint_media,\r\n            ComplaintCommentCount : JsonDate[0].comment_count\r\n          });\r\n\r\n          // if(this.state.SearchData.complaint_media[0].complaint_media_file == null){\r\n          //   this.state.AttachmentAvailable = false;\r\n          // }\r\n          // else{\r\n          //   this.state.AttachmentAvailable = true;\r\n          // }\r\n          // console.log(\"this.state.AttachmentAvailable = \", this.state.SearchData);\r\n\r\n          // console.log(\"ACardComments = \", this.state.SearchData);\r\n          //   sessionStorage.removeItem(\"complaint_cat_id\");\r\n          //   sessionStorage.removeItem(\"complaint_status_id\");\r\n          //   sessionStorage.removeItem(\"thread_id\");\r\n          // sessionStorage.setItem(\"complaint_cat_id\",SelectedType_SAT);\r\n          // sessionStorage.setItem(\"complaint_status_id\",complaintStatusValue_SAT);\r\n          //  sessionStorage.setItem(\"user_geoLat\",JsonDate[0].latitude);\r\n          // sessionStorage.setItem(\"user_geoLong\",JsonDate[0].longitude);\r\n          //   this.props.history.push(\"/my-complaints\");\r\n        }\r\n        // else {\r\n        //   this.setState({\r\n        //     SubmitAlert: true,\r\n        //     dialogBoxStatus: true,\r\n        //   });\r\n        // }\r\n      });\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n    sessionStorage.removeItem(\"complaint_cat_id\");\r\n    sessionStorage.removeItem(\"complaint_status_id\");\r\n    sessionStorage.removeItem(\"thread_id\");\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  LoadMore_SAT() {\r\n    if (this.state.commentsCounts <= 100) {\r\n      var currentCount = this.state.commentsCounts + 3;\r\n      this.state.commentsCounts = currentCount;\r\n      this.getComplaintDetails();\r\n    }\r\n  }\r\n\r\n  description = (e) => {\r\n    if (e.target.value != null) {\r\n      this.setState({\r\n        description: e.target.value,\r\n        descriptionValidate: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        description: e.target.value,\r\n        descriptionValidate: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  feedBack = (e) => {\r\n    if (e.target.value != null) {\r\n      this.setState({\r\n        feedBack: e.target.value,\r\n        feedBackValidate: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        feedBack: e.target.value,\r\n        feedBackValidate: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  sendComment() {\r\n    if (this.state.description != \"\") {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          user_id: sessionStorage.getItem(\"user_id\"),\r\n          token: sessionStorage.getItem(\"token\"),\r\n          comments: this.state.description,\r\n          complaint_cat_id: this.state.SearchData.ComplaintCategoryID,\r\n          thread_id: this.state.SearchData.complaint_id,\r\n        }),\r\n      };\r\n      fetch(\r\n        \"https://scity.gmmspl.com:3000/complaint/addComment\",\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          // console.log(\"APIResponse = \", this.state.APIResponse);\r\n          if (\r\n            this.state.APIResponse.message === \"Comment  added successfully\"\r\n          ) {\r\n            toast.success(\"Comment successfully added\", {\r\n              position: \"top-center\",\r\n              autoClose: 500,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              onClose: () => this.getComplaintDetails(),\r\n            });\r\n            //   var JsonDate = this.state.APIResponse.Details;\r\n            this.setState({\r\n              description: \"\",\r\n              descriptionValidate: false,\r\n            });\r\n          } else if (\r\n            this.state.APIResponse.message === \"Failed to authenticate token.\"\r\n          ) {\r\n            toast.error(\"Please login, your session has expired\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              onClose: () => this.props.history.push(\"/\"),\r\n            });\r\n          } else {\r\n            toast.error(\"Unable to add comment, please try again\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  DeleteACard = () => {\r\n    // console.log(\"CardID = \", CardID);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        comment_thread_id: this.state.deteledID,\r\n      }),\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/complaint/deleteComment\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.message === \"Comment deleted successfully\") {\r\n          this.DeleteDialogClose();\r\n          this.getComplaintDetails();\r\n        }\r\n      });\r\n  };\r\n\r\n  getFeedbakRating = (e) => {\r\n    this.setState({\r\n      rating: e.target.value,\r\n    });\r\n    console.log(\"e.target.value = \", e.target.value);\r\n  };\r\n\r\n  submitFeedBack_SAT() {\r\n    console.log(\"Rating = \", this.state.rating);\r\n    console.log(\"feedBack = \", this.state.feedBack);\r\n\r\n    if (this.state.rating || this.state.feedBack) {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          user_id: sessionStorage.getItem(\"user_id\"),\r\n          token: sessionStorage.getItem(\"token\"),\r\n          feedback_rating: this.state.rating,\r\n          feedback_description: this.state.feedBack,\r\n          thread_id: this.state.SearchData.complaint_id,\r\n        }),\r\n      };\r\n      fetch(\r\n        \"https://scity.gmmspl.com:3000/complaint/complaintfeedback\",\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          // console.log(\"APIResponse = \", this.state.APIResponse);\r\n          if (this.state.APIResponse.message === \"Feedback Updated\") {\r\n            this.getComplaintDetails();\r\n            toast.success(\"Thank you for your feedback.\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n          } else {\r\n            toast.error(\r\n              \"Something went wrong. Your feedback is not submitted. Please try again.\",\r\n              {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              }\r\n            );\r\n          }\r\n        });\r\n    } else {\r\n      toast.error(\"Please give your feedback.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n  getMimeType=(file_path)=>{\r\n    const extension = file_path.substr(file_path.lastIndexOf(\"/\") + 1).split('.')[1];\r\n    if(extension=='jpg' || extension=='jpeg'){\r\n      return 'image/jpeg';\r\n    }else if(extension=='png'){\r\n      return 'image/jpeg';\r\n    }else if(extension=='pdf'){\r\n      return 'application/pdf';\r\n    }else if(extension=='doc'){\r\n      return 'application/msword';\r\n    }else if(extension=='docx'){\r\n      return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\r\n    }else if(extension=='xlsx'){\r\n      return 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\r\n    }else if(extension=='xls'){\r\n      return 'application/vnd.ms-excel';\r\n    }else if(extension=='txt'){\r\n      return 'text/plain';\r\n    }else if(extension=='ppt'){\r\n      return 'application/vnd.ms-powerpoint';\r\n    }else if(extension=='pptx'){\r\n      return 'application/vnd.openxmlformats-officedocument.presentationml.presentation';\r\n    }else if(extension=='mp3'){\r\n      return 'audio/mpeg';\r\n    }else if(extension=='mp4'){\r\n      return 'video/mp4';\r\n    }\r\n\r\n  }\r\n  getTruncatedName=(attachmentname)=>{\r\n    if(attachmentname.length>25)\r\n    {\r\n      var truncatename= attachmentname.substr(0,10)+'...'+attachmentname.substr(attachmentname.length-8,attachmentname.length-1)\r\n      return truncatename;\r\n    }\r\n    else{\r\n    return(attachmentname);\r\n    }\r\n  }\r\ndownloadAttachmentFile =(AttachmentDetails) => {\r\n        var file_path=\"https://scity.gmmspl.com:3000/\" + AttachmentDetails.complaint_media_file;\r\n        var extension= file_path.substr(file_path.lastIndexOf(\"/\") + 1).split('.')[1];\r\n        var mime = this.getMimeType(file_path);\r\n        this.setState({progressbarVisible:true})\r\n        axios.get(file_path, {responseType: 'blob',onDownloadProgress: (progressEvent) => {\r\n        this.setState({progress:Math.round((progressEvent.loaded * 100) / progressEvent.total)})  \r\n        }}).then((res) => {\r\n           this.setState({progress:0})\r\n           this.setState({progressbarVisible:false})\r\n          if(Capacitor.getPlatform()=='web')\r\n          {\r\n          fileDownload(res.data,'SmartCityComplaintAttachment.'+extension);\r\n          }else\r\n          {\r\n            var date = new Date();\r\n           var reader = new FileReader();\r\n            reader.readAsDataURL(res.data);\r\n            reader.onloadend = async function () {\r\n            var base64String = reader.result;\r\n            console.log('Base64 String - ', base64String);\r\n            const savedFile = await Filesystem.writeFile({\r\n              path :'SmartCityComplaintAttachment'+Math.floor(date.getTime() + date.getSeconds() / 2) +'.'+extension,\r\n              data : base64String,\r\n              directory : Directory.Documents,\r\n            })\r\n            alert(\"Your file is stored into DOCUMENTS directory of your device\")\r\n            const path =savedFile.uri;   \r\n            const mimeType =mime;\r\n            FileOpener.showOpenWithDialog(path,mimeType).then(()=>console.log('File is opened')).catch(error=>console.log('error while opening File : ',error));\r\n            }\r\n          }\r\n          });     \r\n  };\r\n\r\n  Delete = (CardID) => {\r\n    this.setState({\r\n      DeleteSubmit: true,\r\n      DeleteDialogStatus: true,\r\n      deteledID: CardID.complaint_thread_id,\r\n    });\r\n  };\r\n\r\n  DeleteDialogClose = () => {\r\n    this.setState({\r\n      DeleteDialogStatus: false,\r\n    });\r\n  };\r\n\r\n  ReOpenComplaint = (CardID) => {\r\n    console.log(\"CardID = \", CardID);\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        complaint_id: CardID,\r\n        complaint_status_id: 5,\r\n        is_admin: false,\r\n      }),\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/complaint/updateComplaintStatus\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.message === \"Data Updated successfully\") {\r\n          // this.DeleteDialogClose();\r\n          this.getComplaintDetails();\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <LoadingOverlay\r\n                  active={this.state.isActive}\r\n                  spinner\r\n                  text='Downloading Your file please wait...'\r\n                  >\r\n      <div>\r\n        {/* <Header /> */}\r\n        {/* <Container className=\"all-header-space\"></Container> */}\r\n        <Container fluid className=\"header-style\">\r\n\r\n          \r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              <Link to=\"/my-complaints\">\r\n                <Tooltip\r\n                  title=\"Dashboard\"\r\n                  placement=\"top\"\r\n                  TransitionProps={{ timeout: 600 }}\r\n                >\r\n                  <MDBIcon\r\n                    icon=\"chevron-circle-left\"\r\n                    size=\"2x\"\r\n                    className=\"back-arrow-icon\"\r\n                  />\r\n                </Tooltip>\r\n              </Link>\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">\r\n                Complaint Details\r\n              </label>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n          {this.state.progressbarVisible && <Row>\r\n           <div style={{height:15,backgroundColor:'rgba(0,0,0,0.3)',width:this.state.progress+'%',color:'white',fontWeight:'600',fontSize:12,textAlign:'center',borderRadius:5}}>\r\n              {this.state.progress==0 ? '' : this.state.progress+'%'}\r\n            </div>\r\n          </Row>}\r\n        </Container>\r\n\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            {/* <Row className=\"pt-3\">\r\n                <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"1\" xl=\"1\" xxl=\"1\" className=\"back-arrow-icon-style pl-4\">\r\n                  <Link to = \"/my-complaints\">\r\n                    <MDBIcon icon=\"arrow-circle-left\" size=\"2x\" className=\"back-arrow-icon\"/>\r\n                  </Link>\r\n                </Col>\r\n                <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"11\" xl=\"11\" xxl=\"11\" className=\"pr-4 start-new-Idea-heading\">\r\n                  Complaint Details\r\n                </Col>\r\n              </Row> */}\r\n            <hr></hr>\r\n            <div class=\"details-container-style inner-container-style-collaboration\">\r\n              <Container className=\"p-4\">\r\n                <Row className=\"card-details-title-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <div\r\n                      id=\"card-details-category\"\r\n                      class=\"tab-card-heading-style\"\r\n                    >\r\n                      <label>{this.state.SearchData.complaint_type}</label>\r\n                    </div>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"card-details-title-style\"\r\n                  >\r\n                    {/* <span class=\"card-details-category-style\"><label>Title :&nbsp;</label></span> */}\r\n                    <label>{this.state.SearchData.ComplaintTitle}</label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"card-details-title-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"card-details-description-style\"\r\n                  >\r\n                    {/* <span class=\"card-details-category-style\"><label>Description :&nbsp;</label></span> */}\r\n                    <label>{this.state.SearchData.ComplaintDescription}</label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"card-details-title-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"8\" sm=\"8\" md=\"8\" lg=\"8\" xl=\"8\" xxl=\"8\">\r\n                    <span class=\"card-details-category-style\">\r\n                      <label>Status Type :&nbsp;</label>\r\n                    </span>\r\n                    <span class=\"card-details-category-value-style\">\r\n                      <label>{this.state.SearchData.ComplaintStatus}</label>\r\n                    </span>\r\n                  </Col>\r\n                  <Col\r\n                    xs=\"4\"\r\n                    sm=\"4\"\r\n                    md=\"2\"\r\n                    lg=\"2\"\r\n                    xl=\"2\"\r\n                    xxl=\"2\"\r\n                    className=\"text-align-right\"\r\n                  >\r\n                    {this.state.SearchData.ComplaintStatus == \"Closed\" && (\r\n                      <label\r\n                        htmlFor=\"myInput\"\r\n                        className=\"pl-2 uploadbuttonstyle\"\r\n                        onClick={() =>\r\n                          this.ReOpenComplaint(\r\n                            this.state.SearchData.complaint_id\r\n                          )\r\n                        }\r\n                      >\r\n                        Reopen\r\n                      </label>\r\n                    )}\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                {this.state.SearchData.ComplaintStatus === \"Closed\" &&\r\n                  !this.state.SearchData.feedback_submit_flag && (\r\n                    <Row className=\"pt-1 card-details-title-row-style\">\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                      <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                        <span class=\"card-details-category-style\">\r\n                          <label>Feedback &nbsp;</label>\r\n                        </span>\r\n                        <Rating\r\n                          name=\"simple-controlled\"\r\n                          value={this.state.rating}\r\n                          onChange={this.getFeedbakRating}\r\n                        />\r\n                      </Col>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                    </Row>\r\n                  )}\r\n\r\n                {(this.state.SearchData.ComplaintStatus === \"Closed\" ||\r\n                  this.state.SearchData.ComplaintStatus === \"Reopen\") &&\r\n                  this.state.SearchData.feedback_submit_flag && (\r\n                    <Row className=\"pt-1 card-details-title-row-style\">\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                      <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                        <span class=\"card-details-category-style\">\r\n                          <label>Feedback &nbsp;</label>\r\n                        </span>\r\n                        <Rating\r\n                          name=\"simple-controlled\"\r\n                          value={this.state.SearchData.feedback_rating}\r\n                        />\r\n                      </Col>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                    </Row>\r\n                  )}\r\n\r\n                {this.state.SearchData.ComplaintStatus === \"Closed\" &&\r\n                  !this.state.SearchData.feedback_submit_flag && (\r\n                    <Row className=\"card-details-title-row-style\">\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                      <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                        <TextField\r\n                          id=\"outlined-textarea\"\r\n                          label=\"Please share your valuable feedback.\"\r\n                          value={this.state.feedBack}\r\n                          onChange={this.feedBack}\r\n                          multiline\r\n                        //  variant=\"outlined\"\r\n                          rows={2}\r\n                          className=\"start-new-idea-description-box\"\r\n                          onInput={(e) =>\r\n                            (e.target.value = e.target.value.slice(0, 500))\r\n                          }\r\n                        />\r\n                      </Col>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                    </Row>\r\n                  )}\r\n                {(this.state.SearchData.ComplaintStatus === \"Closed\" ||\r\n                  this.state.SearchData.ComplaintStatus === \"Reopen\") &&\r\n                  this.state.SearchData.feedback_submit_flag && (\r\n                    <Row className=\"card-details-title-row-style feedback-style-message\">\r\n                      <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                      <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                        <span class=\"card-details-category-style feedback-style \">\r\n                          <label>Feedback Message :&nbsp;</label>\r\n                        </span>\r\n                      </Col>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                    </Row>\r\n                  )}\r\n                {(this.state.SearchData.ComplaintStatus === \"Closed\" ||\r\n                  this.state.SearchData.ComplaintStatus === \"Reopen\") &&\r\n                  this.state.SearchData.feedback_submit_flag && (\r\n                    <Row>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                      <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                        <span class=\"card-details-category-value-style feedback-style\">\r\n                          <label>\r\n                            {this.state.SearchData.feedback_description}\r\n                          </label>\r\n                        </span>\r\n                      </Col>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                    </Row>\r\n                  )}\r\n\r\n                {this.state.SearchData.ComplaintStatus === \"Closed\" &&\r\n                  !this.state.SearchData.feedback_submit_flag && (\r\n                    <Row className=\"pt-3 pb-3 card-details-title-row-style\">\r\n                      <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                      <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                        <Row className=\"\">\r\n                          <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                            <Button\r\n                              className=\"signup-button-style\"\r\n                              onClick={this.submitFeedBack_SAT}\r\n                            >\r\n                              {LoginHeadings.Profile_SUBMIT_HMD}\r\n                            </Button>\r\n                            <ToastContainer\r\n                              position=\"top-center\"\r\n                              autoClose={5000}\r\n                              hideProgressBar={false}\r\n                              newestOnTop\r\n                              closeOnClick\r\n                              rtl={false}\r\n                              pauseOnFocusLoss\r\n                              draggable\r\n                              pauseOnHover={true}\r\n                              className=\"toaster-style\"\r\n                            />\r\n                          </Col>\r\n                          <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                    </Row>\r\n                  )}\r\n\r\n                <Row className=\"card-details-title-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <Row>\r\n                      <Col\r\n                        xs=\"1\"\r\n                        sm=\"1\"\r\n                        md=\"1\"\r\n                        lg=\"1\"\r\n                        xl=\"1\"\r\n                        xxl=\"1\"\r\n                        className=\"pr-0\"\r\n                      >\r\n                        <MDBIcon\r\n                          icon=\"map-marker-alt\"\r\n                          className=\"red-text\"\r\n                          size=\"lg\"\r\n                        />\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"11\"\r\n                        sm=\"11\"\r\n                        md=\"11\"\r\n                        lg=\"11\"\r\n                        xl=\"11\"\r\n                        xxl=\"11\"\r\n                        className=\"\"\r\n                      >\r\n                        <label class=\"card-details-description-style\">\r\n                          {this.state.SearchData.address}\r\n                        </label>\r\n                      </Col>\r\n                      <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\">\r\n                        <UserGeoMapComponent\r\n                          long={this.state.SearchData.longitude}\r\n                          lat={this.state.SearchData.latitude}\r\n                          address={this.state.SearchData.address}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n              \r\n                {this.state.ACardAttachments.length>0 &&(<Row className=\"card-details-title-row-style attachment-row-style\">\r\n                 \r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    {this.state.ACardAttachments.map((Attachment) => (\r\n                      <Row className=\"pt-1 pb-1\" id=\"downloadFile\">\r\n                        <Button\r\n                         color=\"transparent\"\r\n                         onClick={()=>{this.downloadAttachmentFile(Attachment)}}\r\n                        >\r\n                          <Col\r\n                            xs=\"2\"\r\n                            sm=\"2\"\r\n                            md=\"1\"\r\n                            lg=\"1\"\r\n                            xl=\"1\"\r\n                            xxl=\"1\"\r\n                            className=\"pl-3\"\r\n                          >\r\n                            {(Attachment.complaint_media_file\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"png\" ||\r\n                              Attachment.complaint_media_file\r\n                                .split(\"/\")\r\n                                .pop()\r\n                                .split(\".\")\r\n                                .pop() == \"jpg\" ||\r\n                              Attachment.complaint_media_file\r\n                                .split(\"/\")\r\n                                .pop()\r\n                                .split(\".\")\r\n                                .pop() == \"jpeg\") && (\r\n                              <MDBIcon\r\n                                far\r\n                                icon=\"image\"\r\n                                size=\"lg\"\r\n                                className=\"image-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {Attachment.complaint_media_file\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"pdf\" && (\r\n                              <MDBIcon\r\n                                icon=\"file-pdf\"\r\n                                size=\"lg\"\r\n                                className=\"doc-file-icon-style\"\r\n                              />\r\n                            )}\r\n                             {Attachment.complaint_media_file\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"csv\" && (\r\n                              <FontAwesomeIcon\r\n                                icon={faFileCsv}\r\n                                color=\"green\"\r\n                                size=\"lg\">\r\n                                </FontAwesomeIcon>\r\n                            )}\r\n                            {(Attachment.complaint_media_file\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"doc\" ||\r\n                              Attachment.complaint_media_file\r\n                                .split(\"/\")\r\n                                .pop()\r\n                                .split(\".\")\r\n                                .pop() == \"docx\") && (\r\n                              <MDBIcon\r\n                                icon=\"file-word\"\r\n                                size=\"lg\"\r\n                                className=\"word-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {Attachment.complaint_media_file\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"xlsx\" && (\r\n                              <MDBIcon\r\n                                icon=\"file-excel\"\r\n                                size=\"lg\"\r\n                                className=\"xlsx-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {Attachment.complaint_media_file\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"txt\" && (\r\n                              <MDBIcon\r\n                                icon=\"file-alt\"\r\n                                size=\"lg\"\r\n                                className=\"txt-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {(Attachment.complaint_media_file\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"mp3\" ||\r\n                              Attachment.complaint_media_file\r\n                                .split(\"/\")\r\n                                .pop()\r\n                                .split(\".\")\r\n                                .pop() == \"mp4\") && (\r\n                              <MDBIcon\r\n                                icon=\"video\"\r\n                                size=\"lg\"\r\n                                className=\"media-file-icon-style\"\r\n                              />\r\n                            )}\r\n                            {(Attachment.complaint_media_file\r\n                              .split(\"/\")\r\n                              .pop()\r\n                              .split(\".\")\r\n                              .pop() == \"ppt\" ||\r\n                              Attachment.complaint_media_file\r\n                                .split(\"/\")\r\n                                .pop()\r\n                                .split(\".\")\r\n                                .pop() == \"pptx\") && (\r\n                              <MDBIcon\r\n                                icon=\"file-powerpoint\"\r\n                                size=\"lg\"\r\n                                className=\"ppt-file-icon-style\"\r\n                              />\r\n                            )}\r\n                          </Col>\r\n                          <Col xs=\"10\" sm=\"10\" md=\"11\" lg=\"11\" xl=\"11\" xxl=\"11\">\r\n                            {this.getTruncatedName(Attachment.complaint_media_file.split(\"/\").pop())}\r\n                          </Col>\r\n                        </Button>\r\n                      </Row>\r\n                    ))}\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>)}\r\n              \r\n              \r\n                <Row className=\"pt-3 pb-3\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <Row>\r\n                      <Col\r\n                        xs=\"2\"\r\n                        sm=\"2\"\r\n                        md=\"2\"\r\n                        lg=\"2\"\r\n                        xl=\"2\"\r\n                        className=\"details-profile-image-col-style\"\r\n                      >\r\n                        <img\r\n                          src={this.state.SearchData.image}\r\n                          alt=\"\"\r\n                          class=\"details-profile-image-style\"\r\n                        />\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"10\"\r\n                        sm=\"10\"\r\n                        md=\"10\"\r\n                        lg=\"10\"\r\n                        xl=\"10\"\r\n                        className=\"details-image-imfo-style pr-0\"\r\n                      >\r\n                        <Row className=\"details-image-profile-name-style\">\r\n                          <label>{this.state.SearchData.full_name}</label>\r\n                        </Row>\r\n                        <Row className=\"card-image-imfo-row-style\">\r\n                          <label>\r\n                            {this.state.SearchData.ComplaintPostdedDate}\r\n                          </label>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <hr></hr>\r\n\r\n                <Row className=\"details-comment-count-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <Row>\r\n                      <Col\r\n                        xs=\"1\"\r\n                        sm=\"1\"\r\n                        md=\"1\"\r\n                        lg=\"1\"\r\n                        xl=\"1\"\r\n                        xxl=\"1\"\r\n                        className=\"pr-0\"\r\n                      >\r\n                        <MDBIcon\r\n                          icon=\"comment\"\r\n                          className=\"add-comment-style\"\r\n                          size=\"lg\"\r\n                        />\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"11\"\r\n                        sm=\"11\"\r\n                        md=\"11\"\r\n                        lg=\"11\"\r\n                        xl=\"11\"\r\n                        xxl=\"11\"\r\n                        className=\"\"\r\n                      >\r\n                        <p className=\"card-comments-style\">\r\n                          <label>\r\n                            <span>{this.state.SearchData.comment_count}</span>{\" \"}\r\n                            <span class=\"comments-count-style\">Comments</span>\r\n                          </label>\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"card-details-title-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"card-details-description-style\"\r\n                  >\r\n                    {this.state.ACardComments.map((AComent) => (\r\n                      <Container className=\"comment-cards-row-style pt-2 pb-0 pl-0 pr-0\">\r\n                        <Card className=\"comment-cards-row-style\">\r\n                          <Row className=\"p-1\">\r\n                            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n                              <img\r\n                                src={AComent.image_path}\r\n                                alt=\"\"\r\n                                class=\"card-profile-image-style\"\r\n                              />\r\n                            </Col>\r\n                            <Col xs=\"9\" sm=\"9\" md=\"9\" lg=\"9\" xl=\"9\" xxl=\"9\">\r\n                              <label class=\"mb-0 cards-lable-style\">\r\n                                {AComent.full_name}\r\n                                <span class=\"commet-postedOnn-date\">\r\n                                  {\" \"}\r\n                                  - {AComent.submission_date}\r\n                                </span>\r\n                              </label>\r\n                              <p class=\"card-comment-description-style\">\r\n                                {AComent.comments}\r\n                              </p>\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"1\"\r\n                              sm=\"1\"\r\n                              md=\"1\"\r\n                              lg=\"1\"\r\n                              xl=\"1\"\r\n                              xxl=\"1\"\r\n                              className=\"pl-0\"\r\n                            >\r\n                              {AComent.user_id ==\r\n                                sessionStorage.getItem(\"user_id\") && (\r\n                                <div>\r\n                                  <MDBIcon\r\n                                    icon=\"trash\"\r\n                                    onClick={() => this.Delete(AComent)}\r\n                                  />\r\n                                  {this.state.DeleteSubmit && (\r\n                                    <Dialog\r\n                                      open={this.state.DeleteDialogStatus}\r\n                                      onClose={this.DeleteDialogClose}\r\n                                      aria-labelledby=\"alert-dialog-title\"\r\n                                      aria-describedby=\"alert-dialog-description\"\r\n                                    >\r\n                                      <DialogTitle id=\"simple-dialog-title\">\r\n                                        Are you sure you want to delete comment?\r\n                                        <DialogActions>\r\n                                          <Button\r\n                                            onClick={this.DeleteACard}\r\n                                            color=\"primary\"\r\n                                          >\r\n                                            Yes\r\n                                          </Button>\r\n                                          <Button\r\n                                            onClick={this.DeleteDialogClose}\r\n                                            color=\"primary\"\r\n                                            autoFocus\r\n                                          >\r\n                                            No\r\n                                          </Button>\r\n                                        </DialogActions>\r\n                                      </DialogTitle>\r\n                                    </Dialog>\r\n                                  )}\r\n                                </div>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                          {/* <Card.Text className=\"p-1\">\r\n                                \r\n                              </Card.Text> */}\r\n                        </Card>\r\n                        <hr></hr>\r\n                      </Container>\r\n                    ))}\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-2\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"9\" xl=\"9\" xxl=\"9\">\r\n                    <Row className=\"\">\r\n                      <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                      <Col\r\n                        xs=\"6\"\r\n                        sm=\"6\"\r\n                        md=\"6\"\r\n                        lg=\"6\"\r\n                        xl=\"6\"\r\n                        xxl=\"6\"\r\n                        className=\"load-more-comments-text-style\"\r\n                      >\r\n                        <label>\r\n                          {this.state.ComplaintCommentCount >\r\n                            this.state.commentsCounts && (\r\n                            <Link onClick={this.LoadMore_SAT}>\r\n                              Load more comments...                            </Link>\r\n                          )}\r\n                        </label>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\">\r\n                    <Row className=\"card-details-title-row-style\">\r\n                      <Col\r\n                        xs=\"12\"\r\n                        sm=\"12\"\r\n                        md=\"12\"\r\n                        lg=\"12\"\r\n                        xl=\"12\"\r\n                        xxl=\"12\"\r\n                        className=\"card-details-title-style\"\r\n                      >\r\n                        {this.state.SearchData.ComplaintStatus != \"Closed\" && (\r\n                          <TextField\r\n                            id=\"outlined-textarea\"\r\n                            label=\"Comment\"\r\n                            value={this.state.description}\r\n                            onChange={this.description}\r\n                            multiline\r\n                           // variant=\"outlined\"\r\n                            rows={2}\r\n                            onInput={(e) =>\r\n                              (e.target.value = e.target.value.slice(0, 250))\r\n                            }\r\n                            className=\"p-0 start-new-idea-description-box\"\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\" className=\"p-0\">\r\n                                  <IconButton>\r\n                                    <i\r\n                                      class=\"fas fa-paper-plane fa-xs add-comment-style\"\r\n                                      onInput={(e) =>\r\n                                        (e.target.value = e.target.value.slice(\r\n                                          0,\r\n                                          500\r\n                                        ))\r\n                                      }\r\n                                      onClick={this.sendComment}\r\n                                    ></i>\r\n                                  </IconButton>\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n              </Container>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        {/* <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover={false}\r\n                className=\"toaster-style\"\r\n                /> */}\r\n        <Footer />\r\n       \r\n      </div>\r\n      </LoadingOverlay>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default ComplaintsDetailsByID;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\IncidentReport\\my-Incident-list\\my-Incident-list.js",["1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121"],"import React, { Component } from \"react\";\r\nimport Header from \"../../Dashboard-header\";\r\nimport Footer from \"../../Footer\";\r\nimport ComplaintDetails from \"../../../jsonFiles/CollaborationJson/complaintDetails\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Link } from \"react-router-dom\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport LinesEllipsis from \"react-lines-ellipsis\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport footer_data from \"../../../jsonFiles/DashboardInfoJson/DashboardFooter\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nclass MyIncidentList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      APIResponse: \"\",\r\n      SearchData: ComplaintDetails.Search_data,\r\n      isOpen: false,\r\n      submit: false,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      eventTarget: \"\",\r\n      footer: footer_data.paths,\r\n      isLogin: \"\",\r\n    };\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      document.body.style = \"background-image: url();\";\r\n      document.body.style = \"background: #F9F9F9\";\r\n    }\r\n\r\n    this.getAPIListSearchedList();\r\n  }\r\n\r\n  getAPIListSearchedList() {\r\n    var incident_cat_id_SAT = Number(sessionStorage.getItem(\"incident_cat_id\"));\r\n    if (incident_cat_id_SAT == 0) {\r\n      incident_cat_id_SAT = null;\r\n    }\r\n\r\n    var incident_status_id_SAT = Number(\r\n      sessionStorage.getItem(\"incident_status_id\")\r\n    );\r\n    if (incident_status_id_SAT == 0) {\r\n      incident_status_id_SAT = null;\r\n    }\r\n\r\n    var incident_id_SAT = Number(sessionStorage.getItem(\"incident_id\"));\r\n    if (incident_id_SAT == 0) {\r\n      incident_id_SAT = null;\r\n    }\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        incident_cat_id: incident_cat_id_SAT,\r\n        incident_status_id: incident_status_id_SAT,\r\n        incident_id: incident_id_SAT,\r\n      }),\r\n    };\r\n\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/incident/searchincident\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.message === \"Data Found\") {\r\n          var JsonDate = this.state.APIResponse.data;\r\n          this.setState({\r\n            SearchData: JsonDate,\r\n          });\r\n         // sessionStorage.removeItem(\"incident_cat_id\");\r\n         // sessionStorage.removeItem(\"incident_status_id\");\r\n         // sessionStorage.removeItem(\"incident_id\");\r\n        \r\n        }\r\n        // else {\r\n        //   this.setState({\r\n        //     SubmitAlert: true,\r\n        //     dialogBoxStatus: true,\r\n        //   });\r\n        // }\r\n      });\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n    sessionStorage.removeItem(\"incident_cat_id\");\r\n    sessionStorage.removeItem(\"incident_status_id\");\r\n    sessionStorage.removeItem(\"incident_id\");\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  CardDetails = (search_data) => {\r\n    sessionStorage.setItem(\"incidentId\", search_data.incident_id);\r\n    this.props.history.push(\"/IncidentDetailsByID\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <Header /> */}\r\n        {/* <Container className=\"inner-header-space\"></Container> */}\r\n\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              <Link to={sessionStorage.getItem(\"incident_back\")} onClick={()=>{\r\n                 sessionStorage.removeItem(\"incident_cat_id\");\r\n                  sessionStorage.removeItem(\"incident_status_id\");\r\n                  sessionStorage.removeItem(\"incident_id\");\r\n              }}>\r\n                <Tooltip\r\n                  title=\"Dashboard\"\r\n                  placement=\"top\"\r\n                  TransitionProps={{ timeout: 600 }}\r\n                >\r\n                  <MDBIcon\r\n                    icon=\"chevron-circle-left\"\r\n                    size=\"2x\"\r\n                    className=\"back-arrow-icon\"\r\n                  />\r\n                </Tooltip>\r\n              </Link>\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">My Incident List</label>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        {/* <Container className=\"tab-card-container-style\">\r\n            <Row className=\"pollsSurveys-heading-style\">\r\n              <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\" className=\"pollsSurveys-back-button-style\">\r\n                <Link to = \"/search-incident\">\r\n                  <KeyboardBackspaceIcon className=\"backButtonColor\" />\r\n                </Link>  \r\n              </Col>\r\n                <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\" className=\"\"></Col>\r\n                <Col xs=\"8\" sm=\"8\" md=\"8\" lg=\"8\" xl=\"8\" xxl=\"8\" className=\"pollsSurveys-heading-styles\">\r\n                  <img src={ComplaintDetails.Complaint_Search_ICON} alt=\"\" className=\"pollsSurveys-image-style\" />\r\n                  <label>My Incident List</label>\r\n                </Col>\r\n            </Row>\r\n          </Container> */}\r\n        {/* <Container className=\"p-4\"> */}\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            <div class=\"details-container-style inner-container-style-collaboration\">\r\n              <Container className=\"p-4\">\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table table-container-style\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th\r\n                          scope=\"col\"\r\n                          class=\"table-font-style table-heading-style\"\r\n                        >\r\n                          ID\r\n                        </th>\r\n                        <th\r\n                          scope=\"col\"\r\n                          class=\"table-font-style table-heading-style\"\r\n                        >\r\n                          Title\r\n                        </th>\r\n                        <th\r\n                          scope=\"col\"\r\n                          class=\"table-font-style table-heading-style\"\r\n                        >\r\n                          Status\r\n                        </th>\r\n                        <th\r\n                          scope=\"col\"\r\n                          class=\"table-font-style table-heading-style\"\r\n                        ></th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {this.state.SearchData.map((search_data, index) => (\r\n                        <tr>\r\n                          <th scope=\"row\" class=\"table-font-style\">\r\n                            {search_data.incident_id}\r\n                          </th>\r\n                          <td class=\"table-font-style\">\r\n                             <div className=\"table-title-div-ellipsis \">\r\n                                <span className=\"table-title-ellipsis\">\r\n                                  {search_data.incident_title}\r\n                                </span>\r\n                              </div>\r\n                          </td>\r\n                          <td class=\"table-font-style table-status-width\">\r\n                            {search_data.incident_status_type === \"Open\" && (\r\n                              <MDBIcon\r\n                                icon=\"circle\"\r\n                                size=\"sm\"\r\n                                className=\"circle-icon-style circle-icon-style-open\"\r\n                              />\r\n                            )}\r\n                            {search_data.incident_status_type ===\r\n                              \"In Progress\" && (\r\n                              <MDBIcon\r\n                                icon=\"circle\"\r\n                                size=\"sm\"\r\n                                className=\"circle-icon-style circle-icon-style-inProgress\"\r\n                              />\r\n                            )}\r\n                            {search_data.incident_status_type ===\r\n                              \"Rejected\" && (\r\n                              <MDBIcon\r\n                                icon=\"circle\"\r\n                                size=\"sm\"\r\n                                className=\"circle-icon-style circle-icon-style-regected\"\r\n                              />\r\n                            )}\r\n                            {search_data.incident_status_type === \"Closed\" && (\r\n                              <MDBIcon\r\n                                icon=\"circle\"\r\n                                size=\"sm\"\r\n                                className=\"circle-icon-style circle-icon-style-closed\"\r\n                              />\r\n                            )}\r\n                            {search_data.incident_status_type}\r\n                          </td>\r\n                          <td class=\"table-font-style\">\r\n                            <MDBIcon\r\n                              far\r\n                              icon=\"eye\"\r\n                              size=\"sm\"\r\n                              className=\"complaint-view-details-eye-icon\"\r\n                              onClick={() => this.CardDetails(search_data)}\r\n                            />\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </Container>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n        {/* </Container> */}\r\n        <Row className=\"pt-5 pb-5\"></Row>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyIncidentList;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Trends\\LatestTrends\\LatestTrends.js",["1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140"],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\NearBy\\defaultMapNearby\\defaultMapNearby.js",["1141","1142","1143","1144","1145","1146"],"import React, { Component } from \"react\";\r\nimport Header from \"../../Dashboard-header\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Footer from \"../../Footer\";\r\nimport LoadMaps from \"../nearBy-info\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport headerProfile_img from \"../../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nclass DefaultMapNearby extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      submit: false,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      eventTarget: \"\",\r\n      //  footer: footer_data.paths,\r\n      isLogin: \"\",\r\n    };\r\n    // this.openStartNewIdeaForm = this.openStartNewIdeaForm.bind(this);\r\n    // this.searchCardsValidate = this.searchCardsValidate.bind(this);\r\n    // this.search_SAT = this.search_SAT.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.openMenu = this.openMenu.bind(this);\r\n    this.menuClose = this.menuClose.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              <Link to=\"/dashboard-nearBy\">\r\n                <Tooltip\r\n                  title=\"Near by\"\r\n                  placement=\"top\"\r\n                  TransitionProps={{ timeout: 600 }}\r\n                >\r\n                  <MDBIcon\r\n                    icon=\"chevron-circle-left\"\r\n                    size=\"2x\"\r\n                    className=\"back-arrow-icon\"\r\n                  />\r\n                </Tooltip>\r\n              </Link>\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">\r\n                {sessionStorage.getItem(\"nearByTitle\")}\r\n              </label>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        {/* <Container className=\"all-header-space\"></Container> */}\r\n        {/* <Row className=\"pt-1\">\r\n              <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"1\" xl=\"1\" xxl=\"1\" className=\"back-arrow-icon-style pl-4\">\r\n                <Link  to = \"/dashboard-nearBy\">\r\n                  <MDBIcon icon=\"arrow-circle-left\" size=\"2x\" className=\"back-arrow-icon\"/>\r\n                </Link>\r\n              </Col>\r\n              <Col xs=\"7\" sm=\"7\" md=\"7\" lg=\"10\" xl=\"10\" xxl=\"10\" className=\"line-heightmaps start-new-Idea-heading\">\r\n                Select Location\r\n              </Col>\r\n              <Col xs=\"3\" sm=\"3\" md=\"3\" lg=\"1\" xl=\"1\" xxl=\"1\" className=\" start-new-Idea-heading Doneright\">\r\n              \r\n              </Col>\r\n            </Row>\r\n            <hr className=\"bold-hr\"></hr> */}\r\n        <LoadMaps />\r\n\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DefaultMapNearby;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\NearBy\\nearBy-info\\nearBy-info.js",["1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157","1158"],"import React, { Component } from \"react\";\r\nimport { loadModules } from 'esri-loader';\r\nimport { Map   }  from '@esri/react-arcgis';\r\nimport \"./nearBy-info.css\"\r\n\r\nconst options = {\r\n  url: 'https://js.arcgis.com/4.20/'\r\n};\r\n\r\nconst styles =  {\r\n  \r\n\r\n  container: {\r\n    width: '100vw',\r\n    padding:'10px',\r\n  },\r\n  mapDiv: {\r\n    padding: '5px',\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n}\r\n\r\nclass NearByInfo extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      facilities: [],\r\n      id:-1\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate() {\r\n    return false;\r\n  }\r\n\r\n  getFacilitesByType() {\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        {\r\n          \"user_id\": sessionStorage.getItem(\"user_id\"),\r\n          \"token\": sessionStorage.getItem(\"token\"),\r\n          \"id\": this.state.id\r\n        }\r\n      )\r\n    };\r\n    var data= fetch('https://scity.gmmspl.com:3000/facilitytype/getFacilityType', requestOptions)\r\n      .then(response => response.json())\r\n      .then(\r\n        (json) => {\r\n          this.setState({facilities:json.data});\r\n\r\n         this.consturctMap();\r\n        }\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    //alert(\"test\",this.props.location.search);\r\n    this.state.id=sessionStorage.getItem(\"nearById\");\r\n    this.getFacilitesByType();\r\n  }\r\n\r\n  \r\n  async consturctMap(){\r\n    const [Map,Locator,\r\n      MapView,\r\n      FeatureLayer,\r\n      SimpleMarkerSymbol,\r\n      Graphic, GraphicsLayer,\r\n      PictureMarkerSymbol,\r\n      Point, WebStyleSymbol, Track,Popup,PopupTemplate ] =  await loadModules(['esri/Map',\"esri/tasks/Locator\",\r\n        'esri/views/MapView', 'esri/layers/FeatureLayer', 'esri/symbols', 'esri/Graphic',\r\n        'esri/layers/GraphicsLayer', \"esri/symbols/PictureMarkerSymbol\", \"esri/geometry/Point\",\r\n        \"esri/symbols/WebStyleSymbol\", \"esri/widgets/Track\",\"esri/widgets/Popup\",\"esri/PopupTemplate\"]);\r\n\r\n        var map = new Map({\r\n          basemap: 'streets-navigation-vector',\r\n        });\r\n        \r\n\r\n    \r\n        var view = new MapView({\r\n          container: \"viewDiv\",\r\n          map: map,\r\n          zoom: 9,\r\n          center: [76.9366, 8.5241] // longitude, latitude\r\n        });\r\n        \r\n\r\n        function addgraphics(a, b,name) {\r\n          const popupTemplate = {\r\n            title: name,\r\n         }\r\n\r\n         const attributes = {\r\n          Description:   {Longitude:a,Latitude:b}\r\n       }\r\n\r\n          var markerPoint = new Point({ x: a, y: b });\r\n          var storepoint = new Graphic(markerPoint, symbol1,attributes,popupTemplate);\r\n          var layer = new GraphicsLayer();\r\n          layer.add(storepoint);\r\n          map.add(layer);\r\n\r\n        }\r\n        var hotspots=this.state.facilities;\r\n        let symbol1 = {\r\n          type: \"picture-marker\",  // autocasts as new PictureMarkerSymbol()\r\n          url:\"https://scity.gmmspl.com:3000/\"+hotspots[0].facility_image,\r\n          width: \"40px\",\r\n          height: \"40px\",\r\n        };\r\n       // console.log(\"test\",hotspots);\r\n        view.when(function () {\r\n          for (var i = 0; i <hotspots[0].facility_data.length; i++) {\r\n\r\n            \r\n            addgraphics(hotspots[0].facility_data[i].longitude, hotspots[0].facility_data[i].latitude,hotspots[0].facility_data[i].facility_name);\r\n          }}); \r\n      }\r\n\r\n \r\n\r\n  render() {\r\n    return(<div className=\"Mapscreenres\" style={styles.container}>\r\n    <div id='viewDiv' style={ styles.mapDiv } >\r\n    </div>\r\n    {/* <div id=\"instruction\" class=\"esri-widget\">\r\nClick any location on the map to set marker\r\n</div> */}\r\n  </div>);\r\n  }\r\n}\r\n\r\nexport default NearByInfo;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-nearBy\\Dashboard-nearBy.js",["1159","1160","1161","1162","1163","1164","1165"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Header from \"../Dashboard-header\";\r\nimport CollaborationHeadings from \"../../jsonFiles/CollaborationTabInfoJson/collaborationtabinfo\";\r\nimport DashboardIcons from \"../../jsonFiles/CollaborationTabInfoJson/collaborationtabinfo\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"../Footer\";\r\nimport \"./Dashboard-nearBy.css\";\r\nimport CollabBannerImg from \"../../assets/submenu banners/Nearby.svg\";\r\nimport Maps2 from \"../../assets/map3.png\";\r\n\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../assets/defaultprofile.png\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport HeaderLogo from \"../../assets/HeaderLogo.png\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nclass DashboardNearBy extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collabIcons: CollaborationHeadings.NearByIcons,\r\n      dashIcons: DashboardIcons.DashIcons,\r\n      collabTitleImg: CollaborationHeadings.Collaboration_Title_Image,\r\n    };\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.openMenu = this.openMenu.bind(this);\r\n    this.menuClose = this.menuClose.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.style = \"background-image: url();\";\r\n    document.body.style = \"background: #F9F9F9\";\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  FacilityType = (ID) => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login to view details\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      sessionStorage.setItem(\"nearById\", ID);\r\n      sessionStorage.setItem(\r\n        \"nearByTitle\",\r\n        this.state.collabIcons.Cards[ID - 1].Title\r\n      );\r\n      this.props.history.push(\"/nearBy-info\");\r\n    }\r\n    //  alert(this.state.collabIcons.Cards[(ID+1)].Title)\r\n    //console.log(this.state.collabIcons.Cards[(ID-1)].Title)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <Header></Header> */}\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"dashboard-tytle-allign-style_Header\">\r\n            {/* <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n          <Link to='/dashboard'>\r\n            <Tooltip title=\"Dashboard\" placement=\"top\" TransitionProps={{ timeout: 600 }}>\r\n              <HomeOutlinedIcon className=\"header-menu-icon-style\" fontSize=\"medium\"/>\r\n            </Tooltip>\r\n              </Link>\r\n            </Col> */}\r\n            <Col\r\n              xs=\"10\"\r\n              sm=\"10\"\r\n              md=\"10\"\r\n              lg=\"10\"\r\n              xl=\"10\"\r\n              xxl=\"10\"\r\n              className=\"align-left dashboard-header-title-style_SAT pr-0\"\r\n            >\r\n              {/* <label class=\"header-heading-label-style\">{DashboardHeadings.Dashboard_HEADING_SAT}</label> */}\r\n              <img\r\n                className=\"forgetheader-profile-image-style\"\r\n                src={HeaderLogo}\r\n                alt=\"\"\r\n              />\r\n            </Col>\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 pt-1\"\r\n            >\r\n              {/* <MenuIcon className=\"header-menu-icon-style\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={this.openMenu}/>\r\n              <Menu\r\n                className=\"menu-box-style\"\r\n                // id=\"simple-menu\"\r\n                anchorEl={this.state.eventTarget}\r\n                // keepMounted\r\n                open={this.openMenu}\r\n                onClose={this.menuClose}\r\n              >\r\n              <MenuItem onClick={this.menuClose}>Profile</MenuItem>\r\n              <MenuItem onClick={this.menuClose}>Logout</MenuItem>\r\n              </Menu> */}\r\n              <Dropdown menuAlign=\"right\" className=\"dropdown-profile-style\">\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{textAlign:'center'}}>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[0].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[0].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[1].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2 \"\r\n                        src={this.state.dashIcons[1].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[2].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[2].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[3].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2\"\r\n                        src={this.state.dashIcons[3].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"dashboard-icons-style\">\r\n                    <Link to={this.state.dashIcons[4].NavigateTo}>\r\n                      <img\r\n                        alt=\"\"\r\n                        className=\"dashboardImageStyle-header2 selected-tab-from-dashboard\"\r\n                        src={this.state.dashIcons[4].Image}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                </Row>\r\n        </Container>\r\n\r\n        {/* <Container className=\"header-space\"></Container> */}\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"8\"\r\n            xl=\"8\"\r\n            xxl=\"8\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            <Container fluid className=\"collaboration-main-div\">\r\n              <div class=\"body-style-height\">\r\n               \r\n              </div>\r\n              <div class=\"inner-container-style\">\r\n                <Row>\r\n                  {/* <Col  xs=\"0\" sm=\"0\" md=\"0\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col> */}\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"12\"\r\n                    xl=\"12\"\r\n                    xxl=\"12\"\r\n                    className=\"banner-submenu-style-header2\"\r\n                  >\r\n                    <img\r\n                      src={CollabBannerImg}\r\n                      alt=\"\"\r\n                      class=\"banner-image-style\"\r\n                    />\r\n                  </Col>\r\n                  {/* <Col  xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col> */}\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n                  <Col\r\n                    xs=\"2\"\r\n                    sm=\"2\"\r\n                    md=\"2\"\r\n                    lg=\"2\"\r\n                    xl=\"2\"\r\n                    xxl=\"2\"\r\n                    className=\"heading-image-style\"\r\n                  >\r\n                    <img alt=\"\" className=\"collabImageStyle\" src={Maps2} />\r\n                  </Col>\r\n                  <Col xs=\"10\" sm=\"10\" md=\"8\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                    <label class=\"collab-title-text\">Near By</label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n                </Row>\r\n                <hr className=\"collab-hr pb-2\"></hr>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Link\r\n                      onClick={() =>\r\n                        this.FacilityType(this.state.collabIcons.Cards[0].id)\r\n                      }\r\n                    >\r\n                      <Card className=\"collaboration-card\">\r\n                        <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                          <Row>\r\n                            <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                              {\" \"}\r\n                              <Card.Img\r\n                                className=\"collaborationImageStyle\"\r\n                                src={this.state.collabIcons.Cards[0].Image}\r\n                              />\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"10\"\r\n                              sm=\"10\"\r\n                              md=\"10\"\r\n                              lg=\"10\"\r\n                              xl=\"10\"\r\n                              xxl=\"10\"\r\n                            >\r\n                              <Card.Title className=\"cardIconsTitleCollab\">\r\n                                {this.state.collabIcons.Cards[0].Title}\r\n                              </Card.Title>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Link\r\n                      onClick={() =>\r\n                        this.FacilityType(this.state.collabIcons.Cards[1].id)\r\n                      }\r\n                    >\r\n                      <Card className=\"collaboration-card\">\r\n                        <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                          <Row>\r\n                            <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                              {\" \"}\r\n                              <Card.Img\r\n                                className=\"collaborationImageStyle\"\r\n                                src={this.state.collabIcons.Cards[1].Image}\r\n                              />\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"10\"\r\n                              sm=\"10\"\r\n                              md=\"10\"\r\n                              lg=\"10\"\r\n                              xl=\"10\"\r\n                              xxl=\"10\"\r\n                            >\r\n                              <Card.Title className=\"cardIconsTitleCollab\">\r\n                                {this.state.collabIcons.Cards[1].Title}\r\n                              </Card.Title>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Link\r\n                      onClick={() =>\r\n                        this.FacilityType(this.state.collabIcons.Cards[2].id)\r\n                      }\r\n                    >\r\n                      <Card className=\"collaboration-card\">\r\n                        <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                          <Row>\r\n                            <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                              {\" \"}\r\n                              <Card.Img\r\n                                className=\"collaborationImageStyle\"\r\n                                src={this.state.collabIcons.Cards[2].Image}\r\n                              />\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"10\"\r\n                              sm=\"10\"\r\n                              md=\"10\"\r\n                              lg=\"10\"\r\n                              xl=\"10\"\r\n                              xxl=\"10\"\r\n                            >\r\n                              <Card.Title className=\"cardIconsTitleCollab\">\r\n                                {this.state.collabIcons.Cards[2].Title}\r\n                              </Card.Title>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Link\r\n                      onClick={() =>\r\n                        this.FacilityType(this.state.collabIcons.Cards[3].id)\r\n                      }\r\n                    >\r\n                      <Card className=\"collaboration-card\">\r\n                        <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                          <Row>\r\n                            <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                              {\" \"}\r\n                              <Card.Img\r\n                                className=\"collaborationImageStyle\"\r\n                                src={this.state.collabIcons.Cards[3].Image}\r\n                              />\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"10\"\r\n                              sm=\"10\"\r\n                              md=\"10\"\r\n                              lg=\"10\"\r\n                              xl=\"10\"\r\n                              xxl=\"10\"\r\n                            >\r\n                              <Card.Title className=\"cardIconsTitleCollab\">\r\n                                {this.state.collabIcons.Cards[3].Title}\r\n                              </Card.Title>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Link\r\n                      onClick={() =>\r\n                        this.FacilityType(this.state.collabIcons.Cards[4].id)\r\n                      }\r\n                    >\r\n                      <Card className=\"collaboration-card\">\r\n                        <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                          <Row>\r\n                            <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                              {\" \"}\r\n                              <Card.Img\r\n                                className=\"collaborationImageStyle\"\r\n                                src={this.state.collabIcons.Cards[4].Image}\r\n                              />\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"10\"\r\n                              sm=\"10\"\r\n                              md=\"10\"\r\n                              lg=\"10\"\r\n                              xl=\"10\"\r\n                              xxl=\"10\"\r\n                            >\r\n                              <Card.Title className=\"cardIconsTitleCollab\">\r\n                                {this.state.collabIcons.Cards[4].Title}\r\n                              </Card.Title>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                    lg=\"6\"\r\n                    xl=\"6\"\r\n                    xxl=\"6\"\r\n                    className=\"card-left card-right card-sub-dashboard-top\"\r\n                  >\r\n                    <Link\r\n                      onClick={() =>\r\n                        this.FacilityType(this.state.collabIcons.Cards[5].id)\r\n                      }\r\n                    >\r\n                      <Card className=\"collaboration-card\">\r\n                        <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                          <Row>\r\n                            <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n                              {\" \"}\r\n                              <Card.Img\r\n                                className=\"collaborationImageStyle\"\r\n                                src={this.state.collabIcons.Cards[5].Image}\r\n                              />\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"10\"\r\n                              sm=\"10\"\r\n                              md=\"10\"\r\n                              lg=\"10\"\r\n                              xl=\"10\"\r\n                              xxl=\"10\"\r\n                            >\r\n                              <Card.Title className=\"cardIconsTitleCollab\">\r\n                                {this.state.collabIcons.Cards[5].Title}\r\n                              </Card.Title>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                </Row>\r\n\r\n                {/* <Row>\r\n              <Col  xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n                <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\" className=\"card-left card-right card-sub-dashboard-top\">\r\n                <Card className=\"collaboration-card\">\r\n                  <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                    <Row>\r\n                      <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"> <Card.Img className=\"collaborationImageStyle\" src={this.state.collabIcons.Cards[6].Image} /></Col>\r\n                      <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\"><Card.Title className=\"cardIconsTitleCollab\">{this.state.collabIcons.Cards[6].Title}</Card.Title></Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n                </Col>\r\n                <Col  xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row> */}\r\n\r\n                {/* <Row>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\" className=\"card-left card-right card-top\">\r\n\r\n                <Link to = {{pathname: this.state.collabIcons.Cards[0].NavigateTo,search:this.state.collabIcons.Cards[0].id}}> \r\n                <Card className=\"collaboration-card\">\r\n                  <Card.Body className=\"collab-text-align collaboration-card-body\" onClick>\r\n                    <Row>\r\n                      <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"> <Card.Img className=\"collaborationImageStyle\" src={this.state.collabIcons.Cards[0].Image} /></Col>\r\n                      <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\"><Card.Title className=\"cardIconsTitleCollab\">{this.state.collabIcons.Cards[0].Title}</Card.Title></Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n                </Link>\r\n              </Col>\r\n\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\" className=\"card-left card-right card-top\">\r\n              <Link to = {this.state.collabIcons.Cards[1].NavigateTo}>\r\n                <Card className=\"collaboration-card\">\r\n                  <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                    <Row>\r\n                      <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"> <Card.Img className=\"collaborationImageStyle\" src={this.state.collabIcons.Cards[1].Image} /></Col>\r\n                      <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\"><Card.Title className=\"cardIconsTitleCollab\">{this.state.collabIcons.Cards[1].Title}</Card.Title></Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Link>\r\n              </Col>\r\n\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\" className=\"card-left card-right card-top\">\r\n              <Link to = {this.state.collabIcons.Cards[2].NavigateTo}>\r\n                <Card className=\"collaboration-card\">\r\n                  <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                    <Row>\r\n                      <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"> <Card.Img className=\"collaborationImageStyle\" src={this.state.collabIcons.Cards[2].Image} /></Col>\r\n                      <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\"><Card.Title className=\"cardIconsTitleCollab\">{this.state.collabIcons.Cards[2].Title}</Card.Title></Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n                </Link>\r\n              </Col>\r\n\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\" className=\"card-left card-right card-top\">\r\n              <Link to = {this.state.collabIcons.Cards[2].NavigateTo}>\r\n                <Card className=\"collaboration-card\">\r\n                  <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                    <Row>\r\n                      <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"> <Card.Img className=\"collaborationImageStyle\" src={this.state.collabIcons.Cards[3].Image} /></Col>\r\n                      <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\"><Card.Title className=\"cardIconsTitleCollab\">{this.state.collabIcons.Cards[3].Title}</Card.Title></Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n                </Link>\r\n              </Col>\r\n\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\" className=\"card-left card-right card-top\">\r\n              <Link to = {this.state.collabIcons.Cards[2].NavigateTo}>\r\n                <Card className=\"collaboration-card\">\r\n                  <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                    <Row>\r\n                      <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"> <Card.Img className=\"collaborationImageStyle\" src={this.state.collabIcons.Cards[4].Image} /></Col>\r\n                      <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\"><Card.Title className=\"cardIconsTitleCollab\">{this.state.collabIcons.Cards[4].Title}</Card.Title></Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n                </Link>\r\n              </Col>\r\n\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\" className=\"card-left card-right card-top\">\r\n              <Link to = {this.state.collabIcons.Cards[2].NavigateTo}>\r\n                <Card className=\"collaboration-card\">\r\n                  <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                    <Row>\r\n                      <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"> <Card.Img className=\"collaborationImageStyle\" src={this.state.collabIcons.Cards[5].Image} /></Col>\r\n                      <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\"><Card.Title className=\"cardIconsTitleCollab\">{this.state.collabIcons.Cards[5].Title}</Card.Title></Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n                </Link>\r\n              </Col>\r\n\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\" className=\"card-left card-right card-top dashboard-card-bg-style\">\r\n              <Link to = {this.state.collabIcons.Cards[2].NavigateTo}>\r\n                <Card className=\"collaboration-card\">\r\n                  <Card.Body className=\"collab-text-align collaboration-card-body\">\r\n                    <Row>\r\n                      <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"> <Card.Img className=\"collaborationImageStyle\" src={this.state.collabIcons.Cards[6].Image} /></Col>\r\n                      <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\"><Card.Title className=\"cardIconsTitleCollab\">{this.state.collabIcons.Cards[6].Title}</Card.Title></Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n                </Link>\r\n              </Col>\r\n\r\n            </Row> */}\r\n              </div>\r\n            </Container>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardNearBy;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-sDI-ACardDetails\\Collaboration-sDI-ACardDetails.js",["1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184","1185","1186","1187","1188","1189","1190","1191","1192","1193","1194","1195","1196","1197","1198","1199","1200","1201","1202","1203","1204","1205","1206","1207","1208","1209","1210","1211"],"import React, { Component } from \"react\";\r\nimport CollaborationsHeadings from \"../../jsonFiles/CollaborationJson/collaborationDetails\";\r\nimport Header from \"../Dashboard-header\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Link } from \"react-router-dom\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport \"./Collaboration-sDI-ACardDetails.css\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { MDBIcon } from \"../../../node_modules/mdbreact\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Footer from \"../Footer\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport \"./Header-style.css\";\r\n// Header\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport footer_data from \"../../jsonFiles/DashboardInfoJson/DashboardFooter\";\r\nimport UserGeoMapComponent from \"../UserGeoMapComponent\";\r\nimport axios from 'axios';\r\nimport fileDownload from 'js-file-download';\r\nimport {Capacitor} from '@capacitor/core';\r\nimport { Filesystem, Directory, Encoding } from '@capacitor/filesystem';\r\nimport {FileOpener} from '@ionic-native/file-opener';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { confirm } from \"react-confirm-box\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faFileCsv} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass CollaborationSDIACardDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      LocalCardsData: CollaborationsHeadings.ACardDetails,\r\n      APIResponse: \"\",\r\n      ACardComments: CollaborationsHeadings.ACardDetails[0].Comment,\r\n      description: \"\",\r\n      descriptionValidate: false,\r\n      commentsCounts: 3,\r\n      AttachmentAvailable: false,\r\n      isOpen: false,\r\n      submit: false,\r\n        mimeType:'',\r\n      extension:'',\r\n      isActive:false,\r\n      progressbarVisible:false,\r\n      progress:0,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      eventTarget: \"\",\r\n      footer: footer_data.paths,\r\n      isLogin: \"\",\r\n      DeleteSubmit: false,\r\n\r\n      DeleteDialogStatus: false,\r\n      ACardAttachments: CollaborationsHeadings.ACardDetails[0].attachment,\r\n      displayMapFlag: true,\r\n      deteledID: \"\",\r\n      IdeaCommentCount:0\r\n    };\r\n    // this.displayCards = this.displayCards.bind(this);\r\n    // this.CardDetails = this.CardDetails.bind(this);\r\n    this.sendComment = this.sendComment.bind(this);\r\n    this.LoadMore_SAT = this.LoadMore_SAT.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.Delete = this.Delete.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n    this.getTruncatedName=this.getTruncatedName.bind(this);\r\n      this.getMimeType = this.getMimeType.bind(this);\r\n    this.downloadAttachmentFile = this.downloadAttachmentFile.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      document.body.style = \"background-image: url();\";\r\n      document.body.style = \"background: #F9F9F9\";\r\n      this.getParticularIdeaDetails();\r\n    }\r\n    console.log(\"LocalCardDetails :\",);\r\n  }\r\n\r\n  getParticularIdeaDetails() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        offset: this.state.commentsCounts,\r\n      }),\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/Ideas/GetIdeaSummary/\" +\r\n        sessionStorage.getItem(\"threadId\") +\r\n        \"/false\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        console.log(this.state.APIResponse.CommentCount);\r\n        if (this.state.APIResponse.status === true) {\r\n          var JsonDate = this.state.APIResponse.Details[0];\r\n           if(!JsonDate.Image || JsonDate.Image.indexOf('https')!== -1 || JsonDate.Image==\"\"){\r\n          \r\n          }\r\n          else{\r\n            console.log(\"https absent\");\r\n              JsonDate.Image=\"https://scity.gmmspl.com:3000/\" +JsonDate.Image\r\n          }\r\n          for(var commentobject in JsonDate.Comment)\r\n          {\r\n          console.log(\"Acard comment image in :\",JsonDate.Comment[commentobject].Image);\r\n            if(!JsonDate.Comment[commentobject].Image || JsonDate.Comment[commentobject].Image.indexOf('https')!== -1 || JsonDate.Comment[commentobject].Image==\"\"){\r\n            \r\n          }\r\n          else{\r\n            console.log(\"https absent\");\r\n              JsonDate.Comment[commentobject].Image=\"https://scity.gmmspl.com:3000/\" +JsonDate.Comment[commentobject].Image;\r\n          }\r\n\r\n          }\r\n          this.setState({\r\n            LocalCardsData: JsonDate,\r\n            ACardComments: JsonDate.Comment,\r\n            ACardAttachments: JsonDate.attachment,\r\n            displayMapFlag: JsonDate.share_location_flag,\r\n            IdeaCommentCount: JsonDate.CommentCount\r\n          });\r\n          console.log(\"attachment details\"+JSON.stringify(this.state.ACardAttachment));\r\n          console.log(\r\n            \"this.state.LocalCardsData.attachment = \",\r\n            this.state.LocalCardsData.attachment\r\n          );\r\n          if (this.state.LocalCardsData.attachment == null) {\r\n            this.state.AttachmentAvailable = false;\r\n          } else {\r\n            this.state.AttachmentAvailable = true;\r\n          }\r\n        } else {\r\n          toast.error(\r\n            \"Something went wrong due to internet connection, Please try again\",\r\n            {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              onClose: () => this.props.history.push(\"/\"),\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  sendComment() {\r\n    if (this.state.descriptionValidate) {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          user_Id: sessionStorage.getItem(\"user_id\"),\r\n          token: sessionStorage.getItem(\"token\"),\r\n          description: this.state.description,\r\n          idea_cat_id: this.state.LocalCardsData.category_id,\r\n          parent_thread_id: sessionStorage.getItem(\"threadId\"),\r\n        }),\r\n      };\r\n      fetch(\r\n        \"https://scity.gmmspl.com:3000/Ideas/AddIdeaResponse\",\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          // console.log(\"APIResponse = \", this.state.APIResponse);\r\n          if (\r\n            this.state.APIResponse.message ===\r\n            \"Idea response added successfully\"\r\n          ) {\r\n            // toast.success('Comment successfully added', {\r\n            //   position: \"top-center\",\r\n            //   autoClose: 500,\r\n            //   hideProgressBar: false,\r\n            //   closeOnClick: true,\r\n            //   pauseOnHover: true,\r\n            //   draggable: true,\r\n            //   progress: undefined,\r\n            //   theme: \"light\",\r\n            //   onClose: () =>\r\n            //   });\r\n            this.getParticularIdeaDetails();\r\n            //   var JsonDate = this.state.APIResponse.Details;\r\n            this.setState({\r\n              description: \"\",\r\n              descriptionValidate: false,\r\n            });\r\n          } else if (\r\n            this.state.APIResponse.message === \"Failed to authenticate token.\"\r\n          ) {\r\n            // console.log(\"Rederect = \", this.state.APIResponse);\r\n            //  <withRouter exact path=\"/\" component={LoginPage} />\r\n            toast.error(\"Please login, your session has expired\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              onClose: () => this.props.history.push(\"/\"),\r\n            });\r\n          } else {\r\n            toast.error(\"Unable to add comment, please try again\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  DeleteACard = () => {\r\n    // console.log(\"CardID = \", CardID);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        response_Id: this.state.deteledID,\r\n      }),\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/Ideas/DeleteIdeaResponse\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (\r\n          this.state.APIResponse.message ===\r\n          \"Idea response deleted successfully\"\r\n        ) {\r\n          // toast.success('Comment successfully deleted', {\r\n          //   position: \"top-center\",\r\n          //   autoClose: 3000,\r\n          //   hideProgressBar: false,\r\n          //   closeOnClick: true,\r\n          //   pauseOnHover: true,\r\n          //   draggable: true,\r\n          //   progress: undefined,\r\n          //   theme: \"light\",\r\n          //   onClose: () => this.getParticularIdeaDetails()\r\n          //   });\r\n          this.DeleteDialogClose();\r\n          this.getParticularIdeaDetails();\r\n        }\r\n      });\r\n  };\r\n\r\n  description = (e) => {\r\n    if (e.target.value != null || e.target.value != \" \") {\r\n      this.setState({\r\n        description: e.target.value,\r\n        descriptionValidate: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        description: e.target.value,\r\n        descriptionValidate: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  LoadMore_SAT() {\r\n    if (this.state.commentsCounts <= 100) {\r\n      var currentCount = this.state.commentsCounts + 3;\r\n      this.state.commentsCounts = currentCount;\r\n      this.getParticularIdeaDetails();\r\n    }\r\n  }\r\n   getMimeType=(file_path)=>{\r\n    const extension = file_path.substr(file_path.lastIndexOf(\"/\") + 1).split('.')[1];\r\n    if(extension=='jpg' || extension=='jpeg'){\r\n      return 'image/jpeg';\r\n    }else if(extension=='png'){\r\n      return 'image/jpeg';\r\n    }else if(extension=='pdf'){\r\n      return 'application/pdf';\r\n    }else if(extension=='doc'){\r\n      return 'application/msword';\r\n    }else if(extension=='docx'){\r\n      return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\r\n    }else if(extension=='xlsx'){\r\n      return 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\r\n    }else if(extension=='xls'){\r\n      return 'application/vnd.ms-excel';\r\n    }else if(extension=='txt'){\r\n      return 'text/plain';\r\n    }else if(extension=='ppt'){\r\n      return 'application/vnd.ms-powerpoint';\r\n    }else if(extension=='pptx'){\r\n      return 'application/vnd.openxmlformats-officedocument.presentationml.presentation';\r\n    }else if(extension=='mp3'){\r\n      return 'audio/mpeg';\r\n    }else if(extension=='mp4'){\r\n      return 'video/mp4';\r\n    }\r\n  }\r\n  getTruncatedName=(attachmentname)=>{\r\n    if(attachmentname.length>25)\r\n    {\r\n      var truncatename= attachmentname.substr(0,10)+'...'+attachmentname.substr(attachmentname.length-8,attachmentname.length-1)\r\n      return truncatename;\r\n    }\r\n    else{\r\n    return(attachmentname);\r\n    }\r\n  }\r\n  downloadAttachmentFile = (AttachmentDetails) => {\r\n    var file_path=\"https://scity.gmmspl.com:3000/\" + AttachmentDetails.attachment;\r\n        var extension= file_path.substr(file_path.lastIndexOf(\"/\") + 1).split('.')[1];\r\n        var mime = this.getMimeType(file_path);\r\n        this.setState({progressbarVisible:true})\r\n        axios.get(file_path, {responseType: 'blob',onDownloadProgress: (progressEvent) => {\r\n        this.setState({progress:Math.round((progressEvent.loaded * 100) / progressEvent.total)})  \r\n  }}).then((res) => {\r\n           this.setState({progress:0})\r\n           this.setState({progressbarVisible:false})\r\n          if(Capacitor.getPlatform()=='web')\r\n          {\r\n          fileDownload(res.data,'SmartCityIdeaAttachment.'+extension);\r\n          }else\r\n          {\r\n            var date = new Date();\r\n           var reader = new FileReader();\r\n            reader.readAsDataURL(res.data);\r\n            reader.onloadend = async function () {\r\n            var base64String = reader.result;\r\n            const savedFile = await Filesystem.writeFile({\r\n              path :'SmartCityIdeaAttachment'+Math.floor(date.getTime() + date.getSeconds() / 2) +'.'+extension,\r\n              data : base64String,\r\n              directory : Directory.Documents,\r\n            })\r\n            alert(\"Your file is stored into DOCUMENTS directory of your device\")\r\n            const path =savedFile.uri;   \r\n            const mimeType =mime;\r\n            FileOpener.showOpenWithDialog(path,mimeType).then(()=>console.log('File is opened')).catch(error=>console.log('error while opening File : ',error));\r\n            }\r\n          }\r\n          });  \r\n  };\r\n          \r\n\r\n  Delete = (CardID) => {\r\n    this.setState({\r\n      DeleteSubmit: true,\r\n      DeleteDialogStatus: true,\r\n      deteledID: CardID.IdeaNumber,\r\n    });\r\n  };\r\n\r\n  DeleteDialogClose = () => {\r\n    this.setState({\r\n      DeleteDialogStatus: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Header */}\r\n        <Container fluid className=\"header-style\">\r\n           \r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"back-icon-div-allignemnt\"\r\n            >\r\n              <Link to={sessionStorage.getItem(\"ideaDetailBack\")}>\r\n                <Tooltip\r\n                  title=\"Dashboard\"\r\n                  placement=\"top\"\r\n                  TransitionProps={{ timeout: 600 }}\r\n                >\r\n                  <MDBIcon\r\n                    icon=\"chevron-circle-left\"\r\n                    className=\"back-arrow-icon pt-1\"\r\n                  />\r\n                </Tooltip>\r\n              </Link>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">Idea Details</label>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n           {this.state.progressbarVisible && <Row>\r\n           <div style={{height:15,backgroundColor:'rgba(0,0,0,0.2)',width:this.state.progress+'%',color:'white',fontWeight:'600',fontSize:12,textAlign:'center',borderRadius:5}}>\r\n              {this.state.progress==0 ? '' : this.state.progress+'%'}\r\n            </div>\r\n          </Row>}\r\n        </Container>\r\n\r\n        {/* <Header /> */}\r\n        {/* <Container className=\"all-header-space\"></Container> */}\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            {/* <Row className=\"pt-1\">\r\n                <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"1\" xl=\"1\" xxl=\"1\" className=\"back-arrow-icon-style pl-4\">\r\n                  <Link to = \"/collaboration-shareDiscussIdeas\">\r\n                    <MDBIcon icon=\"arrow-circle-left\" size=\"2x\" className=\"back-arrow-icon\"/>\r\n                  </Link>\r\n                </Col>\r\n                <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"11\" xl=\"11\" xxl=\"11\" className=\"start-new-Idea-heading\">\r\n                  {CollaborationsHeadings.Collaboration_SHARE_A_IDEA_HEADING}\r\n                </Col>\r\n              </Row> */}\r\n\r\n            <hr></hr>\r\n            <div class=\"details-container-style inner-container-style-collaboration\">\r\n              <Container className=\"p-4\">\r\n                <Row className=\"card-details-title-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <div\r\n                      id=\"card-details-category\"\r\n                      class=\"tab-card-heading-style\"\r\n                    >\r\n                      <label>{this.state.LocalCardsData.category_name}</label>\r\n                    </div>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"card-details-title-style\"\r\n                  >\r\n                    {/* <span class=\"card-details-category-style\"><label>Title :&nbsp;</label></span> */}\r\n                    <label>{this.state.LocalCardsData.Title}</label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"card-details-title-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"card-details-description-style\"\r\n                  >\r\n                    {/* <span class=\"card-details-category-style\"><label>Description :&nbsp;</label></span> */}\r\n                    <label>{this.state.LocalCardsData.IdeaDescription}</label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <div>\r\n                  {this.state.displayMapFlag && (\r\n                    <Row className=\"card-details-title-row-style\">\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                      <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                        <Row>\r\n                          <Col\r\n                            xs=\"1\"\r\n                            sm=\"1\"\r\n                            md=\"1\"\r\n                            lg=\"1\"\r\n                            xl=\"1\"\r\n                            xxl=\"1\"\r\n                            className=\"pr-0\"\r\n                          >\r\n                            <MDBIcon\r\n                              icon=\"map-marker-alt\"\r\n                              className=\"red-text\"\r\n                              size=\"lg\"\r\n                            />\r\n                          </Col>\r\n                          <Col\r\n                            xs=\"11\"\r\n                            sm=\"11\"\r\n                            md=\"11\"\r\n                            lg=\"11\"\r\n                            xl=\"11\"\r\n                            xxl=\"11\"\r\n                            className=\"\"\r\n                          >\r\n                            <label class=\"card-details-description-style\">\r\n                              {this.state.LocalCardsData.address}\r\n                            </label>\r\n                          </Col>\r\n                          <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\">\r\n                            <UserGeoMapComponent\r\n                              long={this.state.LocalCardsData.longitude}\r\n                              lat={this.state.LocalCardsData.latitude}\r\n                              address={this.state.LocalCardsData.address}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                    </Row>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  {this.state.ACardAttachments.length !== 0 && (\r\n                    <Row className=\"card-details-title-row-style attachment-row-style\">\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                      <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                        {this.state.ACardAttachments.map((Attachment) => (\r\n                          <Row className=\"  pt-1 pb-1\" id=\"downloadFile\">\r\n                            <Button\r\n                              color=\"transparent\"\r\n                              onClick={()=>{this.downloadAttachmentFile(Attachment)}}\r\n                            >\r\n                              <Col\r\n                                xs=\"2\"\r\n                                sm=\"2\"\r\n                                md=\"1\"\r\n                                lg=\"1\"\r\n                                xl=\"1\"\r\n                                xxl=\"1\"\r\n                                className=\"pl-3\"\r\n                              >\r\n                                {(Attachment.attachment\r\n                                  .split(\"/\")\r\n                                  .pop()\r\n                                  .split(\".\")\r\n                                  .pop() == \"png\" ||\r\n                                  Attachment.attachment\r\n                                    .split(\"/\")\r\n                                    .pop()\r\n                                    .split(\".\")\r\n                                    .pop() == \"jpg\" ||\r\n                                  Attachment.attachment\r\n                                    .split(\"/\")\r\n                                    .pop()\r\n                                    .split(\".\")\r\n                                    .pop() == \"jpeg\") && (\r\n                                  <MDBIcon\r\n                                    far\r\n                                    icon=\"image\"\r\n                                    size=\"lg\"\r\n                                    className=\"image-file-icon-style\"\r\n                                  />\r\n                                )}\r\n                                {Attachment.attachment\r\n                                  .split(\"/\")\r\n                                  .pop()\r\n                                  .split(\".\")\r\n                                  .pop() == \"pdf\" && (\r\n                                  <MDBIcon\r\n                                    icon=\"file-pdf\"\r\n                                    size=\"lg\"\r\n                                    className=\"doc-file-icon-style\"\r\n                                  />\r\n                                )}\r\n                                 {Attachment.attachment\r\n                                  .split(\"/\")\r\n                                  .pop()\r\n                                  .split(\".\")\r\n                                  .pop() == \"csv\" && (\r\n                                  <FontAwesomeIcon\r\n                                    icon={faFileCsv}\r\n                                    color=\"green\"\r\n                                    size=\"lg\">\r\n                                </FontAwesomeIcon>\r\n                                )}\r\n                                {(Attachment.attachment\r\n                                  .split(\"/\")\r\n                                  .pop()\r\n                                  .split(\".\")\r\n                                  .pop() == \"doc\" ||\r\n                                  Attachment.attachment\r\n                                    .split(\"/\")\r\n                                    .pop()\r\n                                    .split(\".\")\r\n                                    .pop() == \"docx\") && (\r\n                                  <MDBIcon\r\n                                    icon=\"file-word\"\r\n                                    size=\"lg\"\r\n                                    className=\"word-file-icon-style\"\r\n                                  />\r\n                                )}\r\n                                {Attachment.attachment\r\n                                  .split(\"/\")\r\n                                  .pop()\r\n                                  .split(\".\")\r\n                                  .pop() == \"xlsx\" && (\r\n                                  <MDBIcon\r\n                                    icon=\"file-excel\"\r\n                                    size=\"lg\"\r\n                                    className=\"xlsx-file-icon-style\"\r\n                                  />\r\n                                )}\r\n                                {Attachment.attachment\r\n                                  .split(\"/\")\r\n                                  .pop()\r\n                                  .split(\".\")\r\n                                  .pop() == \"txt\" && (\r\n                                  <MDBIcon\r\n                                    icon=\"file-alt\"\r\n                                    size=\"lg\"\r\n                                    className=\"txt-file-icon-style\"\r\n                                  />\r\n                                )}\r\n                                {(Attachment.attachment\r\n                                  .split(\"/\")\r\n                                  .pop()\r\n                                  .split(\".\")\r\n                                  .pop() == \"mp3\" ||\r\n                                  Attachment.attachment\r\n                                    .split(\"/\")\r\n                                    .pop()\r\n                                    .split(\".\")\r\n                                    .pop() == \"mp4\") && (\r\n                                  <MDBIcon\r\n                                    icon=\"video\"\r\n                                    size=\"lg\"\r\n                                    className=\"media-file-icon-style\"\r\n                                  />\r\n                                )}\r\n                                {(Attachment.attachment\r\n                                  .split(\"/\")\r\n                                  .pop()\r\n                                  .split(\".\")\r\n                                  .pop() == \"ppt\" ||\r\n                                  Attachment.attachment\r\n                                    .split(\"/\")\r\n                                    .pop()\r\n                                    .split(\".\")\r\n                                    .pop() == \"pptx\") && (\r\n                                  <MDBIcon\r\n                                    icon=\"file-powerpoint\"\r\n                                    size=\"lg\"\r\n                                    className=\"ppt-file-icon-style\"\r\n                                  />\r\n                                )}\r\n                              </Col>\r\n                              <Col\r\n                                xs=\"10\"\r\n                                sm=\"10\"\r\n                                md=\"11\"\r\n                                lg=\"11\"\r\n                                xl=\"11\"\r\n                                xxl=\"11\"\r\n                              >\r\n                                {this.getTruncatedName(Attachment.attachment.split(\"/\").pop())}\r\n                                {/* {((Attachment.attachment.split(\"/\")))[((Attachment.attachment.split(\"/\")).length)-1]} */}\r\n                              </Col>\r\n                            </Button>\r\n                          </Row>\r\n                        ))}\r\n                      </Col>\r\n                      <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                    </Row>\r\n                  )}\r\n                </div>\r\n\r\n                <Row className=\"pt-3 pb-3\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <Row>\r\n                      <Col\r\n                        xs=\"2\"\r\n                        sm=\"2\"\r\n                        md=\"2\"\r\n                        lg=\"2\"\r\n                        xl=\"2\"\r\n                        className=\"details-profile-image-col-style\"\r\n                      >\r\n                        <img\r\n                          src={this.state.LocalCardsData.Image}\r\n                          alt=\"\"\r\n                          class=\"details-profile-image-style\"\r\n                        />\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"10\"\r\n                        sm=\"10\"\r\n                        md=\"10\"\r\n                        lg=\"10\"\r\n                        xl=\"10\"\r\n                        className=\"details-image-imfo-style pr-0\"\r\n                      >\r\n                        <Row className=\"details-image-profile-name-style\">\r\n                          <label>{this.state.LocalCardsData.Name}</label>\r\n                        </Row>\r\n                        <Row className=\"card-image-imfo-row-style\">\r\n                          <label>\r\n                            {this.state.LocalCardsData.SubmissionDate}\r\n                          </label>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <hr></hr>\r\n\r\n                <Row className=\"details-comment-count-row-style\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <Row>\r\n                      <Col\r\n                        xs=\"1\"\r\n                        sm=\"1\"\r\n                        md=\"1\"\r\n                        lg=\"1\"\r\n                        xl=\"1\"\r\n                        xxl=\"1\"\r\n                        className=\"pr-0\"\r\n                      >\r\n                        <MDBIcon\r\n                          icon=\"comment\"\r\n                          className=\"add-comment-style\"\r\n                          size=\"lg\"\r\n                        />\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"11\"\r\n                        sm=\"11\"\r\n                        md=\"11\"\r\n                        lg=\"11\"\r\n                        xl=\"11\"\r\n                        xxl=\"11\"\r\n                        className=\"\"\r\n                      >\r\n                        <p className=\"card-comments-style\">\r\n                          <label>\r\n                            <span>\r\n                              {this.state.LocalCardsData.CommentCount}\r\n                            </span>{\" \"}\r\n                            <span class=\"comments-count-style\">Comments</span>\r\n                          </label>\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                    {/* {\r\n                    (this.state.LocalCardsData.CommentCount === null) &&\r\n                    <p className=\"card-comments-style\">\r\n                      <span class=\"comment-icon-style\">\r\n                        <MDBIcon icon=\"comment\" className=\"amber-text pr-3\" size=\"2x\"/>\r\n                      </span>\r\n                      <label >\r\n                        0 <span class=\"comments-count-style\">Comments</span>\r\n                      </label>\r\n                    </p>\r\n                  }\r\n                  {\r\n                    (this.state.LocalCardsData.CommentCount != null) &&\r\n                    <p className=\"card-comments-style\">\r\n                    <label>\r\n                    <MDBIcon icon=\"comment\" className=\"amber-text pr-3\" size=\"2x\"/>\r\n                    {this.state.LocalCardsData.CommentCount} <span class=\"comments-count-style\">Comments</span></label></p>\r\n                  } */}\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"card-details-description-style\"\r\n                  >\r\n                    {this.state.ACardComments.map((AComent) => (\r\n                      <Container className=\"comment-cards-row-style pt-2 pb-0 pl-0 pr-0\">\r\n                        <Card className=\"comment-cards-row-style\">\r\n                          <Row className=\"pt-3\">\r\n                            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n                              <img\r\n                                src={AComent.Image}\r\n                                alt=\"\"\r\n                                class=\"card-profile-image-style\"\r\n                              />\r\n                            </Col>\r\n                            <Col xs=\"9\" sm=\"9\" md=\"9\" lg=\"9\" xl=\"9\" xxl=\"9\">\r\n                              <label class=\"mb-0 cards-lable-style\">\r\n                                {AComent.Name}\r\n                                <span class=\"commet-postedOnn-date\">\r\n                                  {\" \"}\r\n                                  - {AComent.DateOfComment}\r\n                                </span>\r\n                              </label>\r\n                              <p class=\"card-comment-description-style\">\r\n                                {AComent.CommentDescription}\r\n                              </p>\r\n                            </Col>\r\n                            <Col\r\n                              xs=\"1\"\r\n                              sm=\"1\"\r\n                              md=\"1\"\r\n                              lg=\"1\"\r\n                              xl=\"1\"\r\n                              xxl=\"1\"\r\n                              className=\"pl-0\"\r\n                            >\r\n                              {AComent.commentUserId ==\r\n                                sessionStorage.getItem(\"user_id\") && (\r\n                                <div>\r\n                                  <MDBIcon\r\n                                    icon=\"trash\"\r\n                                    onClick={() => this.Delete(AComent)}\r\n                                  />\r\n                                  {this.state.DeleteSubmit && (\r\n                                    <Dialog\r\n                                      open={this.state.DeleteDialogStatus}\r\n                                      onClose={this.DeleteDialogClose}\r\n                                      aria-labelledby=\"alert-dialog-title\"\r\n                                      aria-describedby=\"alert-dialog-description\"\r\n                                    >\r\n                                      <DialogTitle id=\"simple-dialog-title\">\r\n                                        Are you sure you want to delete comment?\r\n                                        <DialogActions>\r\n                                          <Button\r\n                                            onClick={this.DeleteACard}\r\n                                            color=\"primary\"\r\n                                          >\r\n                                            Yes\r\n                                          </Button>\r\n                                          <Button\r\n                                            onClick={this.DeleteDialogClose}\r\n                                            color=\"primary\"\r\n                                            autoFocus\r\n                                          >\r\n                                            No\r\n                                          </Button>\r\n                                        </DialogActions>\r\n                                      </DialogTitle>\r\n                                    </Dialog>\r\n                                  )}\r\n                                </div>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      </Container>\r\n                    ))}\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-2\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"9\" xl=\"9\" xxl=\"9\">\r\n                    <Row className=\"\">\r\n                      <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                      <Col\r\n                        xs=\"6\"\r\n                        sm=\"6\"\r\n                        md=\"6\"\r\n                        lg=\"6\"\r\n                        xl=\"6\"\r\n                        xxl=\"6\"\r\n                        className=\"load-more-comments-text-style\"\r\n                      >\r\n                        <label>\r\n                          {this.state.IdeaCommentCount >\r\n                            this.state.commentsCounts && (\r\n                            <Link onClick={this.LoadMore_SAT}>\r\n                              Load more comments...                            </Link>\r\n                          )}\r\n                        </label>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\">\r\n                    <Row className=\"card-details-title-row-style\">\r\n                      <Col\r\n                        xs=\"12\"\r\n                        sm=\"12\"\r\n                        md=\"12\"\r\n                        lg=\"12\"\r\n                        xl=\"12\"\r\n                        xxl=\"12\"\r\n                        className=\"card-details-title-style\"\r\n                      >\r\n                        <TextField\r\n                          id=\"outlined-textarea\"\r\n                          label=\"Comment\"\r\n                          value={this.state.description}\r\n                          onChange={this.description}\r\n                          multiline\r\n                         // variant=\"outlined\"\r\n                          rows={2}\r\n                          onInput={(e) =>\r\n                            (e.target.value = e.target.value.slice(0, 250))\r\n                          }\r\n                          className=\"p-0 start-new-idea-description-box\"\r\n                          InputProps={{\r\n                            endAdornment: (\r\n                              <InputAdornment position=\"end\" className=\"p-0\">\r\n                                <IconButton>\r\n                                  <i\r\n                                    class=\"fas fa-paper-plane fa-xs add-comment-style\"\r\n                                    onClick={this.sendComment}\r\n                                  ></i>\r\n                                </IconButton>\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n              </Container>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={3000}\r\n          hideProgressBar={false}\r\n          newestOnTop\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover={false}\r\n          className=\"toaster-style\"\r\n        />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CollaborationSDIACardDetails;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\IncidentReport\\Report-An-Incident\\Report-An-Incident.js",["1212","1213","1214","1215","1216","1217","1218","1219","1220","1221","1222","1223","1224","1225","1226","1227","1228","1229","1230","1231","1232","1233"],"import React, { Component } from \"react\";\r\nimport Header from \"../../Dashboard-header\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport CollaborationsHeadings from \"../../../jsonFiles/CollaborationJson/complaintDetails\";\r\nimport { Link } from \"react-router-dom\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"react-select\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Footer from \"../../Footer\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./Report-An-Incident.css\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport PublishUpload from \"@material-ui/icons/Publish\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../../assets/defaultprofile.png\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport footer_data from \"../../../jsonFiles/DashboardInfoJson/DashboardFooter\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nclass ReportAnIncident extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      // shareIcons: DashboardHeadings.DashIcons\r\n      newTitle: \"\",\r\n      newTitleValidate: false,\r\n      description: \"\",\r\n      descriptionValidate: false,\r\n      tag: \"\",\r\n      tagValidate: false,\r\n      SelectedType: \"\",\r\n      SelectedTypeValidate: false,\r\n      APIResponse: \"\",\r\n      successfullyLogComplaint: false,\r\n      SubmitAlert: false,\r\n      dialogBoxStatus: false,\r\n      file_upload1: null,\r\n      file_upload2: null,\r\n      file_upload3: null,\r\n      file_upload: [],\r\n      fileName: [],\r\n      fileNameData: [],\r\n      tooManyFiles: false,\r\n      largeFileSize: false,\r\n      dialogBoxStatus: false,\r\n      CategoryList: \"\",\r\n      isOpen: false,\r\n      submit: false,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      eventTarget: \"\",\r\n      footer: footer_data.paths,\r\n      isLogin: \"\",\r\n      anonimousflag: false,\r\n    };\r\n    this.newTitleValidate = this.newTitleValidate.bind(this);\r\n    this.Submit = this.Submit.bind(this);\r\n    this.descriptionValidate = this.descriptionValidate.bind(this);\r\n    this.UploadAttachedFiles = this.UploadAttachedFiles.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.changeLocation = this.changeLocation.bind(this);\r\n    this.cancelUpload = this.cancelUpload.bind(this);\r\n    this.incidentBack = this.incidentBack.bind(this);\r\n    this.getTruncatedName=this.getTruncatedName.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n   // this.cancelUpload = this.cancelUpload.bind(this);\r\n    this.AnonimousCheckboxToggle_SAT = this.AnonimousCheckboxToggle_SAT.bind(\r\n      this\r\n    );\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      document.body.style = \"background-image: url();\";\r\n      document.body.style = \"background: #F9F9F9\";\r\n      if (sessionStorage.getItem(\"incidentCatgValue\")) {\r\n        var tempObj = {\r\n          value: sessionStorage.getItem(\"incidentCatgValue\"),\r\n          label: sessionStorage.getItem(\"incidentCatglabel\"),\r\n        };\r\n        this.setState({\r\n          SelectedType: tempObj,\r\n          SelectedTypeValidate: true,\r\n        });\r\n      }\r\n      if (sessionStorage.getItem(\"incidentTitle\")) {\r\n        this.setState({\r\n          newTitle: sessionStorage.getItem(\"incidentTitle\"),\r\n          newTitleValidate: true,\r\n        });\r\n      }\r\n      if (sessionStorage.getItem(\"incidentDesc\")) {\r\n        this.setState({\r\n          description: sessionStorage.getItem(\"incidentDesc\"),\r\n          descriptionValidate: true,\r\n        });\r\n      }\r\n      if (sessionStorage.getItem(\"AnonimousCheckboxflag\")) {\r\n        this.setState({\r\n          anonimousflag: sessionStorage.getItem(\"AnonimousCheckboxflag\"),\r\n        });\r\n      } else {\r\n        this.setState({\r\n          anonimousflag: false,\r\n        });\r\n      }\r\n      // this.setState({\r\n      //   newTitle: sessionStorage.getItem(\"incidentTitle\"),\r\n      //   newTitleValidate: true,\r\n      //   description: sessionStorage.getItem(\"incidentDesc\"),\r\n      //   descriptionValidate: true\r\n      // });\r\n      this.getCategoryList();\r\n    }\r\n  }\r\n\r\n  getCategoryList() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n      }),\r\n    };\r\n\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/incident/getincidentcategory\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.message === \"Data Found\") {\r\n          const options = this.state.APIResponse.data.map((d) => ({\r\n            value: d.incident_cat_id,\r\n            label: d.incident_cat_type,\r\n          }));\r\n          this.setState({ CategoryList: options });\r\n        } else {\r\n          toast.error(\"Something went wrong, Please try again\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () =>\r\n              this.props.history.push(\"/collaboration-shareDiscussIdeas\"),\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  changeLocation() {\r\n    sessionStorage.setItem(\"incidentBack\", \"reportAnIncident\");\r\n  }\r\n\r\n  incidentBack() {\r\n    sessionStorage.removeItem(\"incidentBack\");\r\n    sessionStorage.setItem(\r\n      \"incidentLocation\",\r\n      sessionStorage.getItem(\"currentAddress\")\r\n    );\r\n    sessionStorage.removeItem(\"mapsBack\");\r\n    sessionStorage.removeItem(\"incidentTemplong\");\r\n    sessionStorage.removeItem(\"incidentTemplat\");\r\n    sessionStorage.removeItem(\"incidentTempLocation\");\r\n    sessionStorage.removeItem(\"incidentlong\");\r\n    sessionStorage.removeItem(\"incidentlat\");\r\n    sessionStorage.removeItem(\"incidentTitle\");\r\n    sessionStorage.removeItem(\"incidentDesc\");\r\n    sessionStorage.removeItem(\"incidentCatgValue\");\r\n    sessionStorage.removeItem(\"incidentCatglabel\");\r\n    sessionStorage.removeItem(\"AnonimousCheckboxflag\");\r\n  }\r\n\r\n  newTitleValidate = (e) => {\r\n    var title = e.target.value;\r\n    if (title != \"\") {\r\n      this.setState({\r\n        newTitle: e.target.value,\r\n        newTitleValidate: true,\r\n      });\r\n      sessionStorage.setItem(\"incidentTitle\", title);\r\n    } else {\r\n      this.setState({\r\n        newTitle: e.target.value,\r\n        newTitleValidate: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  descriptionValidate = (e) => {\r\n    this.setState({\r\n      description: e.target.value,\r\n      descriptionValidate: true,\r\n    });\r\n    sessionStorage.setItem(\"incidentDesc\", e.target.value);\r\n  };\r\n\r\n  CategoryTypeValidate = (Selected_option) => {\r\n    this.setState({\r\n      SelectedType: Selected_option,\r\n      SelectedTypeValidate: true,\r\n    });\r\n    sessionStorage.setItem(\"incidentCatgValue\", Selected_option.value);\r\n    sessionStorage.setItem(\"incidentCatglabel\", Selected_option.label);\r\n  };\r\n\r\n  UploadAttachedFiles = (e) => {\r\n    var test = document.getElementsByClassName(\"file1upload\")[0].attributes[0]\r\n      .nodeValue;\r\n\r\n    if (e.currentTarget.files.length < 4) {\r\n      for (var i = 0; i < e.currentTarget.files.length; i++) {\r\n        // console.log(\"File size = \", e.currentTarget.files[i].size/1024/1024);\r\n        if (e.currentTarget.files[i].size / 1024 / 1024 > 5) {\r\n          this.state.largeFileSize = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (this.state.largeFileSize === false) {\r\n        this.setState({\r\n          file_upload1: e.currentTarget.files[0],\r\n          file_upload2: e.currentTarget.files[1],\r\n          file_upload3: e.currentTarget.files[2],\r\n          fileName1: e.currentTarget.files[0].name,\r\n          fileName2: e.currentTarget.files[1].name,\r\n          fileName3: e.currentTarget.files[2].name,\r\n        });\r\n      } else {\r\n        toast.warn(\"The file size should not be greater than 5 MB.\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n         this.state.largeFileSize = false;\r\n         this.myRef.current.value=\"\" ;\r\n      }\r\n    } else {\r\n      toast.error(\"Only 3 files are allowed to upload.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n  AnonimousCheckboxToggle_SAT = (e) => {\r\n    var temp;\r\n    if (this.state.anonimousflag == false) {\r\n      this.setState({anonimousflag: true,});\r\n      temp=true;\r\n    } else {\r\n      this.setState({anonimousflag: false,});\r\n      temp=false;\r\n    }\r\n    sessionStorage.setItem(\"AnonimousCheckboxflag\",temp);\r\n  };\r\n   getTruncatedName=(attachmentname)=>{\r\n    if(attachmentname.length>25)\r\n    {\r\n      var truncatename= attachmentname.substr(0,10)+'...'+attachmentname.substr(attachmentname.length-8,attachmentname.length-1)\r\n      return truncatename;\r\n    }\r\n    else{\r\n    return(attachmentname);\r\n    }\r\n  }\r\n  cancelUpload(num) {\r\n    var array = [...this.state.fileName]; // make a separate copy of the array\r\n    var index = num;\r\n    if (index !== -1) {\r\n      array.splice(index, 1);\r\n      this.setState({ fileName: array });\r\n       this.myRef.current.value=\"\";\r\n    }\r\n  }\r\n\r\n  onChangeFile(e) {\r\n    let files = e.target.files;\r\n    //  console.log(files);  var test=document.getElementsByClassName(\"file1upload\")[0].attributes[0].nodeValue;\r\n\r\n    var totalSelectedCount =\r\n      e.currentTarget.files.length + this.state.fileName.length;\r\n    if (e.currentTarget.files.length < 4 && totalSelectedCount < 4) {\r\n      for (var i = 0; i < e.currentTarget.files.length; i++) {\r\n        if (e.currentTarget.files[i].size / 1024 / 1024 > 5) {\r\n          this.state.largeFileSize = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (this.state.largeFileSize === false) {\r\n        console.log(this.state.fileName.length);\r\n\r\n        var test = [];\r\n        for (var j = 0; j < this.state.fileName.length; j++) {\r\n          test[j] = this.state.fileName[j];\r\n        }\r\n        for (var i = 0; i < e.currentTarget.files.length; i++) {\r\n          test[j] = e.currentTarget.files[i];\r\n          j++;\r\n        }\r\n        this.setState({ test });\r\n\r\n        this.setState({\r\n          fileName: test,\r\n        });\r\n        console.log(\"test\", this.state.fileName);\r\n\r\n        // toast.success('Files Uploaded', {\r\n        //   position: \"top-center\",\r\n        //         autoClose: 3000,\r\n        //         hideProgressBar: false,\r\n        //         closeOnClick: true,\r\n        //         pauseOnHover: true,\r\n        //         draggable: true,\r\n        //         progress: undefined,\r\n        //         theme: \"light\",\r\n        //   });\r\n      } else {\r\n        \r\n        toast.warn(\"The file size should not be greater than 5 MB.\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n         this.state.largeFileSize = false;\r\n         this.myRef.current.value=\"\" ;\r\n      }\r\n    } else {\r\n      toast.error(\"Only 3 files are allowed to upload.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      largeFileSize: false,\r\n      tooManyFiles: false,\r\n      dialogBoxStatus: false,\r\n    });\r\n  }\r\n\r\n  Submit() {\r\n    if (this.state.newTitleValidate && this.state.SelectedTypeValidate) {\r\n      this.refs.btn.setAttribute(\"disabled\", \"disabled\");\r\n      let formData = new FormData();\r\n\r\n      formData.append(\"token\", sessionStorage.getItem(\"token\"));\r\n      formData.append(\"user_id\", sessionStorage.getItem(\"user_id\"));\r\n      formData.append(\"incident_cat_id\", this.state.SelectedType.value);\r\n      formData.append(\"title\", this.state.newTitle);\r\n      formData.append(\"is_anonymous\", this.state.anonimousflag);\r\n      if (\r\n        this.state.description == null ||\r\n        this.state.description == undefined ||\r\n        this.state.description == \"null\"\r\n      ) {\r\n        formData.append(\"description\", \" \");\r\n      } else {\r\n        formData.append(\"description\", this.state.description);\r\n      }\r\n      formData.append(\"ward_id\", sessionStorage.getItem(\"ward_id\"));\r\n      for (var i = 1; i <= this.state.fileName.length; i++) {\r\n        formData.append(\"file\" + i, this.state.fileName[i - 1]);\r\n      }\r\n\r\n      if (sessionStorage.getItem(\"incidentlong\")) {\r\n        formData.append(\"longitude\", sessionStorage.getItem(\"incidentlong\"));\r\n        formData.append(\"latitude\", sessionStorage.getItem(\"incidentlat\"));\r\n        formData.append(\"address\", sessionStorage.getItem(\"incidentLocation\"));\r\n      } else {\r\n        formData.append(\r\n          \"longitude\",\r\n          sessionStorage.getItem(\"currentLongitude\")\r\n        );\r\n        formData.append(\"latitude\", sessionStorage.getItem(\"currentLatitude\"));\r\n        formData.append(\"address\", sessionStorage.getItem(\"currentAddress\"));\r\n      }\r\n\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        body: formData,\r\n        // headers: { 'Content-Type': 'application/json' },\r\n        // body: JSON.stringify(\r\n        //   {\r\n        //     \"user_id\": sessionStorage.getItem(\"user_id\"),\r\n        //     \"token\": sessionStorage.getItem(\"token\"),\r\n        //     \"latitude\": null,\r\n        //     \"longitude\": null,\r\n        //     \"complaint_cat_id\": this.state.SelectedType.value,\r\n        //     \"title\": this.state.newTitle,\r\n        //     \"complaint\": this.state.description,\r\n        //     \"ward_id\":sessionStorage.getItem(\"ward_id\")\r\n        //   }\r\n        // )\r\n      };\r\n\r\n      fetch(\r\n        \"https://scity.gmmspl.com:3000/incident/createincident\",\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            APIResponse: data,\r\n          });\r\n          if (\r\n            this.state.APIResponse.message === \"Incident Added Successfully\"\r\n          ) {\r\n            toast.success(\"Incident successfully Reported\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              onClose: () => this.props.history.push(\"/incidentReport\"),\r\n            });\r\n            sessionStorage.removeItem(\"incidentBack\");\r\n            sessionStorage.setItem(\r\n              \"incidentLocation\",\r\n              sessionStorage.getItem(\"currentAddress\")\r\n            );\r\n            sessionStorage.removeItem(\"mapsBack\");\r\n            sessionStorage.removeItem(\"incidentTemplong\");\r\n            sessionStorage.removeItem(\"incidentTemplat\");\r\n            sessionStorage.removeItem(\"incidentTempLocation\");\r\n            sessionStorage.removeItem(\"incidentlong\");\r\n            sessionStorage.removeItem(\"incidentlat\");\r\n            sessionStorage.removeItem(\"incidentTitle\");\r\n            sessionStorage.removeItem(\"incidentDesc\");\r\n            sessionStorage.removeItem(\"incidentCatgValue\");\r\n            sessionStorage.removeItem(\"incidentCatglabel\");\r\n            sessionStorage.removeItem(\"AnonimousCheckboxflag\");\r\n          } else {\r\n            toast.error(\r\n              \"Incident is not Reported,something went wrong. Please try again\",\r\n              {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              }\r\n            );\r\n          }\r\n        });\r\n    } else {\r\n      toast.error(\"Title and category cannot be empty\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      dialogBoxStatus: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <Header /> */}\r\n        {/* <Container className=\"all-header-space\"></Container> */}\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"header-height-style_SAT\">\r\n            <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n              {/* <div class=\"back-icon-circle-style\"> */}\r\n              <Link onClick={this.incidentBack} to=\"/incidentReport\">\r\n                <Tooltip\r\n                  title=\"Dashboard\"\r\n                  placement=\"top\"\r\n                  TransitionProps={{ timeout: 600 }}\r\n                >\r\n                  <MDBIcon\r\n                    icon=\"chevron-circle-left\"\r\n                    size=\"2x\"\r\n                    className=\"back-arrow-icon\"\r\n                  />\r\n                </Tooltip>\r\n              </Link>\r\n              {/* </div> */}\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"8\"\r\n              sm=\"8\"\r\n              md=\"8\"\r\n              lg=\"8\"\r\n              xl=\"8\"\r\n              xxl=\"8\"\r\n              className=\"header-title-style_SAT\"\r\n            >\r\n              <label class=\"header-heading-label-style\">\r\n                {CollaborationsHeadings.Incident_log_HEADING}\r\n              </label>\r\n            </Col>\r\n\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 profile-image-align-style\"\r\n            >\r\n              <Dropdown\r\n                menuAlign=\"right\"\r\n                className=\"dropdown-profile-icon-style\"\r\n              >\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Row className=\"pb-5 pageImage-style\">\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col\r\n            xs=\"12\"\r\n            sm=\"12\"\r\n            md=\"10\"\r\n            lg=\"6\"\r\n            xl=\"6\"\r\n            xxl=\"6\"\r\n            className=\"bg-container-style-opacity\"\r\n          >\r\n            {/* <Row className=\"pt-1 pb-1\">\r\n              <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"1\" xl=\"1\" xxl=\"1\" className=\"back-arrow-icon-style pl-4\">\r\n                <Link onClick={this.incidentBack} to=\"/incidentReport\">\r\n                  <MDBIcon icon=\"arrow-circle-left\" size=\"2x\" className=\"back-arrow-icon\"/>\r\n                </Link>\r\n              </Col>\r\n              <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"11\" xl=\"11\" xxl=\"11\" className=\"start-new-Idea-heading\">\r\n                {CollaborationsHeadings.Incident_log_HEADING}\r\n              </Col>\r\n            </Row> */}\r\n\r\n            <div class=\"details-container-style inner-container-style-collaboration\">\r\n              <Row className=\"ml-3 mt-3 mr-3\">\r\n                <Col\r\n                  xs=\"12\"\r\n                  sm=\"12\"\r\n                  md=\"12\"\r\n                  lg=\"12\"\r\n                  xl=\"12\"\r\n                  xxl=\"12\"\r\n                  className=\"incident-banners banner-submenu-style\"\r\n                >\r\n                  <Row>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                      <Row className=\"report-incident-banner-text\">\r\n                        Share details of the incident with supporting media and\r\n                        location for quick help\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Container>\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <TextField\r\n                      id=\"standard-required\"\r\n                      label=\"Title\"\r\n                      onInput={(e) =>\r\n                        (e.target.value = e.target.value.slice(0, 250))\r\n                      }\r\n                      value={this.state.newTitle}\r\n                      onChange={this.newTitleValidate}\r\n                      required\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <Select\r\n                      placeholder={\r\n                        <label>\r\n                          Select Category\r\n                          <span class=\"select-astric-red\"> *</span>\r\n                        </label>\r\n                      }\r\n                      options={this.state.CategoryList}\r\n                      isSearchable={false}\r\n                      className=\"category-drop-style\"\r\n                      value={this.state.SelectedType}\r\n                      onChange={this.CategoryTypeValidate}\r\n                      maxMenuHeight={170}\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-2\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"12\" sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n                    <Row className=\"\">\r\n                      <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                        <Checkbox\r\n                          checked={this.state.anonimousflag}\r\n                          size=\"small\"\r\n                          className=\"login-checkbox-style\"\r\n                          inputProps={{\r\n                            \"aria-label\": \"checkbox with default color\",\r\n                          }}\r\n                          onChange={this.AnonimousCheckboxToggle_SAT}\r\n                        />\r\n                        <label class=\"keep-me-log-in-style\">\r\n                          Report Anonymously\r\n                        </label>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col\r\n                        xs=\"12\"\r\n                        sm=\"12\"\r\n                        md=\"12\"\r\n                        lg=\"12\"\r\n                        xl=\"12\"\r\n                        xxl=\"12\"\r\n                        className=\"pt-1\"\r\n                      >\r\n                        <label>\r\n                          <span class=\"anonymous-text-note-style\">Note :</span>\r\n                          <span class=\"anonymous-text-style\">\r\n                            {\" \"}\r\n                            If reported anonymously, civic authorities will not get your details like name, phone no. etc. Also, you will not be able to view it in your incident list or track its status.\r\n                          </span>\r\n                        </label>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pt-4\"\r\n                  >\r\n                    <TextField\r\n                      id=\"outlined-textarea\"\r\n                      label=\"Tell us more...\"\r\n                      onInput={(e) =>\r\n                        (e.target.value = e.target.value.slice(0, 500))\r\n                      }\r\n                      multiline\r\n                    //  variant=\"outlined\"\r\n                      rows={3}\r\n                      className=\"start-new-idea-description-box\"\r\n                      value={this.state.description}\r\n                      onChange={this.descriptionValidate}\r\n                    />\r\n                    <label class=\"max-char-count-text-display\">\r\n                      Max character limit : 500\r\n                    </label>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pt-4\"\r\n                  >\r\n                    <Row>\r\n                      <Col\r\n                        xs=\"7\"\r\n                        sm=\"7\"\r\n                        md=\"7\"\r\n                        lg=\"7\"\r\n                        xl=\"7\"\r\n                        xxl=\"7\"\r\n                        className=\"geolocation-font-style\"\r\n                      >\r\n                        <label>\r\n                          {sessionStorage.getItem(\"incidentLocation\")}\r\n                        </label>\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"5\"\r\n                        sm=\"5\"\r\n                        md=\"5\"\r\n                        lg=\"5\"\r\n                        xl=\"5\"\r\n                        xxl=\"5\"\r\n                        className=\"text-align-right pl-0\"\r\n                      >\r\n                        <Link\r\n                          className=\"geolocation-button-style\"\r\n                          onClick={this.changeLocation}\r\n                          to=\"/Maps\"\r\n                        >\r\n                          <MDBIcon icon=\"map-marker-alt\" />\r\n                          <label class=\"geolocation-button-font-style\">\r\n                            Change Location\r\n                          </label>\r\n                        </Link>\r\n                      </Col>\r\n                    </Row>\r\n                    <hr className=\"bold-hr\"></hr>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col\r\n                    xs=\"12\"\r\n                    sm=\"12\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pt-4\"\r\n                  >\r\n                    <Row className=\"pt-3 pl-3\">\r\n                      <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\" xxl=\"12\">\r\n                        <Row>\r\n                          <Col\r\n                            xs=\"4\"\r\n                            sm=\"4\"\r\n                            md=\"4\"\r\n                            lg=\"4\"\r\n                            xl=\"4\"\r\n                            xxl=\"4\"\r\n                            className=\"Attachment-font-style pl-0\"\r\n                          >\r\n                            Attachment\r\n                          </Col>\r\n\r\n                          <Col\r\n                            xs=\"8\"\r\n                            sm=\"8\"\r\n                            md=\"8\"\r\n                            lg=\"8\"\r\n                            xl=\"8\"\r\n                            xxl=\"8\"\r\n                            className=\"text-align-right\"\r\n                          >\r\n                            <label\r\n                              htmlFor=\"myInput\"\r\n                              className=\"uploadbuttonstyle\"\r\n                            >\r\n                              Upload\r\n                              <PublishUpload fontSize=\"small\" />\r\n                            </label>\r\n                            <input\r\n                              id=\"myInput\"\r\n                              style={{ display: \"none\" }}\r\n                              type={\"file\"}\r\n                              multiple\r\n                              accept=\"image/png, image/jpg, image/jpeg ,video/mp4,video/x-m4v,video/*,application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint,\r\n                            text/plain, application/pdf, .docx, .doc, .xlsx, .pptx, .txt\"\r\n                              onChange={(e) => this.onChangeFile(e)}\r\n                               ref={this.myRef}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className=\"max-size-font-style\">\r\n                          Attach Image/Video/Document <i>(max size 5MB)</i>\r\n                        </Row>\r\n                        <Row className=\"max-size-font-style\">\r\n                          Maximum 3 attachments allowed\r\n                        </Row>\r\n                        <Row className=\"pt-3\">\r\n                          <Col\r\n                            xs=\"10\"\r\n                            sm=\"10\"\r\n                            md=\"10\"\r\n                            lg=\"10\"\r\n                            xl=\"10\"\r\n                            xxl=\"10\"\r\n                            className=\"pl-0\"\r\n                          >\r\n                            {this.state.fileName.map((file, index) => (\r\n                              <div className=\"file1upload\">{this.getTruncatedName(file.name)}</div>\r\n                            ))}\r\n                          </Col>\r\n                          <Col\r\n                            xs=\"2\"\r\n                            sm=\"2\"\r\n                            md=\"2\"\r\n                            lg=\"2\"\r\n                            xl=\"2\"\r\n                            xxl=\"2\"\r\n                            className=\"pl-0\"\r\n                          >\r\n                            {this.state.fileName.map((file, index) => (\r\n                              <div className=\"file1upload\">\r\n                                <CancelIcon\r\n                                  color=\"secondary\"\r\n                                  fontSize=\"small\"\r\n                                  onClick={() => this.cancelUpload(index)}\r\n                                />\r\n                              </div>\r\n                            ))}\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n\r\n                      <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\" xl=\"4\" xxl=\"4\"></Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-4 pb-5\">\r\n                  <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"5\" lg=\"5\" xl=\"5\" xxl=\"5\">\r\n                    <Button\r\n                      className=\"login-button-style\"\r\n                      onClick={this.Submit}\r\n                      ref=\"btn\"\r\n                    >\r\n                      SUBMIT\r\n                    </Button>\r\n                  </Col>\r\n                  <Col xs=\"6\" sm=\"6\" md=\"5\" lg=\"5\" xl=\"5\" xxl=\"5\">\r\n                    <Link onClick={this.incidentBack} to=\"/incidentReport\">\r\n                      <Button className=\"skip-button-style\">CANCEL</Button>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col xs=\"0\" sm=\"0\" md=\"10\" lg=\"1\" xl=\"1\" xxl=\"1\"></Col>\r\n                </Row>\r\n              </Container>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"1\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row>\r\n        <Row className=\"pb-3\"></Row>\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={3000}\r\n          hideProgressBar={false}\r\n          newestOnTop\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover={false}\r\n          className=\"toaster-style\"\r\n        />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReportAnIncident;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\jsonFiles\\DashboardInfoJson\\DashboardFooter.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\jsonFiles\\CollaborationJson\\collaborationDetails.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\jsonFiles\\UserInfoJson\\userLogin.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\jsonFiles\\CollaborationTabInfoJson\\collaborationtabinfo.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\jsonFiles\\CollaborationJson\\complaintDetails.js",["1234","1235"],"import LogComplaintBackButton from \"../../assets/backIcon.png\";\r\n// import cardsProfileDefault from \"../../assets/defaultprofile.png\";\r\nimport SearchComplainImg from '../../assets/cityappsicon/complaint/search complaint.png';\r\n// import ComplainStatusImg from '../../assets/cityappsicon/complaint/complaint status.png';\r\nimport ComplainLogImg from '../../assets/cityappsicon/complaint/log complain.png';\r\n\r\nconst complaintDetails = {\r\n    \"Complaint_NavigateTo_COMPLAINTS\":\"/dashboard-complaintManagement\",\r\n    \"Complaint_Search_ICON\":SearchComplainImg,\r\n\t\"Complaint_Search_HEADING\":\"Search Complaint\",\r\n\t\"Incident_Search_HEADING\":\"Search Incident\",\r\n    \"Complaint_Status_ICON\":SearchComplainImg,\r\n\t\"Complaint_Status_HEADING\":\"My Complaint Status\",\r\n\t\"Incident_Status_HEADING\":\"Incident Status\",\r\n    \"Complaint_Status_TOTAL\":\"TOTAL\",\r\n    \"Complaint_Status_INPROGRESS\":\"IN PROGRESS\",\r\n    \"Complaint_Status_CLOSED\":\"CLOSED\",\r\n    \"Complaint_log_HEADING_IMG\" : ComplainLogImg,\r\n\t\"Complaint_log_HEADING\" : \"Log A Complaint\",\r\n\t\"Incident_log_HEADING\" : \"Report An Incident\",\r\n    \"Search_data\" : [\r\n        {\r\n            \"complaint_subject\": \"\",\r\n\t\t\t\"full_name\": \"\",\r\n\t\t\t\"submission_date\": \"2021-08-18T10:29:00.000Z\",\r\n\t\t\t\"complaint_type\": \"\",\r\n\t\t\t\"status\": \"Open\",\r\n\t\t\t\"complaint_id\": (Number),\r\n\t\t\t\"complaint_cat_id\": 4,\r\n\t\t\t\"ward_id\": 1,\r\n\t\t\t\"ward_name\": \"Test\"\r\n        }\r\n    ],\r\n    \"Search_Complaint_Details\" : [\r\n        {\r\n\t\t\t\"image\": \"public/UserImage/CardsProfileDefaultImage.png\",\r\n\t\t\t\"user_id\": 70,\r\n\t\t\t\"full_name\": \"Shruti Tiwarkar\",\r\n\t\t\t\"ComplaintTitle\": \"Lights are off\",\r\n\t\t\t\"ComplaintDescription\": \"Lights issue\",\r\n\t\t\t\"complaint_id\": 308,\r\n\t\t\t\"complaint_type\": \"Footpath & Street Light issues\",\r\n\t\t\t\"ComplaintPostdedDate\": \"19 Aug 2021 10:12 AM\",\r\n\t\t\t\"ComplaintStatus\": \"Open\",\r\n\t\t\t\"ComplaintStatusId\": 1,\r\n\t\t\t\"ComplaintCategoryID\": 7,\r\n\t\t\t\"ComplaintCategoryName\": \"Footpath & Street Light issues\",\r\n\t\t\t\"WardId\": 1,\r\n\t\t\t\"WardName\": \"Test\",\r\n\t\t\t\"is_admin\": false,\r\n\t\t\t\"complaint_media\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"complaint_media_file\": \"public/assests/complaint/thread3081/tam0127u.pdf\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"complaint_media_file\": \"public/assests/complaint/thread3081/tpx0326y.pdf\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"comment_count\": \"1\",\r\n\t\t\t\"comments\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"complaint_thread_id\": 81,\r\n\t\t\t\t\t\"image_path\": \"public/UserImage/CardsProfileDefaultImage.png\",\r\n\t\t\t\t\t\"full_name\": \"Hemant Deshmukh\",\r\n\t\t\t\t\t\"comments\": \"This is test by parag\",\r\n\t\t\t\t\t\"user_id\": 9,\r\n\t\t\t\t\t\"submission_date\": \"02 Aug 2021 12:58 PM\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"incident_media\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"incident_media_file\": \"\",\r\n\t\t\t\t\t\"media_id\": 63\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"complaint_media\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"complaint_media_file\": \"\",\r\n\t\t\t\t\t\"media_id\": 63\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t],\r\n\t\"Search_incident_Details\" : [\r\n        {\r\n\t\t\t\"User_id\": 70,\r\n\t\t\t\"Full_name\": \"Shruti Tiwarkar\",\r\n\t\t\t\"Incident_Title\": \"Bus Accident\",\r\n\t\t\t\"Incident_Description\": \"Bus Accident near me\",\r\n\t\t\t\"Incident_Id\": 96,\r\n\t\t\t\"Incident_Type\": \"Road blockage\",\r\n\t\t\t\"Incident_PostdedDate\": \"20 Aug 2021 2:56 PM\",\r\n\t\t\t\"Incident_Status\": \"Open\",\r\n\t\t\t\"Incident_StatusId\": 1,\r\n\t\t\t\"Incident_CategoryID\": 1,\r\n\t\t\t\"Incident_CategoryName\": \"Road blockage\",\r\n\t\t\t\"Ward_Name\": \"Test\",\r\n\t\t\t\"is_admin\": false,\r\n\t\t\t\"comment_count\": \"1\",\r\n\t\t\t\"incident_media\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"incident_media_file\": null,\r\n\t\t\t\t\t\"media_id\": null\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"comments\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"comment_incident_id\": 97,\r\n\t\t\t\t\t\"image_path\": \"public/UserImage/CardsProfileDefaultImage.png\",\r\n\t\t\t\t\t\"full_name\": \"\",\r\n\t\t\t\t\t\"comments\": \"\",\r\n\t\t\t\t\t\"user_id\": 70,\r\n\t\t\t\t\t\"is_admin\": false,\r\n\t\t\t\t\t\"submission_date\": \"\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n    ],\r\n}\r\n\r\nexport default complaintDetails;","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-header\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-middleMainMenu\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\UserGeoMapComponent\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-middleMainMenu\\Dashboard-middleMainMenu.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Dashboard-header\\Dashboard-header.js",["1236","1237","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1248"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport \"./Dashboard-header.css\";\r\nimport DashboardHeadings from \"../../jsonFiles/DashboardInfoJson/dashboardInfo\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport footer_data from \"../../jsonFiles/DashboardInfoJson/DashboardFooter\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport headerProfile_img from \"../../assets/defaultprofile.png\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport HeaderLogo from \"../../assets/HeaderLogo.png\";\r\n\r\nclass DashboardHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      submit: false,\r\n      logoutDialogStatus: false,\r\n      logStatus: false,\r\n      isMenuOpen: false,\r\n      eventTarget: \"\",\r\n      footer: footer_data.paths,\r\n      isLogin: \"\",\r\n    };\r\n    this.logout = this.logout.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.openMenu = this.openMenu.bind(this);\r\n    this.menuClose = this.menuClose.bind(this);\r\n    this.openProfileSettings = this.openProfileSettings.bind(this);\r\n\r\n    // this.logoutDialogOpen = this.logoutDialogOpen.bind(this);\r\n    // this.logoutDialogClose = this.logoutDialogClose.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.style = \"background-image: url(/src/assets/Group 1134.png);\";\r\n  }\r\n\r\n  openProfileSettings() {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") != undefined ||\r\n      sessionStorage.getItem(\"user_id\") != null\r\n    ) {\r\n      this.setState({\r\n        submit: true,\r\n        logoutDialogStatus: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submit: false,\r\n        logoutDialogStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  logoutDialogClose = () => {\r\n    this.setState({\r\n      logoutDialogStatus: false,\r\n    });\r\n  };\r\n\r\n  okHomePage = () => {\r\n    sessionStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  openMenu = (e) => {\r\n    console.log(\"isMenuOpen = \", e.currentTarget);\r\n\r\n    this.setState({\r\n      isMenuOpen: true,\r\n      eventTarget: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  menuClose = () => {\r\n    // console.log(\"isMenuOpen = \", isMenuOpen);\r\n    this.setState({\r\n      isMenuOpen: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container fluid className=\"header-style\">\r\n          <Row className=\"dashboard-tytle-allign-style_SAT\">\r\n            {/* <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n          <Link to='/dashboard'>\r\n            <Tooltip title=\"Dashboard\" placement=\"top\" TransitionProps={{ timeout: 600 }}>\r\n              <HomeOutlinedIcon className=\"header-menu-icon-style\" fontSize=\"medium\"/>\r\n            </Tooltip>\r\n              </Link>\r\n            </Col> */}\r\n            <Col\r\n              xs=\"10\"\r\n              sm=\"10\"\r\n              md=\"10\"\r\n              lg=\"10\"\r\n              xl=\"10\"\r\n              xxl=\"10\"\r\n              className=\"align-left dashboard-header-title-style_SAT pr-0\"\r\n            >\r\n              {/* <label class=\"header-heading-label-style\">{DashboardHeadings.Dashboard_HEADING_SAT}</label> */}\r\n              <img\r\n                className=\"forgetheader-profile-image-style\"\r\n                src={HeaderLogo}\r\n                alt=\"\"\r\n              />\r\n            </Col>\r\n            <Col\r\n              xs=\"2\"\r\n              sm=\"2\"\r\n              md=\"2\"\r\n              lg=\"2\"\r\n              xl=\"2\"\r\n              xxl=\"2\"\r\n              className=\"pl-0 pt-1\"\r\n            >\r\n              {/* <MenuIcon className=\"header-menu-icon-style\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={this.openMenu}/>\r\n              <Menu\r\n                className=\"menu-box-style\"\r\n                // id=\"simple-menu\"\r\n                anchorEl={this.state.eventTarget}\r\n                // keepMounted\r\n                open={this.openMenu}\r\n                onClose={this.menuClose}\r\n              >\r\n              <MenuItem onClick={this.menuClose}>Profile</MenuItem>\r\n              <MenuItem onClick={this.menuClose}>Logout</MenuItem>\r\n              </Menu> */}\r\n              <Dropdown menuAlign=\"right\" className=\"dropdown-profile-style\">\r\n                <Dropdown.Toggle variant=\"info\">\r\n                  <div>\r\n                    {(sessionStorage.getItem(\"login_type\") === \"google\" ||\r\n                      sessionStorage.getItem(\"login_type\") === \"facebook\") && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {sessionStorage.getItem(\"login_type\") === \"manual\" && (\r\n                      <div>\r\n                        {sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={sessionStorage.getItem(\"yourProfileImage\")}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        {!sessionStorage.getItem(\"yourProfileImage\") && (\r\n                          <img\r\n                            className=\"header-profile-image-style\"\r\n                            src={headerProfile_img}\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {/* <Dropdown.Header>Sort By</Dropdown.Header>\r\n              <Dropdown.Item active>Last 7 days</Dropdown.Item> */}\r\n                  <Dropdown.Item>\r\n                    {/* <Link to={this.state.footer[1].NavigateTo}> */}\r\n                    <div onClick={this.openProfileSettings}>\r\n                      <PersonOutlineOutlinedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">\r\n                        Profile Settings\r\n                      </label>\r\n                    </div>\r\n                    {/* </Link> */}\r\n                  </Dropdown.Item>\r\n\r\n                  {!(\r\n                    sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined\r\n                  ) && (\r\n                    <Dropdown.Item onClick={this.logout}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Logout</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(sessionStorage.getItem(\"user_id\") == null ||\r\n                    sessionStorage.getItem(\"user_id\") == undefined) && (\r\n                    <Dropdown.Item onClick={this.login}>\r\n                      <ExitToAppRoundedIcon className=\"dropdown-icon-style\" />\r\n                      <label class=\"dropdown-font-style\">Login</label>\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {this.state.submit && (\r\n                    <Dialog\r\n                      open={this.state.logoutDialogStatus}\r\n                      onClose={this.logoutDialogClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                      <DialogTitle id=\"simple-dialog-title\">\r\n                        Are you sure you want to Logout?\r\n                        <DialogActions>\r\n                          <Button onClick={this.okHomePage} color=\"primary\">\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.logoutDialogClose}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </DialogTitle>\r\n                    </Dialog>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={3000}\r\n          hideProgressBar={false}\r\n          newestOnTop\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover={false}\r\n          className=\"toaster-style\"\r\n        />\r\n      </div>\r\n\r\n      //     <Container fluid className=\"header-style\">\r\n      //       <div>\r\n      //  <Row className=\"dashboard-tytle-allign-style_SAT\">\r\n      //  <Col xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\" className=\"dashboard-header-title-style_SAT\"><label>{DashboardHeadings.Dashboard_HEADING_SAT}</label></Col>\r\n      //  <Col xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"1\" xxl=\"1\">\r\n      //  <img className=\"logout-align\" alt=\"\" src={DashboardHeadings.Dashboard_Header_Image} onClick={this.logout}/></Col>\r\n      //  {\r\n      //                       (this.state.submit) &&\r\n      //                       <Dialog open={this.state.logoutDialogStatus} onClose={this.logoutDialogClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n      //                         <DialogTitle id=\"simple-dialog-title\">Are you sure you want to Logout?\r\n      //                          <DialogActions>\r\n      //                         <Button onClick={this.okHomePage} color=\"primary\">\r\n      //                           Yes\r\n      //                         </Button>\r\n      //                         <Button onClick={this.logoutDialogClose} color=\"primary\" autoFocus>\r\n      //                           No\r\n      //                         </Button>\r\n      //                       </DialogActions>\r\n      //                       </DialogTitle>\r\n      //                       </Dialog>\r\n      //                     }\r\n      //  </Row>\r\n      //  </div>\r\n      //     </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(DashboardHeader);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\jsonFiles\\DashboardInfoJson\\dashboardInfo.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\UserGeoMapComponent\\UserGeoMapComponent.js",["1249","1250"],"import React, { Component } from \"react\";\r\nimport { loadModules } from 'esri-loader';\r\nimport { Map   }  from '@esri/react-arcgis';\r\n\r\nconst options = {\r\n  url: 'https://js.arcgis.com/4.20/'\r\n};\r\n\r\nconst styles =  {\r\n  \r\n\r\n  container: {\r\n    width: '100%',\r\n    height:'200px'\r\n  },\r\n  mapDiv: {\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n}\r\nclass UserGeoMapComponent extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      long:\"123\",\r\n      lat:\"123\",\r\n      address_user:'',\r\n    }\r\n  }\r\n  componentDidMount() {\r\n   console.log(this.props);\r\n    // this.state.long=sessionStorage.getItem(\"user_geoLong\");\r\n    // console.log(\"ol\",this.state.long);\r\n    // this.state.lat=sessionStorage.getItem(\"user_geoLat\");\r\n    // this.state.address_user=this.props.address;\r\n    // this.setState({\r\n    //   long:sessionStorage.getItem(\"user_geoLong\"),\r\n    //   lat:sessionStorage.getItem(\"user_geoLat\"),\r\n    //   address_user:sessionStorage.getItem(\"currentAddress\")\r\n    // });\r\n\r\n    // if (sessionStorage.getItem(\"user_geoLong\") != null || sessionStorage.getItem(\"user_geoLong\") != undefined) {\r\n    //   this.consturctMap();\r\n    // }\r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // Typical usage (don't forget to compare props):\r\n    if (this.props.lat !== prevProps.lat) {\r\n    //  this.fetchData(this.props.lat);\r\n    console.log(\" in if update\",this.props.lat);\r\n\r\n  this.consturctMap();\r\n    }\r\n  //  console.log(\"update\",this.props.lat);\r\n   \r\n  }\r\n\r\n  async consturctMap(){\r\n    loadModules([\"esri/config\",'esri/Map', 'esri/views/MapView','esri/tasks/Locator','esri/widgets/Locate','esri/widgets/Search','esri/Graphic','esri/layers/GraphicsLayer','esri/geometry/Point',\r\n    'esri/symbols/WebStyleSymbol','esri/rest/locator'], options)\r\n      .then(([esriConfig,Map, MapView,Locator,Locate,Search,Graphic,GraphicsLayer,Point,WebStyleSymbol,locator]) => {\r\n        esriConfig.apiKey = \"AAPKa808b66b329d4c20bedf21c30bfea58dkc4s6BDpyyhENXyDlewV2OAkuxnAGDz3LgnOk9Px1LWQBQNG3giBD5f5hX7aRB2R\";\r\n \r\n       \r\n        const locatorUrl = \"https://geocode-api.arcgis.com/arcgis/rest/services/World/GeocodeServer\" ;\r\n\r\n        const map = new Map({ basemap: \"streets-navigation-vector\" });\r\n        const view = new MapView({\r\n          container: \"viewDiv\",\r\n          map:map,\r\n          zoom: 9,\r\n          center: [76.9366, 8.5241]\r\n        });\r\n\r\n        function addgraphics(a, b,name) {\r\n          const popupTemplate = {\r\n            title: name,\r\n         }\r\n\r\n         const attributes = {\r\n          Description:   {Longitude:a,Latitude:b}\r\n       }\r\n\r\n       var markerPoint = new Point({ x: a, y: b });\r\n       var storepoint = new Graphic(markerPoint, symbol1,attributes,popupTemplate);\r\n       var layer = new GraphicsLayer();\r\n       layer.add(storepoint);\r\n       map.add(layer);\r\n      }\r\n\r\n      var symbol1 = new WebStyleSymbol({\r\n        name: \"tear-pin-1\",\r\n        styleName: \"Esri2DPointSymbolsStyle\"\r\n      });\r\n\r\n      // var long= this.state.long;\r\n      // var lat=this.state.lat;\r\n      // var address=this.state.address_user\r\n      var long=this.props.long;\r\n      var lat=this.props.lat;\r\n      var address=this.props.address;\r\n      view.when(function () {\r\n       // if(long!='undefined' || long!=\"\"){\r\n          //console.log(\"long\", this.state.long);\r\n          addgraphics(long,lat,address);\r\n       // }\r\n          \r\n        }); \r\n\r\n  })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n    <div style={styles.container}>\r\n    <div id='viewDiv' style={ styles.mapDiv } >\r\n    </div>\r\n  </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default UserGeoMapComponent;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\jsonFiles\\CollaborationJson\\collaborationVolunteer.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\jsonFiles\\UserInfoJson\\categoryList.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-MostRecent\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-MostTrending\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-MostDiscussed\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\MessageParser.js",["1251","1252","1253","1254","1255","1256","1257","1258"],"class MessageParser {\r\n  constructor(actionProvider,state) {\r\n    this.actionProvider = actionProvider;\r\n    this.state = state;\r\n  }\r\n\r\n  parse(message) {\r\n\r\n\r\n    const lowerCaseMessage = message.toLowerCase()\r\n\r\n    if (lowerCaseMessage.includes(\"collaboration\")) {\r\n      this.actionProvider.handleCollaborationList();\r\n    }\r\n    else if (lowerCaseMessage.includes(\"hello\")) {\r\n      this.actionProvider.greet()\r\n    }\r\n    else if (lowerCaseMessage.includes(\"share and discuss ideas\")) {\r\n      this.actionProvider.handleShareDiscuss();\r\n    }\r\n    else if (lowerCaseMessage.includes(\"polls/surveys\")) {\r\n      this.actionProvider.handlePollSurvey();\r\n    }\r\n    else if (lowerCaseMessage.includes(\"discussion forums\")) {\r\n      this.actionProvider.handleDiscussionForum();\r\n    }\r\n    else if (lowerCaseMessage.includes(\"become a volunteer\")) {\r\n      this.actionProvider.handleVolunteer();\r\n    }\r\n    else if (lowerCaseMessage.includes(\"join a community\")) {\r\n      this.actionProvider.handleJoinCommunity();\r\n    }\r\n\r\n    else if (lowerCaseMessage.includes(\"complaint management\")) {\r\n      this.actionProvider.handleComplainManagement();\r\n    }\r\n    else if (lowerCaseMessage.includes(\"search a complain\")) {\r\n      this.actionProvider.handleSearchComplain();\r\n    }\r\n    else if (lowerCaseMessage.includes(\"complaint status\")) {\r\n      this.actionProvider.handleComplainStatus(message);\r\n    }\r\n    else if (lowerCaseMessage.includes(\"incident status\")) {\r\n      this.actionProvider.handleIncidentStatus(message);\r\n    }\r\n    else if (lowerCaseMessage.includes(\"log a complain\")) {\r\n      this.actionProvider.handleLogComplain();\r\n    }\r\n\r\n    else if (lowerCaseMessage.includes(\"citizen services\")) {\r\n      this.actionProvider.handleCitizenService();\r\n    }\r\n    // else if (lowerCaseMessage.includes(\"property tax\")) {\r\n    //   this.actionProvider.handlePropertyTax();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"water tax\")) {\r\n    //   this.actionProvider.handleWaterTax();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"birth record\")) {\r\n    //   this.actionProvider.handleBirthRecord();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"death record\")) {\r\n    //   this.actionProvider.handleDeathRecord();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"site plan\")) {\r\n    //   this.actionProvider.handleSitePlan();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"zone certificate\")) {\r\n    //   this.actionProvider.handleZoneCertificate();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"marriage certificate\")) {\r\n    //   this.actionProvider.handleMarriageCertificate();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"gas connection\")) {\r\n    //   this.actionProvider.handleGasConnection();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"electricity connection\")) {\r\n    //   this.actionProvider.handleElectricityConnection();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"neighbourhood crime\")) {\r\n    //   this.actionProvider.handleNeighbourhoodCrime();\r\n    // }\r\n   \r\n\r\n    // else if (lowerCaseMessage.includes(\"near me\")) {\r\n    //   this.actionProvider.handleNearMe();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"bloodbank\")) {\r\n    //   this.actionProvider.handleBloodBank();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"hospital\")) {\r\n    //   this.actionProvider.handleHospital();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"pmc office\")) {\r\n    //   this.actionProvider.handlePMCOffice();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"fire station\")) {\r\n    //   this.actionProvider.handleFireStation();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"police station\")) {\r\n    //   this.actionProvider.handlePoliceStation();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"wards\")) {\r\n    //   this.actionProvider.handleWards();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"garbage bin\")) {\r\n    //   this.actionProvider.handleGarbageBin();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"public toilets\")) {\r\n    //   this.actionProvider.handlePublicToilets();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"water offices\")) {\r\n    //   this.actionProvider.handleWaterOffices();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"electricity offices\")) {\r\n    //   this.actionProvider.handleElectricityOffices();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"muncipal offices\")) {\r\n    //   this.actionProvider.handleMuncipalOffices();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"post offices\")) {\r\n    //   this.actionProvider.handlePostOffices();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"income tax offices\")) {\r\n    //   this.actionProvider.handleIncomeTaxOffices();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"govt. offices\")) {\r\n    //   this.actionProvider.handleGovtOffices();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"reported issues\")) {\r\n    //   this.actionProvider.handleReportedIssues();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"bus stops\")) {\r\n    //   this.actionProvider.handleBusStops();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"railway station\")) {\r\n    //   this.actionProvider.handleRailwayStation();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"airports\")) {\r\n    //   this.actionProvider.handleAirports();\r\n    // }\r\n\r\n    // else if (lowerCaseMessage.includes(\"analytics\")) {\r\n    //   this.actionProvider.handleAnalytics();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"web\")) {\r\n    //   this.actionProvider.handleWeb();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"social media\")) {\r\n    //   this.actionProvider.handleSocialMedia();\r\n    // }\r\n\r\n    // else if (lowerCaseMessage.includes(\"trending now\")) {\r\n    //   this.actionProvider.handleTrendingNow();\r\n    // }\r\n\r\n    else if (lowerCaseMessage.includes(\"back to main menu\")) {\r\n      this.actionProvider.handleRootMainMenu();\r\n    }\r\n    \r\n    else if (lowerCaseMessage.includes(\"back to collaboration\")) {\r\n      this.actionProvider.handleCollaborationList();\r\n    }\r\n    else if (lowerCaseMessage.includes(\"back to citizen services\")) {\r\n      this.actionProvider.handleCitizenService();\r\n    }\r\n    // else if (lowerCaseMessage.includes(\"back to analytics\")) {\r\n    //   this.actionProvider.handleAnalytics();\r\n    // }\r\n    // else if (lowerCaseMessage.includes(\"back to near me\")) {\r\n    //   this.actionProvider.handleNearMe();\r\n    // }\r\n    else if ((sessionStorage.getItem(\"chatbot\") != null && sessionStorage.getItem(\"chatbot\") != undefined) && (sessionStorage.getItem(\"chatbot\")==\"complaintbot\")) {\r\n      if((sessionStorage.getItem(\"chatbot\")==\"complaintbot\") && (!isNaN(message))){\r\n        this.actionProvider.handleComplainStatusAPI(message);\r\n      }\r\n      else{\r\n        this.actionProvider.handleError();\r\n      }\r\n    }\r\n    else if ((sessionStorage.getItem(\"chatbot\") != null && sessionStorage.getItem(\"chatbot\") != undefined) && (sessionStorage.getItem(\"chatbot\")==\"incidentbot\")) {\r\n      if((sessionStorage.getItem(\"chatbot\")==\"incidentbot\") && (!isNaN(message))){\r\n        this.actionProvider.handleIncidentStatusAPI(message);\r\n      }\r\n      else{\r\n        this.actionProvider.handleError();\r\n      }\r\n    }\r\n    else if ((sessionStorage.getItem(\"chatbot\") != null && sessionStorage.getItem(\"chatbot\") != undefined) && (sessionStorage.getItem(\"chatbot\")==\"contactAdmin\")) {\r\n        this.actionProvider.handleContactAdminAPI(message);\r\n    }\r\n    else{\r\n      this.actionProvider.handleError();\r\n    }\r\n  }\r\n}\r\n\r\nexport default MessageParser;","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\Config.js",["1259","1260","1261"],"import React from \"react\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { createChatBotMessage } from \"react-chatbot-kit\";\r\n import RootChatOptions from \"../src/chatbot/RootOptions/Root\";\r\n import BotAvatar from \"../src/chatbot/BotAvatar/BotAvatar\";\r\n import CollaborationOptions from \"../src/chatbot/CollaborationComponent/CollaborationOptions\";\r\n import ShareDiscuss from \"../src/chatbot/CollaborationComponent/ShareDiscuss\";\r\n// import PollSurvey from \"../src/chatbot/CollaborationComponent/PollSurvey\";\r\n// import DiscussionForums from \"../src/chatbot/CollaborationComponent/DiscussionForums\";\r\n// import BecomeVolunteer from \"../src/chatbot/CollaborationComponent/BecomeVolunteer\";\r\n// import JoinCommunity from \"../src/chatbot/CollaborationComponent/JoinCommunity\";\r\nimport ComplainOptions from \"../src/chatbot/ComplainManagement/ComplainOptions\";\r\nimport LogComplain from \"../src/chatbot/ComplainManagement/LogComplain\";\r\nimport SearchComplain from \"../src/chatbot/ComplainManagement/SearchComplain\";\r\nimport ComplainStatus from \"../src/chatbot/ComplainManagement/ComplainStatus\";\r\nimport CitizenOptions from \"../src/chatbot/CitizenServices/CitizenOptions\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Footer from \"./component/Footer\";\r\n// import CommonReturn from \"../src/chatbot/CitizenServices/CommonReturn\";\r\n// import NearMe from \"../src/chatbot/NearMe/NearMe\";\r\n// import NearMeOptions from \"../src/chatbot/NearMe/NearMeOptions\";\r\n// import AnalyticsOptions from \"../src/chatbot/AnalyticsSection/AnalyticsOptions\";\r\n// import Analytics from \"../src/chatbot/AnalyticsSection/Analytics\";\r\n// import TrendingNnow from \"../src/chatbot/TrendingNowSection/TrendingNow\";\r\n\r\n\r\n// close= () => {\r\n//   console.log(\"close\");\r\n// }\r\n//const FooterObj = new Footer(props);\r\n\r\nconst config = {\r\n\r\n\r\n  chatbottest:false,\r\n//  botName: \"Welcome to the Thiruvananthapuram Support\",\r\n  initialMessages: [\r\n   createChatBotMessage(\"We'll be glad to help you! Please select the options\", {\r\n       widget: \"rootOptions\",\r\n       delay: 100,\r\n    }),\r\n  ],\r\n  customStyles: {\r\n    botMessageBox: {\r\n      backgroundColor: \"#376B7E\",\r\n    },\r\n    chatButton: {\r\n      backgroundColor: \"#376B7E\",\r\n    },\r\n  },\r\n  customComponents: {\r\n    // Replaces the default header\r\n   header: () =><div>\r\n     <Row>\r\n     <Col  xs=\"10\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\" xxl=\"10\">\r\n     <div style={{ color: '#9150ff', padding: \"5px\",fontWeight:\"500\"}}>Welcome to the Smart City support </div>\r\n     </Col>\r\n     <Col  xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\" className=\"pt-3\">\r\n     {/* <Button onClick={() => { alert('clicked') }}>close</Button> */}\r\n     <i style={{ color: '#9150ff'}} onClick={() => {  \r\n       sessionStorage.removeItem(\"chatbot\");\r\n       window.location.reload();\r\n      }} class=\"fas fa-times\"></i>\r\n     </Col>\r\n     \r\n     </Row>\r\n     <hr></hr>\r\n   </div>\r\n  },\r\n  widgets: [\r\n\r\n    {\r\n      widgetName: \"rootOptions\",\r\n      widgetFunc: (props) => <RootChatOptions {...props} />,\r\n    },\r\n\r\n\r\n    {\r\n      widgetName: \"CollaborationOptions\",\r\n      widgetFunc: (props) => <CollaborationOptions {...props} />,\r\n      \r\n    },\r\n\r\n    {\r\n      widgetName: \"ShareDiscuss\",\r\n      widgetFunc: (props) => <ShareDiscuss {...props} />,\r\n      \r\n    },\r\n\r\n  //   {\r\n  //     widgetName: \"PollSurvey\",\r\n  //     widgetFunc: (props) => <PollSurvey {...props} />,\r\n      \r\n  //   },\r\n\r\n  //   {\r\n  //     widgetName: \"DiscussionForum\",\r\n  //     widgetFunc: (props) => <DiscussionForums {...props} />,\r\n      \r\n  //   },\r\n\r\n  //   {\r\n  //     widgetName: \"BecomeVolunteer\",\r\n  //     widgetFunc: (props) => <BecomeVolunteer {...props} />,\r\n      \r\n  //   },\r\n\r\n  //   {\r\n  //     widgetName: \"JoinCommunity\",\r\n  //     widgetFunc: (props) => <JoinCommunity {...props} />,\r\n      \r\n  //   },\r\n    {\r\n      widgetName: \"ComplainManagement\",\r\n      widgetFunc: (props) => <ComplainOptions {...props} />,\r\n      \r\n    },\r\n\r\n    {\r\n      widgetName: \"LogComplain\",\r\n      widgetFunc: (props) => <LogComplain {...props} />,\r\n      \r\n    },\r\n\r\n    {\r\n      widgetName: \"SearchComplain\",\r\n      widgetFunc: (props) => <SearchComplain {...props} />,\r\n      \r\n    },\r\n    {\r\n      widgetName: \"ComplainStatus\",\r\n      widgetFunc: (props) => <ComplainStatus {...props} />,\r\n      \r\n    },\r\n    {\r\n      widgetName: \"CitizenServices\",\r\n      widgetFunc: (props) => <CitizenOptions {...props} />,\r\n      \r\n    },\r\n  //   {\r\n  //     widgetName: \"CommonReturn\",\r\n  //     widgetFunc: (props) => <CommonReturn {...props} />,\r\n      \r\n  //   },\r\n  //   {\r\n  //     widgetName: \"NearMeLink\",\r\n  //     widgetFunc: (props) => <NearMe {...props} />,\r\n      \r\n  //   },\r\n  //   {\r\n  //     widgetName: \"NearMeDetails\",\r\n  //     widgetFunc: (props) => <NearMeOptions {...props} />,\r\n      \r\n  //   },\r\n  //   {\r\n  //     widgetName: \"AnalyticsDetails\",\r\n  //     widgetFunc: (props) => <AnalyticsOptions {...props} />,\r\n      \r\n  //   },\r\n  //   {\r\n  //     widgetName: \"WebAndMedia\",\r\n  //     widgetFunc: (props) => <Analytics {...props} />,\r\n      \r\n  //   },\r\n  //   {\r\n  //     widgetName: \"TrendingSection\",\r\n  //     widgetFunc: (props) => <TrendingNow {...props} />,\r\n      \r\n  //   }\r\n   ]\r\n\r\n}\r\n\r\nexport default config;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Polls_Surveys\\CollaborationPSMostDiscussed\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Polls_Surveys\\CollaborationPSMostTrending\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Polls_Surveys\\CollaborationPSMostRecent\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Profile-changePassword\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\LoadMaps\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Profile-myProfile\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-MostDiscussed\\Collaboration-bAV-MostDiscussed.js",["1262","1263","1264","1265","1266","1267","1268"],"import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport CollaborationsHeadings from \"../../../jsonFiles/CollaborationJson/collaborationVolunteer\";\r\nimport { MDBIcon } from \"../../../../node_modules/mdbreact\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport LinesEllipsis from \"react-lines-ellipsis\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nclass CollaborationBAVMostDiscussed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shareIcons: CollaborationsHeadings.Cards,\r\n      APIResponse: \"\",\r\n      cardCounts: 4,\r\n      DeleteSubmit: false,\r\n      DeleteDialogStatus: false,\r\n      deteledID: \"\",\r\n      totalDiscussedCardCount:0\r\n    };\r\n    this.LoadMore_SAT = this.LoadMore_SAT.bind(this);\r\n    this.Delete = this.Delete.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllIdeas();\r\n  }\r\n\r\n  getAllIdeas() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        recordId: 1,\r\n        offset: this.state.cardCounts,\r\n        is_admin: false,\r\n      }),\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/volunteer/mostDiscussVolunteer\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        \r\n        if (this.state.APIResponse.status === true) {\r\n          var JsonDate = this.state.APIResponse.data;\r\n           this.setState({\r\n            totalDiscussedCardCount:this.state.APIResponse.total_rows\r\n          });\r\n           for(var cardValues in JsonDate)\r\n          {\r\n              //console.log(\"share Icons card values:\",JsonDate[cardValues].cardProfileImage);\r\n              if (JsonDate[cardValues].cardProfileImage.indexOf(\"https\") == -1) {\r\n                JsonDate[cardValues].cardProfileImage=\"https://scity.gmmspl.com:3000/\"+JsonDate[cardValues].cardProfileImage;\r\n              }\r\n          }\r\n          this.setState({\r\n            shareIcons: JsonDate,\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  DeleteACard = () => {\r\n    // console.log(\"CardID = \", CardID);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        volunteer_id: this.state.deteledID,\r\n      }),\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/volunteer/deletevolunteer\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.status === true) {\r\n          this.DeleteDialogClose();\r\n          this.getAllIdeas();\r\n        }\r\n      });\r\n  };\r\n\r\n  CardDetails = (CardID) => {\r\n    // console.log(\"CardID = \", CardID);\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login for details and to add comment.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      sessionStorage.setItem(\"VolunteerId\", CardID.volunteer_id);\r\n      sessionStorage.setItem(\r\n        \"volunteerDetailBack\",\r\n        \"collaboration-becomeAVolunteer\"\r\n      );\r\n      this.props.history.push(\"/volunteer-ACardDetails\");\r\n    }\r\n  };\r\n\r\n  UpdateACard = (CardID) => {\r\n    // console.log(\"CardID = \", CardID);\r\n    // sessionStorage.setItem(\"threadId\", CardID.threadId);\r\n    // this.props.history.push(\"/volunteer-ACardDetails\");\r\n    sessionStorage.setItem(\"VolunteerId\", CardID.volunteer_id);\r\n    this.props.history.push(\"/CollaborationBAVEditVolunteer\");\r\n\r\n  };\r\n\r\n  LoadMore_SAT() {\r\n    if (this.state.cardCounts <= 100) {\r\n      var currentCount = this.state.cardCounts + 4;\r\n      this.state.cardCounts = currentCount;\r\n      // console.log(\"this.state.cardCounts = \", this.state.cardCounts);\r\n      this.getAllIdeas();\r\n    }\r\n  }\r\n\r\n  Delete = (CardID) => {\r\n    this.setState({\r\n      DeleteSubmit: true,\r\n      DeleteDialogStatus: true,\r\n      deteledID: CardID.volunteer_id,\r\n    });\r\n  };\r\n\r\n  DeleteDialogClose = () => {\r\n    this.setState({\r\n      DeleteDialogStatus: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"tab-card-container-style\">\r\n        <Row>\r\n          {this.state.shareIcons.map((CardValues, index) => (\r\n            <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\" className=\"\">\r\n              <Card className=\"tab-card-style\">\r\n                <div class=\"card-top-border\"></div>\r\n                <Row className=\"pt-3\">\r\n                  <Col\r\n                    xs=\"8\"\r\n                    sm=\"8\"\r\n                    md=\"8\"\r\n                    lg=\"8\"\r\n                    xl=\"8\"\r\n                    xxl=\"8\"\r\n                    className=\"pl-4\"\r\n                  >\r\n                    <Card.Title\r\n                      id=\"rcorners1\"\r\n                      className=\"tab-card-heading-style\"\r\n                    >\r\n                      {CardValues.cardType}\r\n                    </Card.Title>\r\n                  </Col>\r\n                  <Col\r\n                    xs=\"2\"\r\n                    sm=\"2\"\r\n                    md=\"2\"\r\n                    lg=\"2\"\r\n                    xl=\"2\"\r\n                    xxl=\"2\"\r\n                    className=\"editcardvolunterplacing\"\r\n                  >\r\n                    {CardValues.cardUserId ==\r\n                      sessionStorage.getItem(\"user_id\") && (\r\n                      <MDBIcon\r\n                        far\r\n                        icon=\"edit\"\r\n                        className=\"editcardvolunter\"\r\n                        size=\"sm\"\r\n                        onClick={() => this.UpdateACard(CardValues)}\r\n                      />\r\n                    )}\r\n                  </Col>\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n                    {CardValues.cardUserId ==\r\n                      sessionStorage.getItem(\"user_id\") && (\r\n                      <div>\r\n                        <MDBIcon\r\n                          icon=\"trash-alt\"\r\n                          size=\"sm\"\r\n                          className=\"card-icon-style-delete\"\r\n                          onClick={() => this.Delete(CardValues)}\r\n                        />\r\n                        {this.state.DeleteSubmit && (\r\n                          <Dialog\r\n                            open={this.state.DeleteDialogStatus}\r\n                            onClose={this.DeleteDialogClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                          >\r\n                            <DialogTitle id=\"simple-dialog-title\">\r\n                              Are you sure you want to delete post?\r\n                              <DialogActions>\r\n                                <Button\r\n                                  onClick={this.DeleteACard}\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Yes\r\n                                </Button>\r\n                                <Button\r\n                                  onClick={this.DeleteDialogClose}\r\n                                  color=\"primary\"\r\n                                  autoFocus\r\n                                >\r\n                                  No\r\n                                </Button>\r\n                              </DialogActions>\r\n                            </DialogTitle>\r\n                          </Dialog>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n\r\n               <Card.Subtitle className=\"\">\r\n                  <Row className=\"tab-card-subject-style\">\r\n                    <Col className=\"p-0\">\r\n                      <div className=\"tab-title-div-ellipsis\">\r\n                        <span className=\"tab-title-ellipsis\">\r\n                          {CardValues.cardTitle}\r\n                      </span>\r\n                     </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Subtitle>\r\n\r\n                <Card.Body className=\"p-0\">\r\n                  <Card.Text className=\"tab-card-body-style mb-2\">\r\n                    <div className=\"tab-card-body-div-ellipsis\">\r\n                      <span className=\"tab-card-body-ellipsis\">\r\n                        {CardValues.cardDescription}\r\n                     </span>\r\n                    </div> \r\n                  </Card.Text>\r\n                  {/* <Card.Text className=\"tab-card-body-style\">\r\n          \r\n            {\r\n                (CardValues.comments === null) &&\r\n                <p className=\"card-comments-style\"><label id=\"rcorners-comment-count\">0 <span class=\"comments-count-style\">Comments</span></label></p>\r\n              }\r\n              {\r\n                (CardValues.comments != null) &&\r\n                <p className=\"card-comments-style\"><label id=\"rcorners-comment-count\">{CardValues.comments} <span class=\"comments-count-style\">Comments</span></label></p>\r\n              }\r\n            </Card.Text> */}\r\n                  <Card.Text className=\"tab-card-body-style\">\r\n                    {CardValues.comments === null && (\r\n                      <p className=\"card-comments-style\">\r\n                        <label id=\"rcorners-comment-count\">\r\n                          0 <span class=\"comments-count-style\">Comments</span>\r\n                        </label>\r\n                      </p>\r\n                    )}\r\n                    {CardValues.comments != null && (\r\n                      <p className=\"card-comments-style\">\r\n                        <label id=\"rcorners-comment-count\">\r\n                          {CardValues.comments}{\" \"}\r\n                          <span class=\"comments-count-style\">Comments</span>\r\n                        </label>\r\n                      </p>\r\n                    )}\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <Row className=\"pt-3 card-footer__events\">\r\n                      <Col\r\n                        xs=\"3\"\r\n                        sm=\"3\"\r\n                        md=\"3\"\r\n                        lg=\"3\"\r\n                        xl=\"3\"\r\n                        className=\"card-profile-image-col-style\"\r\n                      >\r\n                        <img\r\n                          src={CardValues.cardProfileImage}\r\n                          alt=\"\"\r\n                          class=\"card-profile-image-style\"\r\n                        />\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"5\"\r\n                        sm=\"5\"\r\n                        md=\"5\"\r\n                        lg=\"5\"\r\n                        xl=\"5\"\r\n                        className=\"card-image-imfo-style pr-0\"\r\n                      >\r\n                        <Row className=\"card-image-profile-name-style\">\r\n                          <label>{CardValues.cardPostedBy}</label>\r\n                        </Row>\r\n                        <Row className=\"card-image-imfo-row-style\">\r\n                          <label>{CardValues.cardPostedOn}</label>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"4\"\r\n                        sm=\"4\"\r\n                        md=\"4\"\r\n                        lg=\"4\"\r\n                        xl=\"4\"\r\n                        className=\"p-0 card-icon-alignment\"\r\n                      >\r\n                        <div>\r\n                          <span class=\"\">\r\n                            <MDBIcon\r\n                              far\r\n                              icon=\"eye\"\r\n                              size=\"sm\"\r\n                              className=\"card-icon-style\"\r\n                              onClick={() => this.CardDetails(CardValues)}\r\n                            />\r\n                          </span>\r\n                          <span class=\"pl-2 \">\r\n                            <MDBIcon\r\n                              icon=\"reply\"\r\n                              size=\"sm\"\r\n                              className=\"card-icon-style\"\r\n                              onClick={() => this.CardDetails(CardValues)}\r\n                            />\r\n                          </span>\r\n                        </div>\r\n                      </Col>\r\n                      {/* <Col xs=\"3\" sm=\"3\" md=\"3\" lg=\"3\" xl=\"3\" className=\"p-0 card-icon-alignment-reply\">\r\n                <MDBIcon icon=\"reply\" size=\"sm\" className=\"card-icon-style\" onClick={() => this.CardDetails(CardValues)}/>\r\n                </Col> */}\r\n                    </Row>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n\r\n        <Row className=\"pb-5\"></Row>\r\n        <Row>\r\n          <Col xs=\"0\" sm=\"0\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n          <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n            {this.state.totalDiscussedCardCount > this.state.cardCounts && (\r\n              <Button\r\n                className=\"login-button-style\"\r\n                onClick={this.LoadMore_SAT}\r\n              >\r\n                Load More\r\n              </Button>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"pb-5 pt-2\"></Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CollaborationBAVMostDiscussed);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-MostTrending\\Collaboration-bAV-MostTrending.js",["1269","1270","1271","1272","1273","1274","1275"],"import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport CollaborationsHeadings from \"../../../jsonFiles/CollaborationJson/collaborationVolunteer\";\r\nimport { MDBIcon } from \"../../../../node_modules/mdbreact\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport LinesEllipsis from \"react-lines-ellipsis\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nclass CollaborationBAVMostTrending extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shareIcons: CollaborationsHeadings.Cards,\r\n      APIResponse: \"\",\r\n      cardCounts: 4,\r\n      DeleteSubmit: false,\r\n      DeleteDialogStatus: false,\r\n      deteledID: \"\",\r\n      totalTrendingCardCount:0\r\n    };\r\n    this.LoadMore_SAT = this.LoadMore_SAT.bind(this);\r\n    this.Delete = this.Delete.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllIdeas();\r\n  }\r\n\r\n  getAllIdeas() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        recordId: 1,\r\n        offset: this.state.cardCounts,\r\n        is_admin: false,\r\n      }),\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/volunteer/mosttrendingvolunteer\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        \r\n        if (this.state.APIResponse.status === true) {\r\n          var JsonDate = this.state.APIResponse.data;\r\n           this.setState({\r\n            totalTrendingCardCount:this.state.APIResponse.total_rows\r\n          });\r\n           for(var cardValues in JsonDate)\r\n          {\r\n              //console.log(\"share Icons card values:\",JsonDate[cardValues].cardProfileImage);\r\n              if (JsonDate[cardValues].cardProfileImage.indexOf(\"https\") == -1) {\r\n                JsonDate[cardValues].cardProfileImage=\"https://scity.gmmspl.com:3000/\"+JsonDate[cardValues].cardProfileImage;\r\n              }\r\n          }\r\n          this.setState({\r\n            shareIcons: JsonDate,\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  DeleteACard = () => {\r\n    // console.log(\"CardID = \", CardID);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        volunteer_id: this.state.deteledID,\r\n      }),\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/volunteer/deletevolunteer\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.status === true) {\r\n          this.DeleteDialogClose();\r\n          this.getAllIdeas();\r\n        } else {\r\n        }\r\n      });\r\n  };\r\n\r\n  CardDetails = (CardID) => {\r\n    // console.log(\"CardID = \", CardID);\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login for details and to add comment.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      sessionStorage.setItem(\"VolunteerId\", CardID.volunteer_id);\r\n      sessionStorage.setItem(\r\n        \"volunteerDetailBack\",\r\n        \"collaboration-becomeAVolunteer\"\r\n      );\r\n      this.props.history.push(\"/volunteer-ACardDetails\");\r\n    }\r\n  };\r\n\r\n  UpdateACard = (CardID) => {\r\n    // console.log(\"CardID = \", CardID);\r\n    // sessionStorage.setItem(\"threadId\", CardID.threadId);\r\n    // this.props.history.push(\"/volunteer-ACardDetails\");\r\n    sessionStorage.setItem(\"VolunteerId\", CardID.volunteer_id);\r\n    this.props.history.push(\"/CollaborationBAVEditVolunteer\");\r\n  };\r\n\r\n  LoadMore_SAT() {\r\n    if (this.state.cardCounts <= 100) {\r\n      var currentCount = this.state.cardCounts + 4;\r\n      this.state.cardCounts = currentCount;\r\n      // console.log(\"this.state.cardCounts = \", this.state.cardCounts);\r\n      this.getAllIdeas();\r\n    }\r\n  }\r\n\r\n  Delete = (CardID) => {\r\n    this.setState({\r\n      DeleteSubmit: true,\r\n      DeleteDialogStatus: true,\r\n      deteledID: CardID.volunteer_id,\r\n    });\r\n  };\r\n\r\n  DeleteDialogClose = () => {\r\n    this.setState({\r\n      DeleteDialogStatus: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"tab-card-container-style\">\r\n        <Row>\r\n          {this.state.shareIcons.map((CardValues, index) => (\r\n            <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\" className=\"\">\r\n              <Card className=\"tab-card-style\">\r\n                <div class=\"card-top-border\"></div>\r\n                <Row className=\"pt-3\">\r\n                  <Col\r\n                    xs=\"8\"\r\n                    sm=\"8\"\r\n                    md=\"8\"\r\n                    lg=\"8\"\r\n                    xl=\"8\"\r\n                    xxl=\"8\"\r\n                    className=\"pl-4\"\r\n                  >\r\n                    <Card.Title\r\n                      id=\"rcorners1\"\r\n                      className=\"tab-card-heading-style\"\r\n                    >\r\n                      {CardValues.cardType}\r\n                    </Card.Title>\r\n                  </Col>\r\n                  <Col\r\n                    xs=\"2\"\r\n                    sm=\"2\"\r\n                    md=\"2\"\r\n                    lg=\"2\"\r\n                    xl=\"2\"\r\n                    xxl=\"2\"\r\n                    className=\"editcardvolunterplacing\"\r\n                  >\r\n                    {CardValues.cardUserId ==\r\n                      sessionStorage.getItem(\"user_id\") && (\r\n                      <MDBIcon\r\n                        far\r\n                        icon=\"edit\"\r\n                        className=\"editcardvolunter\"\r\n                        size=\"sm\"\r\n                        onClick={() => this.UpdateACard(CardValues)}\r\n                      />\r\n                    )}\r\n                  </Col>\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n                    {CardValues.cardUserId ==\r\n                      sessionStorage.getItem(\"user_id\") && (\r\n                      <div>\r\n                        <MDBIcon\r\n                          icon=\"trash-alt\"\r\n                          size=\"sm\"\r\n                          className=\"card-icon-style-delete\"\r\n                          onClick={this.Delete}\r\n                        />\r\n                        {this.state.DeleteSubmit && (\r\n                          <Dialog\r\n                            open={this.state.DeleteDialogStatus}\r\n                            onClose={this.DeleteDialogClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                          >\r\n                            <DialogTitle id=\"simple-dialog-title\">\r\n                              Are you sure you want to delete post?\r\n                              <DialogActions>\r\n                                <Button\r\n                                  onClick={() => this.DeleteACard(CardValues)}\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Yes\r\n                                </Button>\r\n                                <Button\r\n                                  onClick={this.DeleteDialogClose}\r\n                                  color=\"primary\"\r\n                                  autoFocus\r\n                                >\r\n                                  No\r\n                                </Button>\r\n                              </DialogActions>\r\n                            </DialogTitle>\r\n                          </Dialog>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n\r\n                   <Card.Subtitle className=\"\">\r\n                  <Row className=\"tab-card-subject-style\">\r\n                    <Col className=\"p-0\">\r\n                      <div className=\"tab-title-div-ellipsis\">\r\n                        <span className=\"tab-title-ellipsis\">\r\n                          {CardValues.cardTitle}\r\n                      </span>\r\n                     </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Subtitle>\r\n\r\n                <Card.Body className=\"p-0\">\r\n                  <Card.Text className=\"tab-card-body-style mb-2\">\r\n                    <div className=\"tab-card-body-div-ellipsis\">\r\n                      <span className=\"tab-card-body-ellipsis\">\r\n                        {CardValues.cardDescription}\r\n                     </span>\r\n                    </div> \r\n                  </Card.Text>\r\n                  <Card.Text className=\"tab-card-body-style\">\r\n                    {CardValues.comments === null && (\r\n                      <p className=\"card-comments-style\">\r\n                        <label id=\"rcorners-comment-count\">\r\n                          0 <span class=\"comments-count-style\">Comments</span>\r\n                        </label>\r\n                      </p>\r\n                    )}\r\n                    {CardValues.comments != null && (\r\n                      <p className=\"card-comments-style\">\r\n                        <label id=\"rcorners-comment-count\">\r\n                          {CardValues.comments}{\" \"}\r\n                          <span class=\"comments-count-style\">Comments</span>\r\n                        </label>\r\n                      </p>\r\n                    )}\r\n                  </Card.Text>\r\n                  {/* <Card.Text className=\"tab-card-body-style\">\r\n          \r\n            {\r\n                (CardValues.comments === null) &&\r\n                <p className=\"card-comments-style\"><label id=\"rcorners-comment-count\">0 <span class=\"comments-count-style\">Comments</span></label></p>\r\n              }\r\n              {\r\n                (CardValues.comments != null) &&\r\n                <p className=\"card-comments-style\"><label id=\"rcorners-comment-count\">{CardValues.comments} <span class=\"comments-count-style\">Comments</span></label></p>\r\n              }\r\n            </Card.Text> */}\r\n                  <Card.Text>\r\n                    <Row className=\"pt-3 card-footer__events\">\r\n                      <Col\r\n                        xs=\"3\"\r\n                        sm=\"3\"\r\n                        md=\"3\"\r\n                        lg=\"3\"\r\n                        xl=\"3\"\r\n                        className=\"card-profile-image-col-style\"\r\n                      >\r\n                        <img\r\n                          src={CardValues.cardProfileImage}\r\n                          alt=\"\"\r\n                          class=\"card-profile-image-style\"\r\n                        />\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"5\"\r\n                        sm=\"5\"\r\n                        md=\"5\"\r\n                        lg=\"5\"\r\n                        xl=\"5\"\r\n                        className=\"card-image-imfo-style pr-0\"\r\n                      >\r\n                        <Row className=\"card-image-profile-name-style\">\r\n                          <label>{CardValues.cardPostedBy}</label>\r\n                        </Row>\r\n                        <Row className=\"card-image-imfo-row-style\">\r\n                          <label>{CardValues.cardPostedOn}</label>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"4\"\r\n                        sm=\"4\"\r\n                        md=\"4\"\r\n                        lg=\"4\"\r\n                        xl=\"4\"\r\n                        className=\"p-0 card-icon-alignment\"\r\n                      >\r\n                        <div>\r\n                          <span class=\"\">\r\n                            <MDBIcon\r\n                              far\r\n                              icon=\"eye\"\r\n                              size=\"sm\"\r\n                              className=\"card-icon-style\"\r\n                              onClick={() => this.CardDetails(CardValues)}\r\n                            />\r\n                          </span>\r\n                          <span class=\"pl-2 \">\r\n                            <MDBIcon\r\n                              icon=\"reply\"\r\n                              size=\"sm\"\r\n                              className=\"card-icon-style\"\r\n                              onClick={() => this.CardDetails(CardValues)}\r\n                            />\r\n                          </span>\r\n                        </div>\r\n                      </Col>\r\n                      {/* <Col xs=\"3\" sm=\"3\" md=\"3\" lg=\"3\" xl=\"3\" className=\"p-0 card-icon-alignment-reply\">\r\n                <MDBIcon icon=\"reply\" size=\"sm\" className=\"card-icon-style\" onClick={() => this.CardDetails(CardValues)}/>\r\n                </Col> */}\r\n                    </Row>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row className=\"pb-5\"></Row>\r\n        <Row>\r\n          <Col xs=\"0\" sm=\"0\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n          <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n            {this.state.totalTrendingCardCount >= this.state.cardCounts && (\r\n              <Button\r\n                className=\"login-button-style\"\r\n                onClick={this.LoadMore_SAT}\r\n              >\r\n                Load More\r\n              </Button>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"pb-5 pt-2\"></Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CollaborationBAVMostTrending);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-Volunteer\\Collaboration-bAV-MostRecent\\Collaboration-bAV-MostRecent.js",["1276","1277","1278","1279","1280","1281","1282"],"import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport CollaborationsHeadings from \"../../../jsonFiles/CollaborationJson/collaborationVolunteer\";\r\nimport { MDBIcon } from \"../../../../node_modules/mdbreact\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LinesEllipsis from \"react-lines-ellipsis\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nclass CollaborationBAVMostRecent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shareIcons: CollaborationsHeadings.Cards,\r\n      APIResponse: \"\",\r\n      cardCounts: 4,\r\n      DeleteSubmit: false,\r\n      DeleteDialogStatus: false,\r\n      deteledID: \"\",\r\n      totalCardCount:0\r\n    };\r\n    this.LoadMore_SAT = this.LoadMore_SAT.bind(this);\r\n    this.Delete = this.Delete.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllIdeas();\r\n  }\r\n\r\n  getAllIdeas() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        recordId: 1,\r\n        offset: this.state.cardCounts,\r\n        is_admin: false,\r\n      }),\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/volunteer/allvolunteer\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.status === true) {\r\n          var JsonDate = this.state.APIResponse.data;\r\n           this.setState({\r\n            totalCardCount:this.state.APIResponse.total_rows\r\n          });\r\n           for(var cardValues in JsonDate)\r\n          {\r\n              //console.log(\"share Icons card values:\",JsonDate[cardValues].cardProfileImage);\r\n              if (JsonDate[cardValues].cardProfileImage.indexOf(\"https\") == -1) {\r\n                JsonDate[cardValues].cardProfileImage=\"https://scity.gmmspl.com:3000/\"+JsonDate[cardValues].cardProfileImage;\r\n              }\r\n          }\r\n          this.setState({\r\n            shareIcons: JsonDate,\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  DeleteACard = () => {\r\n    // console.log(\"CardID = \", CardID);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        volunteer_id: this.state.deteledID,\r\n      }),\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/volunteer/deletevolunteer\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.status === true) {\r\n          this.DeleteDialogClose();\r\n          this.getAllIdeas();\r\n        }\r\n      });\r\n  };\r\n\r\n  CardDetails = (CardID) => {\r\n    // console.log(\"CardID = \", CardID);\r\n\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login for details and to add comment.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      sessionStorage.setItem(\"VolunteerId\", CardID.volunteer_id);\r\n      sessionStorage.setItem(\r\n        \"volunteerDetailBack\",\r\n        \"collaboration-becomeAVolunteer\"\r\n      );\r\n      this.props.history.push(\"/volunteer-ACardDetails\");\r\n    }\r\n  };\r\n\r\n  UpdateACard = (CardID) => {\r\n    // console.log(\"CardID = \", CardID);\r\n    sessionStorage.setItem(\"VolunteerId\", CardID.volunteer_id);\r\n    this.props.history.push(\"/CollaborationBAVEditVolunteer\");\r\n  };\r\n\r\n  LoadMore_SAT() {\r\n    if (this.state.cardCounts <= 100) {\r\n      var currentCount = this.state.cardCounts + 4;\r\n      this.state.cardCounts = currentCount;\r\n      // console.log(\"this.state.cardCounts = \", this.state.cardCounts);\r\n      this.getAllIdeas();\r\n    }\r\n  }\r\n\r\n  Delete = (CardID) => {\r\n    this.setState({\r\n      DeleteSubmit: true,\r\n      DeleteDialogStatus: true,\r\n      deteledID: CardID.volunteer_id,\r\n    });\r\n  };\r\n\r\n  DeleteDialogClose = () => {\r\n    this.setState({\r\n      DeleteDialogStatus: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"tab-card-container-style\">\r\n        <Row>\r\n          {this.state.shareIcons.map((CardValues, index) => (\r\n            <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n              <Card className=\"tab-card-style\">\r\n                <div class=\"card-top-border\"></div>\r\n                <Row className=\"pt-3\">\r\n                  <Col\r\n                    xs=\"8\"\r\n                    sm=\"8\"\r\n                    md=\"8\"\r\n                    lg=\"8\"\r\n                    xl=\"8\"\r\n                    xxl=\"8\"\r\n                    className=\"pl-4\"\r\n                  >\r\n                    <Card.Title\r\n                      id=\"rcorners1\"\r\n                      className=\"tab-card-heading-style\"\r\n                    >\r\n                      {CardValues.cardType}\r\n                    </Card.Title>\r\n                  </Col>\r\n                  <Col\r\n                    xs=\"2\"\r\n                    sm=\"2\"\r\n                    md=\"2\"\r\n                    lg=\"2\"\r\n                    xl=\"2\"\r\n                    xxl=\"2\"\r\n                    className=\"editcardvolunterplacing\"\r\n                  >\r\n                    {CardValues.cardUserId ==\r\n                      sessionStorage.getItem(\"user_id\") && (\r\n                      <MDBIcon\r\n                        far\r\n                        icon=\"edit\"\r\n                        className=\"editcardvolunter\"\r\n                        size=\"sm\"\r\n                        onClick={() => this.UpdateACard(CardValues)}\r\n                      />\r\n                    )}\r\n                  </Col>\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n                    {CardValues.cardUserId ==\r\n                      sessionStorage.getItem(\"user_id\") && (\r\n                      <div>\r\n                        <MDBIcon\r\n                          icon=\"trash-alt\"\r\n                          size=\"sm\"\r\n                          className=\"card-icon-style-delete\"\r\n                          onClick={() => this.Delete(CardValues)}\r\n                        />\r\n                        {this.state.DeleteSubmit && (\r\n                          <Dialog\r\n                            open={this.state.DeleteDialogStatus}\r\n                            onClose={this.DeleteDialogClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                          >\r\n                            <DialogTitle id=\"simple-dialog-title\">\r\n                              Are you sure you want to delete post?\r\n                              <DialogActions>\r\n                                <Button\r\n                                  onClick={this.DeleteACard}\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Yes\r\n                                </Button>\r\n                                <Button\r\n                                  onClick={this.DeleteDialogClose}\r\n                                  color=\"primary\"\r\n                                  autoFocus\r\n                                >\r\n                                  No\r\n                                </Button>\r\n                              </DialogActions>\r\n                            </DialogTitle>\r\n                          </Dialog>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Card.Subtitle className=\"\">\r\n                  <Row className=\"tab-card-subject-style\">\r\n                    <Col className=\"p-0\">\r\n                      <div className=\"tab-title-div-ellipsis\">\r\n                        <span className=\"tab-title-ellipsis\">\r\n                          {CardValues.cardTitle}\r\n                      </span>\r\n                     </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Subtitle>\r\n\r\n                <Card.Body className=\"p-0\">\r\n                  <Card.Text className=\"tab-card-body-style mb-2\">\r\n                    <div className=\"tab-card-body-div-ellipsis\">\r\n                      <span className=\"tab-card-body-ellipsis\">\r\n                        {CardValues.cardDescription}\r\n                     </span>\r\n                    </div> \r\n                  </Card.Text>\r\n                  <Card.Text className=\"tab-card-body-style\">\r\n                    {CardValues.comments === null && (\r\n                      <p className=\"card-comments-style\">\r\n                        <label id=\"rcorners-comment-count\">\r\n                          0 <span class=\"comments-count-style\">Comments</span>\r\n                        </label>\r\n                      </p>\r\n                    )}\r\n                    {CardValues.comments != null && (\r\n                      <p className=\"card-comments-style\">\r\n                        <label id=\"rcorners-comment-count\">\r\n                          {CardValues.comments}{\" \"}\r\n                          <span class=\"comments-count-style\">Comments</span>\r\n                        </label>\r\n                      </p>\r\n                    )}\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <Row className=\"pt-3 card-footer__events\">\r\n                      <Col\r\n                        xs=\"3\"\r\n                        sm=\"3\"\r\n                        md=\"3\"\r\n                        lg=\"3\"\r\n                        xl=\"3\"\r\n                        className=\"card-profile-image-col-style\"\r\n                      >\r\n                        <img\r\n                          src={CardValues.cardProfileImage}\r\n                          alt=\"\"\r\n                          class=\"card-profile-image-style\"\r\n                        />\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"5\"\r\n                        sm=\"5\"\r\n                        md=\"5\"\r\n                        lg=\"5\"\r\n                        xl=\"5\"\r\n                        className=\"card-image-imfo-style pr-0\"\r\n                      >\r\n                        <Row className=\"card-image-profile-name-style\">\r\n                          <label>{CardValues.cardPostedBy}</label>\r\n                        </Row>\r\n                        <Row className=\"card-image-imfo-row-style\">\r\n                          <label>{CardValues.cardPostedOn}</label>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"4\"\r\n                        sm=\"4\"\r\n                        md=\"4\"\r\n                        lg=\"4\"\r\n                        xl=\"4\"\r\n                        className=\"p-0 card-icon-alignment\"\r\n                      >\r\n                        <div>\r\n                          <span class=\"\">\r\n                            <MDBIcon\r\n                              far\r\n                              icon=\"eye\"\r\n                              size=\"sm\"\r\n                              className=\"card-icon-style\"\r\n                              onClick={() => this.CardDetails(CardValues)}\r\n                            />\r\n                          </span>\r\n                          <span class=\"pl-2 \">\r\n                            <MDBIcon\r\n                              icon=\"reply\"\r\n                              size=\"sm\"\r\n                              className=\"card-icon-style\"\r\n                              onClick={() => this.CardDetails(CardValues)}\r\n                            />\r\n                          </span>\r\n                        </div>\r\n                      </Col>\r\n                      {/* <Col xs=\"3\" sm=\"3\" md=\"3\" lg=\"3\" xl=\"3\" className=\"p-0 card-icon-alignment-reply\">\r\n                <MDBIcon icon=\"reply\" size=\"sm\" className=\"card-icon-style\" onClick={() => this.CardDetails(CardValues)}/>\r\n                </Col> */}\r\n                    </Row>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n\r\n        <Row className=\"pb-5\"></Row>\r\n        <Row>\r\n          <Col xs=\"0\" sm=\"0\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n          <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n            {this.state.totalCardCount > this.state.cardCounts && (\r\n              <Button\r\n                className=\"login-button-style\"\r\n                onClick={this.LoadMore_SAT}\r\n              >\r\n                Load More\r\n              </Button>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"pb-5 pt-2\"></Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CollaborationBAVMostRecent);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-sDI-MostDiscussed\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-sDI-MostRecent\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-sDI-MostTrending\\index.js",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Polls_Surveys\\CollaborationPSMostDiscussed\\CollaborationPSMostDiscussed.js",["1283","1284","1285","1286","1287"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CollaborationsHeadings from \"../../../jsonFiles/CollaborationJson/collaborationDetails\";\r\nimport { MDBIcon } from \"../../../../node_modules/mdbreact\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport LinesEllipsis from \"react-lines-ellipsis\";\r\n\r\nclass CollaborationPSMostDiscussed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pollsBinding: CollaborationsHeadings.PollsCard,\r\n      APIResponse: \"\",\r\n      cardCounts: 4,\r\n      // pollVotes : CollaborationsHeadings.PollsVotes,\r\n      count: 0,\r\n      totalDiscussedCardCount:0\r\n    };\r\n    this.LoadMore_SAT = this.LoadMore_SAT.bind(this);\r\n  \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllPolls();\r\n  }\r\n\r\n  getAllPolls() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        offset: this.state.cardCounts,\r\n      }),\r\n    };\r\n    fetch(\"https://scity.gmmspl.com:3000/poll/mostDiscussPoll\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.status === true) {\r\n          var JsonDate = this.state.APIResponse.data;\r\n          // var JSonVotes = this.state.APIResponse.votes;\r\n          this.setState({\r\n            pollsBinding: JsonDate,\r\n            // pollVotes : JSonVotes\r\n            totalDiscussedCardCount:this.state.APIResponse.total_rows\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  CardDetails = (CardValues) => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login for vote\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      sessionStorage.setItem(\"admin_id\", CardValues.admin_id);\r\n      sessionStorage.setItem(\"poll_id\", CardValues.poll_id);\r\n      sessionStorage.setItem(\"poll_options_id\", CardValues.poll_options_id);\r\n      sessionStorage.setItem(\"pollDetailBack\", \"collaboration-pollsSurveys\");\r\n      this.props.history.push(\"/collaboration-pollsSurveysDetails\");\r\n    }\r\n    // sessionStorage.setItem(\"admin_id\", CardValues.admin_id);\r\n    // sessionStorage.setItem(\"poll_id\", CardValues.poll_id);\r\n    // sessionStorage.setItem(\"poll_options_id\", CardValues.poll_options_id);\r\n    // this.props.history.push(\"/collaboration-pollsSurveysDetails\");\r\n  };\r\n\r\n  LoadMore_SAT() {\r\n    if (this.state.cardCounts <= 100) {\r\n      var currentCount = this.state.cardCounts + 4;\r\n      this.state.cardCounts = currentCount;\r\n      this.getAllPolls();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"tab-card-container-style\">\r\n        <Row>\r\n          {this.state.pollsBinding.map((CardValues, index) => (\r\n            <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\" className=\"\">\r\n              <Card className=\"tab-card-style\">\r\n                <div class=\"card-top-border\"></div>\r\n                <Row className=\"pt-3\">\r\n                  <Col\r\n                    xs=\"10\"\r\n                    sm=\"10\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pl-4\"\r\n                  >\r\n                    <Card.Title\r\n                      id=\"rcorners1\"\r\n                      className=\"tab-card-heading-style\"\r\n                    >\r\n                      {CardValues.poll_category_name}\r\n                    </Card.Title>\r\n                  </Col>\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n                </Row>\r\n\r\n                <Card.Subtitle className=\"\">\r\n                  <Row className=\"tab-card-subject-style\">\r\n                    <Col className=\"p-0\">\r\n                      <div className=\"tab-title-div-ellipsis\">\r\n                        <span className=\"tab-title-ellipsis\">\r\n                          {CardValues.poll_subject}\r\n                      </span>\r\n                     </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Subtitle>\r\n                <Card.Body className=\"p-0\">\r\n                  <Card.Text className=\"tab-card-body-style mb-2\">\r\n                    <Row>\r\n                      <Col\r\n                        Col\r\n                        xs=\"12\"\r\n                        sm=\"12\"\r\n                        md=\"12\"\r\n                        lg=\"12\"\r\n                        xl=\"12\"\r\n                        className=\"\"\r\n                      >\r\n                        <span className=\"pollDates pr-2\">Start Date :</span>\r\n                        <span>{CardValues.d_start_date}</span>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                      <Col\r\n                        Col\r\n                        xs=\"12\"\r\n                        sm=\"12\"\r\n                        md=\"12\"\r\n                        lg=\"12\"\r\n                        xl=\"12\"\r\n                        className=\"\"\r\n                      >\r\n                        <span className=\"pollDates pr-2\">\r\n                          End Date &nbsp;&nbsp;:\r\n                        </span>\r\n                        <span>{CardValues.d_end_date}</span>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                      <Col\r\n                        Col\r\n                        xs=\"4\"\r\n                        sm=\"4\"\r\n                        md=\"4\"\r\n                        lg=\"4\"\r\n                        xl=\"4\"\r\n                        className=\" pr-0 pt-4\"\r\n                      >\r\n                        <p className=\"card-comments-style\">\r\n                          <label id=\"rcorners-comment-count\">\r\n                            {CardValues.votes}{\" \"}\r\n                            <span class=\"comments-count-style\">Votes</span>\r\n                          </label>\r\n                        </p>\r\n                      </Col>\r\n                      <Col\r\n                        Col\r\n                        xs=\"8\"\r\n                        sm=\"8\"\r\n                        md=\"8\"\r\n                        lg=\"8\"\r\n                        xl=\"8\"\r\n                        className=\"\"\r\n                      ></Col>\r\n                    </Row>\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <Row className=\"pt-3 card-footer__events\">\r\n                      <Col\r\n                        xs=\"3\"\r\n                        sm=\"3\"\r\n                        md=\"3\"\r\n                        lg=\"3\"\r\n                        xl=\"3\"\r\n                        className=\"card-profile-image-col-style\"\r\n                      >\r\n                        <img\r\n                          src={\r\n                            \"https://scity.gmmspl.com:3000/\" +\r\n                            CardValues.cardProfileImage\r\n                          }\r\n                          alt=\"\"\r\n                          class=\"card-profile-image-style\"\r\n                        />\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"5\"\r\n                        sm=\"5\"\r\n                        md=\"5\"\r\n                        lg=\"5\"\r\n                        xl=\"5\"\r\n                        className=\"card-image-imfo-style pr-0\"\r\n                      >\r\n                        <Row className=\"card-image-profile-name-style\">\r\n                          <label>{CardValues.full_name}</label>\r\n                        </Row>\r\n\r\n                        {/* <Row className=\"card-image-imfo-row-style\"><label>Start Date : {CardValues.d_start_date}</label></Row>\r\n                <Row className=\"card-image-imfo-row-style\"><label>End Date : {CardValues.d_end_date}</label></Row> */}\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"4\"\r\n                        sm=\"4\"\r\n                        md=\"4\"\r\n                        lg=\"4\"\r\n                        xl=\"4\"\r\n                        className=\"p-0 card-icon-alignment\"\r\n                      >\r\n                        <div>\r\n                          <span class=\"\">\r\n                            <MDBIcon\r\n                              far\r\n                              icon=\"eye\"\r\n                              size=\"sm\"\r\n                              className=\"card-icon-style\"\r\n                              onClick={() => this.CardDetails(CardValues)}\r\n                            />\r\n                          </span>\r\n                          <span class=\"pl-2 \">\r\n                            <MDBIcon\r\n                              icon=\"vote-yea\"\r\n                              size=\"sm\"\r\n                              className=\"card-icon-style\"\r\n                              onClick={() => this.CardDetails(CardValues)}\r\n                            />\r\n                          </span>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row className=\"pb-5\"></Row>\r\n        <Row>\r\n          <Col xs=\"0\" sm=\"0\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n          <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n        { this.state.totalDiscussedCardCount > this.state.cardCounts &&\r\n        <Button className=\"login-button-style\" onClick={this.LoadMore_SAT}>\r\n          Load More\r\n        </Button>\r\n        }\r\n        </Col>\r\n        </Row>\r\n        <Row className=\"pb-5 pt-2\"></Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CollaborationPSMostDiscussed);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Polls_Surveys\\CollaborationPSMostTrending\\CollaborationPSMostTrending.js",["1288","1289","1290","1291","1292"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CollaborationsHeadings from \"../../../jsonFiles/CollaborationJson/collaborationDetails\";\r\nimport { MDBIcon } from \"../../../../node_modules/mdbreact\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport LinesEllipsis from \"react-lines-ellipsis\";\r\n\r\nclass CollaborationPSMostTrending extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pollsBinding: CollaborationsHeadings.PollsCard,\r\n      APIResponse: \"\",\r\n      cardCounts: 4,\r\n      pollVotes: CollaborationsHeadings.PollsVotes,\r\n      count: 0,\r\n      totalTrendingCard:0\r\n    };\r\n    this.LoadMore_SAT = this.LoadMore_SAT.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMostTrendingPolls();\r\n  }\r\n\r\n  getMostTrendingPolls() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        offset: this.state.cardCounts,\r\n      }),\r\n    };\r\n    fetch(\"https://scity.gmmspl.com:3000/poll/mostTrendingPoll\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.status === true) {\r\n          var JsonDate = this.state.APIResponse.data;\r\n          // var JSonVotes = this.state.APIResponse.votes;\r\n          this.setState({\r\n            pollsBinding: JsonDate,\r\n            // pollVotes : JSonVotes\r\n            totalTrendingCard : this.state.APIResponse.total_rows\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  CardDetails = (CardValues) => {\r\n    // sessionStorage.setItem(\"admin_id\", CardValues.admin_id);\r\n    // sessionStorage.setItem(\"poll_id\", CardValues.poll_id);\r\n    // sessionStorage.setItem(\"poll_options_id\", CardValues.poll_options_id);\r\n    // this.props.history.push(\"/collaboration-pollsSurveysDetails\");\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login for vote\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      sessionStorage.setItem(\"admin_id\", CardValues.admin_id);\r\n      sessionStorage.setItem(\"poll_id\", CardValues.poll_id);\r\n      sessionStorage.setItem(\"poll_options_id\", CardValues.poll_options_id);\r\n      sessionStorage.setItem(\"pollDetailBack\", \"collaboration-pollsSurveys\");\r\n      this.props.history.push(\"/collaboration-pollsSurveysDetails\");\r\n    }\r\n  };\r\n\r\n  LoadMore_SAT() {\r\n    if (this.state.cardCounts <= 100) {\r\n      var currentCount = this.state.cardCounts + 4;\r\n      this.state.cardCounts = currentCount;\r\n      this.getMostTrendingPolls();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"tab-card-container-style\">\r\n        <Row>\r\n          {this.state.pollsBinding.map((CardValues, index) => (\r\n            <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\" className=\"\">\r\n              <Card className=\"tab-card-style\">\r\n                <div class=\"card-top-border\"></div>\r\n                <Row className=\"pt-3\">\r\n                  <Col\r\n                    xs=\"10\"\r\n                    sm=\"10\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pl-4\"\r\n                  >\r\n                    <Card.Title\r\n                      id=\"rcorners1\"\r\n                      className=\"tab-card-heading-style\"\r\n                    >\r\n                      {CardValues.poll_category_name}\r\n                    </Card.Title>\r\n                  </Col>\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n                </Row>\r\n\r\n                <Card.Subtitle className=\"\">\r\n                  <Row className=\"tab-card-subject-style\">\r\n                    <Col className=\"p-0\">\r\n                      <div className=\"tab-title-div-ellipsis\">\r\n                        <span className=\"tab-title-ellipsis\">\r\n                          {CardValues.poll_subject}\r\n                      </span>\r\n                     </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Subtitle>\r\n                <Card.Body className=\"p-0\">\r\n                  <Card.Text className=\"tab-card-body-style mb-2\">\r\n                    <Row>\r\n                      <Col\r\n                        Col\r\n                        xs=\"12\"\r\n                        sm=\"12\"\r\n                        md=\"12\"\r\n                        lg=\"12\"\r\n                        xl=\"12\"\r\n                        className=\"\"\r\n                      >\r\n                        <span className=\"pollDates pr-2\">Start Date :</span>\r\n                        <span>{CardValues.d_start_date}</span>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                      <Col\r\n                        Col\r\n                        xs=\"12\"\r\n                        sm=\"12\"\r\n                        md=\"12\"\r\n                        lg=\"12\"\r\n                        xl=\"12\"\r\n                        className=\"\"\r\n                      >\r\n                        <span className=\"pollDates pr-2\">\r\n                          End Date &nbsp;&nbsp;:\r\n                        </span>\r\n                        <span>{CardValues.d_end_date}</span>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                      <Col\r\n                        Col\r\n                        xs=\"4\"\r\n                        sm=\"4\"\r\n                        md=\"4\"\r\n                        lg=\"4\"\r\n                        xl=\"4\"\r\n                        className=\" pr-0 pt-4\"\r\n                      >\r\n                        <p className=\"card-comments-style\">\r\n                          <label id=\"rcorners-comment-count\">\r\n                            {CardValues.votes}{\" \"}\r\n                            <span class=\"comments-count-style\">Votes</span>\r\n                          </label>\r\n                        </p>\r\n                      </Col>\r\n                      <Col\r\n                        Col\r\n                        xs=\"8\"\r\n                        sm=\"8\"\r\n                        md=\"8\"\r\n                        lg=\"8\"\r\n                        xl=\"8\"\r\n                        className=\"\"\r\n                      ></Col>\r\n                    </Row>\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <Row className=\"pt-3 card-footer__events\">\r\n                      <Col\r\n                        xs=\"3\"\r\n                        sm=\"3\"\r\n                        md=\"3\"\r\n                        lg=\"3\"\r\n                        xl=\"3\"\r\n                        className=\"card-profile-image-col-style\"\r\n                      >\r\n                        <img\r\n                          src={\r\n                            \"https://scity.gmmspl.com:3000/\" +\r\n                            CardValues.cardProfileImage\r\n                          }\r\n                          alt=\"\"\r\n                          class=\"card-profile-image-style\"\r\n                        />\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"5\"\r\n                        sm=\"5\"\r\n                        md=\"5\"\r\n                        lg=\"5\"\r\n                        xl=\"5\"\r\n                        className=\"card-image-imfo-style pr-0\"\r\n                      >\r\n                        <Row className=\"card-image-profile-name-style\">\r\n                          <label>{CardValues.full_name}</label>\r\n                        </Row>\r\n\r\n                        {/* <Row className=\"card-image-imfo-row-style\"><label>Start Date : {CardValues.d_start_date}</label></Row>\r\n                <Row className=\"card-image-imfo-row-style\"><label>End Date : {CardValues.d_end_date}</label></Row> */}\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"4\"\r\n                        sm=\"4\"\r\n                        md=\"4\"\r\n                        lg=\"4\"\r\n                        xl=\"4\"\r\n                        className=\"p-0 card-icon-alignment\"\r\n                      >\r\n                        <div>\r\n                          <span class=\"\">\r\n                            <MDBIcon\r\n                              far\r\n                              icon=\"eye\"\r\n                              size=\"sm\"\r\n                              className=\"card-icon-style\"\r\n                              onClick={() => this.CardDetails(CardValues)}\r\n                            />\r\n                          </span>\r\n                          <span class=\"pl-2 \">\r\n                            <MDBIcon\r\n                              icon=\"vote-yea\"\r\n                              size=\"sm\"\r\n                              className=\"card-icon-style\"\r\n                              onClick={() => this.CardDetails(CardValues)}\r\n                            />\r\n                          </span>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row className=\"pb-5\"></Row>\r\n        <Row>\r\n          <Col xs=\"0\" sm=\"0\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n          <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n         { this.state.totalTrendingCard > this.state.cardCounts &&\r\n        <Button className=\"login-button-style\" onClick={this.LoadMore_SAT}>\r\n          Load More\r\n        </Button>\r\n        }\r\n        </Col>\r\n        </Row>\r\n        <Row className=\"pb-5 pt-2\"></Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CollaborationPSMostTrending);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\chatbot\\BotAvatar\\BotAvatar.jsx",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\chatbot\\CollaborationComponent\\CollaborationOptions.jsx",["1293","1294"],"import React from \"react\";\r\nimport \"./common.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n//import CollaborationsHeadings from '../../../jsonFiles/CollaborationJson/collaborationDetails';\r\n\r\n\r\nconst CollaborationOptions = (props) => {\r\n  const options = [\r\n    { text: \"Report An Incident\", handler:event =>\r\n      {\r\n        if (sessionStorage.getItem(\"user_id\") == null || sessionStorage.getItem(\"user_id\") == undefined){\r\n          toast.warn(\"Please Login to report incident.\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () => window.location.href='/',\r\n          });\r\n        }\r\n       else{\r\n        window.location.href='#/reportAnIncident'\r\n       }}\r\n      , id: 1, },\r\n    { text: \"View Incident Status\", handler: props.actionProvider.handleIncidentStatus, id: 2 },\r\n    // { text: \"Discussion Forums\", handler: props.actionProvider.handleDiscussionForum, id: 3 },\r\n    // { text: \"Become a Volunteer\", handler: props.actionProvider.handleVolunteer, id: 4 },\r\n    // { text: \"Join a Community\", handler: props.acsstionProvider.handleJoinCommunity, id: 5 },\r\n     { text: \"Back to main menu\", handler: props.actionProvider.handleRootMainMenu, id: 6 }\r\n    \r\n  ];\r\n\r\n  const optionsMarkup = options.map((option) => (\r\n    <button\r\n      className=\"option-button\"\r\n      key={option.id}\r\n      onClick={option.handler}\r\n    >\r\n      {option.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"options-container\">{optionsMarkup}</div>;\r\n};\r\n\r\n\r\nexport default CollaborationOptions;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\chatbot\\ComplainManagement\\ComplainOptions.jsx",["1295","1296"],"import React from \"react\";\r\nimport \"./common.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst ComplainOptions = (props) => {\r\n  const options = [\r\n    { text: \"Log a Complaint\", handler:event => \r\n    {\r\n      if (sessionStorage.getItem(\"user_id\") == null || sessionStorage.getItem(\"user_id\") == undefined){\r\n        toast.warn(\"Please Login to log a complaint.\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n          onClose: () => window.location.href='/',\r\n        });\r\n      }\r\n     else{\r\n      window.location.href='#/log-complaint'\r\n     }}\r\n    , id: 1, },\r\n    // { text: \"Search Complaint\", handler: props.actionProvider.handleSearchComplain, id: 2 },\r\n    { text: \"View Complaint Status\", handler: props.actionProvider.handleComplainStatus, id: 3 },\r\n     { text: \"Back to main menu\", handler: props.actionProvider.handleRootMainMenu, id: 4 }\r\n  ];\r\n\r\n  const optionsMarkup = options.map((option) => (\r\n    <button\r\n      className=\"option-button\"\r\n      key={option.id}\r\n      onClick={option.handler}\r\n      id={option.id}\r\n    >\r\n      {option.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"options-container\">{optionsMarkup}</div>;\r\n};\r\n\r\n\r\nexport default ComplainOptions;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\chatbot\\ComplainManagement\\SearchComplain.jsx",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\chatbot\\ComplainManagement\\LogComplain.jsx",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\chatbot\\ComplainManagement\\ComplainStatus.jsx",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\chatbot\\CitizenServices\\CitizenOptions.jsx",["1297","1298","1299","1300","1301","1302","1303","1304"],"import React from \"react\";\r\nimport \"./common.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst CitizenOptions = (props) => {\r\n  const options = [\r\n    { text: \"Emergency Services\", handler:event =>  window.location.href='#/emergencyServices', id:1},\r\n    { text: \"Property Tax\", handler:event => {\r\n    if (sessionStorage.getItem(\"user_id\") == null || sessionStorage.getItem(\"user_id\") == undefined){\r\n      toast.warn(\"Please Login to use the service\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => window.location.href='/',\r\n      });\r\n    }\r\n   else{\r\n    window.open(\"https://tax.lsgkerala.gov.in/epayment/mainPage.php\")\r\n   }} ,id: 2},\r\n\r\n   { text: \"Water Connection\", handler:event => {\r\n    if (sessionStorage.getItem(\"user_id\") == null || sessionStorage.getItem(\"user_id\") == undefined){\r\n      toast.warn(\"Please Login to use the service\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => window.location.href='/',\r\n      });\r\n    }\r\n   else{\r\n    window.open(\"https://kwa.kerala.gov.in/en/service/new-water-connection/\")\r\n   }} ,id: 3},\r\n\r\n   { text: \"Electricity Connection\", handler:event => {\r\n    if (sessionStorage.getItem(\"user_id\") == null || sessionStorage.getItem(\"user_id\") == undefined){\r\n      toast.warn(\"Please Login to use the service\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => window.location.href='/',\r\n      });\r\n    }\r\n   else{\r\n    window.open(\"https://wss.kseb.in/selfservices/ncHome\")\r\n   }} ,id: 4},\r\n    \r\n    { text: \"Birth Record\", handler:event =>  {\r\n      if (sessionStorage.getItem(\"user_id\") == null || sessionStorage.getItem(\"user_id\") == undefined){\r\n        toast.warn(\"Please Login to use the service\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n          onClose: () => window.location.href='/',\r\n        });\r\n      }\r\n     else{\r\n      window.open(\"https://cr.lsgkerala.gov.in/Content.php?id=B\")\r\n     }}, id: 5},\r\n   \r\n    // { text: \"Site Plan\",handler:props.actionProvider.handleSitePlan, id: 5},\r\n    // { text: \"Zone Certificate\",handler:props.actionProvider.handleZoneCertificate, id: 6},\r\n    { text: \"Marriage Registraion\",handler:event =>\r\n    \r\n    {\r\n      if (sessionStorage.getItem(\"user_id\") == null || sessionStorage.getItem(\"user_id\") == undefined){\r\n        toast.warn(\"Please Login to use the service\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n          onClose: () => window.location.href='/',\r\n        });\r\n      }\r\n     else{\r\n      window.open(\"https://cr.lsgkerala.gov.in/Content.php?id=D\")\r\n     }}\r\n    \r\n    , id: 6},\r\n    { text: \"Death Record\", handler:event => \r\n    {\r\n      if (sessionStorage.getItem(\"user_id\") == null || sessionStorage.getItem(\"user_id\") == undefined){\r\n        toast.warn(\"Please Login to use the service\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n          onClose: () => window.location.href='/',\r\n        });\r\n      }\r\n     else{\r\n      window.open(\"https://cr.lsgkerala.gov.in/Content.php?id=B\")\r\n     }}\r\n    , id: 7},\r\n    { text: \"Smart Trivandrum\", handler:event => \r\n    {\r\n      if (sessionStorage.getItem(\"user_id\") == null || sessionStorage.getItem(\"user_id\") == undefined){\r\n        toast.warn(\"Please Login to use the service\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n          onClose: () => window.location.href='/',\r\n        });\r\n      }\r\n     else{\r\n      window.open(\"https://play.google.com/store/apps/details?id=com.smart.trivandrum&hl=en_IN&gl=US\")\r\n     }}\r\n    , id: 8},\r\n    // { text: \"Gas Connections\",handler:props.actionProvider.handleGasConnection, id: 8},\r\n    // { text: \"Electricity Connections\",handler:props.actionProvider.handleElectricityConnection, id: 9},\r\n    // { text: \"Neighbourhood Crime\",handler:props.actionProvider.handleNeighbourhoodCrime, id: 10},\r\n    {text:\"Back to main menu\",handler:props.actionProvider.handleRootMainMenu, id: 11 }\r\n\r\n  ];\r\n\r\n  const optionsMarkup = options.map((option) => (\r\n    <button\r\n      className=\"option-button\"\r\n      key={option.id}\r\n      onClick={option.handler}\r\n    >\r\n      {option.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"options-container\">{optionsMarkup}</div>;\r\n};\r\n\r\n\r\nexport default CitizenOptions;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\chatbot\\CollaborationComponent\\ShareDiscuss.jsx",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\chatbot\\RootOptions\\Root.jsx",[],"H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Polls_Surveys\\CollaborationPSMostRecent\\CollaborationPSMostRecent.js",["1305","1306","1307","1308","1309"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"./CollaborationPSMostRecent.css\";\r\nimport CollaborationsHeadings from \"../../../jsonFiles/CollaborationJson/collaborationDetails\";\r\nimport { MDBIcon } from \"../../../../node_modules/mdbreact\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport LinesEllipsis from \"react-lines-ellipsis\";\r\n\r\nclass CollaborationPSMostRecent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pollsBinding: CollaborationsHeadings.PollsCard,\r\n      APIResponse: \"\",\r\n      cardCounts: 4,\r\n      pollVotes: CollaborationsHeadings.PollsVotes,\r\n      count: 0,\r\n      totalCardCount:0,\r\n    };\r\n    this.LoadMore_SAT = this.LoadMore_SAT.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllPolls();\r\n  }\r\n\r\n  getAllPolls() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        offset: this.state.cardCounts,\r\n      }),\r\n    };\r\n    fetch(\"https://scity.gmmspl.com:3000/poll/getrecentPoll\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.status === true) {\r\n          var JsonDate = this.state.APIResponse.data;\r\n          this.setState({\r\n            pollsBinding: JsonDate,\r\n            totalCardCount:this.state.APIResponse.total_rows\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  CardDetails = (CardValues) => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login for vote\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      sessionStorage.setItem(\"admin_id\", CardValues.admin_id);\r\n      sessionStorage.setItem(\"poll_id\", CardValues.poll_id);\r\n      sessionStorage.setItem(\"poll_options_id\", CardValues.poll_options_id);\r\n      sessionStorage.setItem(\"pollDetailBack\", \"collaboration-pollsSurveys\");\r\n      this.props.history.push(\"/collaboration-pollsSurveysDetails\");\r\n    }\r\n  };\r\n\r\n  LoadMore_SAT() {\r\n    if (this.state.cardCounts <= 100) {\r\n      var currentCount = this.state.cardCounts + 4;\r\n      this.state.cardCounts = currentCount;\r\n      this.getAllPolls();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"tab-card-container-style\">\r\n        <Row>\r\n          {this.state.pollsBinding.map((CardValues, index) => (\r\n            <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\" className=\"\">\r\n              <Card className=\"tab-card-style\">\r\n                <div class=\"card-top-border\"></div>\r\n                <Row className=\"pt-3\">\r\n                  <Col\r\n                    xs=\"10\"\r\n                    sm=\"10\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pl-4\"\r\n                  >\r\n                    <Card.Title\r\n                      id=\"rcorners1\"\r\n                      className=\"tab-card-heading-style\"\r\n                    >\r\n                      {CardValues.poll_category_name}\r\n                    </Card.Title>\r\n                  </Col>\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n                </Row>\r\n\r\n                 <Card.Subtitle className=\"\">\r\n                  <Row className=\"tab-card-subject-style\">\r\n                    <Col className=\"p-0\">\r\n                      <div className=\"tab-title-div-ellipsis\">\r\n                        <span className=\"tab-title-ellipsis\">\r\n                          {CardValues.poll_subject}\r\n                      </span>\r\n                     </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Subtitle>\r\n                <Card.Body className=\"p-0\">\r\n                  <Card.Text className=\"tab-card-body-style mb-2\">\r\n                    <Row>\r\n                      <Col\r\n                        Col\r\n                        xs=\"12\"\r\n                        sm=\"12\"\r\n                        md=\"12\"\r\n                        lg=\"12\"\r\n                        xl=\"12\"\r\n                        className=\"\"\r\n                      >\r\n                        <span className=\"pollDates pr-2\">Start Date :</span>\r\n                        <span>{CardValues.d_start_date}</span>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                      <Col\r\n                        Col\r\n                        xs=\"12\"\r\n                        sm=\"12\"\r\n                        md=\"12\"\r\n                        lg=\"12\"\r\n                        xl=\"12\"\r\n                        className=\"\"\r\n                      >\r\n                        <span className=\"pollDates pr-2\">\r\n                          End Date &nbsp;&nbsp;:\r\n                        </span>\r\n                        <span>{CardValues.d_end_date}</span>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                      <Col\r\n                        Col\r\n                        xs=\"4\"\r\n                        sm=\"4\"\r\n                        md=\"4\"\r\n                        lg=\"4\"\r\n                        xl=\"4\"\r\n                        className=\" pr-0 pt-4\"\r\n                      >\r\n                        <p className=\"card-comments-style\">\r\n                          <label id=\"rcorners-comment-count\">\r\n                            {CardValues.votes}{\" \"}\r\n                            <span class=\"comments-count-style\">Votes</span>\r\n                          </label>\r\n                        </p>\r\n                      </Col>\r\n                      <Col\r\n                        Col\r\n                        xs=\"8\"\r\n                        sm=\"8\"\r\n                        md=\"8\"\r\n                        lg=\"8\"\r\n                        xl=\"8\"\r\n                        className=\"\"\r\n                      ></Col>\r\n                    </Row>\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <Row className=\"pt-3 card-footer__events\">\r\n                      <Col\r\n                        xs=\"3\"\r\n                        sm=\"3\"\r\n                        md=\"3\"\r\n                        lg=\"3\"\r\n                        xl=\"3\"\r\n                        className=\"card-profile-image-col-style\"\r\n                      >\r\n                        <img\r\n                          src={\r\n                            \"https://scity.gmmspl.com:3000/\" +\r\n                            CardValues.cardProfileImage\r\n                          }\r\n                          alt=\"\"\r\n                          class=\"card-profile-image-style\"\r\n                        />\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"5\"\r\n                        sm=\"5\"\r\n                        md=\"5\"\r\n                        lg=\"5\"\r\n                        xl=\"5\"\r\n                        className=\"card-image-imfo-style pr-0\"\r\n                      >\r\n                        <Row className=\"card-image-profile-name-style\">\r\n                          <label className=\"pl-1 pt-2\">\r\n                            {CardValues.full_name}\r\n                          </label>\r\n                        </Row>\r\n\r\n                        {/* <Row className=\"card-image-imfo-row-style\"><label>Start Date : {CardValues.d_start_date}</label></Row>\r\n                <Row className=\"card-image-imfo-row-style\"><label>End Date : {CardValues.d_end_date}</label></Row> */}\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"4\"\r\n                        sm=\"4\"\r\n                        md=\"4\"\r\n                        lg=\"4\"\r\n                        xl=\"4\"\r\n                        className=\"p-0 card-icon-alignment\"\r\n                      >\r\n                        <div>\r\n                          <span class=\"\">\r\n                            <MDBIcon\r\n                              far\r\n                              icon=\"eye\"\r\n                              size=\"sm\"\r\n                              className=\"card-icon-style\"\r\n                              onClick={() => this.CardDetails(CardValues)}\r\n                            />\r\n                          </span>\r\n                          <span class=\"pl-2 \">\r\n                            <MDBIcon\r\n                              icon=\"vote-yea\"\r\n                              size=\"sm\"\r\n                              className=\"card-icon-style\"\r\n                              onClick={() => this.CardDetails(CardValues)}\r\n                            />\r\n                          </span>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row className=\"pb-5\"></Row>\r\n        <Row>\r\n          <Col xs=\"0\" sm=\"0\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n          <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n        { this.state.totalCardCount > this.state.cardCounts &&\r\n        <Button className=\"login-button-style\" onClick={this.LoadMore_SAT}>\r\n          Load More\r\n        </Button>}\r\n        </Col>\r\n        </Row>\r\n        <Row className=\"pb-5 pt-2\"></Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CollaborationPSMostRecent);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Profile-changePassword\\Profile-changePassword.js",["1310","1311","1312","1313","1314","1315","1316","1317","1318","1319","1320"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport LoginHeadings from \"../../jsonFiles/UserInfoJson/userLogin\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ChangePassowrdBannerImg from \"../../assets/passwordwindow.png\";\r\nimport \"./Profile-changePassword.css\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nclass ProfileChangePassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      oldPassword: \"\",\r\n      oldPasswordValidate_SAT: false,\r\n      newPassword: \"\",\r\n      newPasswordValidate_SAT: false,\r\n      conPassword: \"\",\r\n      conPasswordValidate_SAT: false,\r\n      oldPasswordVisible: false,\r\n      newPasswordVisible: false,\r\n      confirmPasswordVisible: false,\r\n    };\r\n    this.oldPasswordValidate_SAT = this.oldPasswordValidate_SAT.bind(this);\r\n    this.newPasswordValidate_SAT = this.newPasswordValidate_SAT.bind(this);\r\n    this.conPasswordValidate_SAT = this.conPasswordValidate_SAT.bind(this);\r\n    this.Submit = this.Submit.bind(this);\r\n    this.oldPasswordVisible = this.oldPasswordVisible.bind(this);\r\n    this.newPasswordVisible = this.newPasswordVisible.bind(this);\r\n    this.confirmPasswordVisible = this.confirmPasswordVisible.bind(this);\r\n  }\r\n\r\n  oldPasswordVisible = (e) => {\r\n    if (this.state.oldPasswordVisible == false) {\r\n      this.setState({\r\n        oldPasswordVisible: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        oldPasswordVisible: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  newPasswordVisible = (e) => {\r\n    if (this.state.newPasswordVisible == false) {\r\n      this.setState({\r\n        newPasswordVisible: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        newPasswordVisible: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  confirmPasswordVisible = (e) => {\r\n    if (this.state.confirmPasswordVisible == false) {\r\n      this.setState({\r\n        confirmPasswordVisible: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        confirmPasswordVisible: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  oldPasswordValidate_SAT = (e) => {\r\n    var oldPassword = e.target.value;\r\n    if (oldPassword != null || oldPassword !== \"\") {\r\n      this.setState({\r\n        oldPasswordValidate_SAT: true,\r\n        oldPassword: oldPassword,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        oldPasswordValidate_SAT: false,\r\n        oldPassword: oldPassword,\r\n      });\r\n    }\r\n  };\r\n\r\n  newPasswordValidate_SAT = (e) => {\r\n    var newPassword = e.target.value;\r\n    if (newPassword != null || newPassword !== \"\") {\r\n      this.setState({\r\n        newPasswordValidate_SAT: true,\r\n        newPassword: newPassword,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        newPasswordValidate_SAT: false,\r\n        newPassword: newPassword,\r\n      });\r\n    }\r\n  };\r\n\r\n  conPasswordValidate_SAT = (e) => {\r\n    var conPassword = e.target.value;\r\n    if (conPassword != null || conPassword !== \"\") {\r\n      this.setState({\r\n        conPasswordValidate_SAT: true,\r\n        conPassword: conPassword,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        conPasswordValidate_SAT: false,\r\n        conPassword: conPassword,\r\n      });\r\n    }\r\n  };\r\n\r\n  Submit() {\r\n    if (this.state.newPassword === this.state.conPassword) {\r\n      if (this.state.newPassword != this.state.oldPassword) {\r\n        const requestOptions = {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            user_id: sessionStorage.getItem(\"user_id\"),\r\n            token: sessionStorage.getItem(\"token\"),\r\n            old_password: this.state.oldPassword,\r\n            new_password: this.state.newPassword,\r\n          }),\r\n        };\r\n\r\n        fetch(\r\n          \"https://scity.gmmspl.com:3000/smartcity/changepassword\",\r\n          requestOptions\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            this.setState({\r\n              APIResponse: data,\r\n            });\r\n            if (\r\n              this.state.APIResponse.message === \"Password set successfully\"\r\n            ) {\r\n              sessionStorage.clear();\r\n              toast.success(\"Password Changed Successfully\", {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n                onClose: () => this.props.history.push(\"/\"),\r\n              });\r\n            } else if (\r\n              this.state.APIResponse.message === \"Old Password doesnot match\"\r\n            ) {\r\n              toast.warn(\"Enter correct old password.\", {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              });\r\n            } else {\r\n              toast.error(\"Password does not satisfies all conditions\", {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n                onClose: () => this.props.history.push(\"/dashboard\"),\r\n              });\r\n            }\r\n          });\r\n      } else if (this.state.oldPassword == \"\" && this.state.newPassword == \"\") {\r\n        toast.error(\"Password fields are empty.\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n      } else {\r\n        toast.error(\"New Password and Old Password should not be same\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n      }\r\n    } else {\r\n      toast.error(\"New Password and Confirm Password does not match\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={1000}\r\n          hideProgressBar={false}\r\n          newestOnTop\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover={false}\r\n          className=\"toaster-style\"\r\n        />\r\n\r\n        <Container className=\"pt-4\">\r\n          <Row className=\"top-margin\">\r\n            <Col xs lg=\"3\"></Col>\r\n            <Col className=\"profileimage\" md=\"auto\" lg=\"6\">\r\n              {/* <label for=\"userImage\"> */}\r\n              <img\r\n                src={ChangePassowrdBannerImg}\r\n                class=\"round-changePassowrd-img\"\r\n                alt=\"\"\r\n              />\r\n              {/* </label> */}\r\n            </Col>\r\n            <Col xs lg=\"3\"></Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Container className=\"\">\r\n          <Container>\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <LockOutlinedIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-password-field-width-style\">\r\n                    <Tooltip\r\n                      // title=\"Password should contain at least 1 captial alphabet, 1 small alphabet, 1 numeric, 1 special symbol and minimum length 8 charecter\"\r\n                      title={\r\n                        <div>\r\n                          <label class=\"pb-1 pt-3\">Password Must :</label>\r\n                          <ul class=\"pr-4\">\r\n                            <li class=\"pb-2\">Contain 8 characters or more</li>\r\n                            <li class=\"pb-2\">\r\n                              Contain at least one lowercase character\r\n                            </li>\r\n                            <li class=\"pb-2\">\r\n                              Contain at least one uppercase character\r\n                            </li>\r\n                            <li class=\"pb-2\">Contain at least one number</li>\r\n                            <li class=\"pb-2\">\r\n                              Contain at least one symbol (like !@#$%^)\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      }\r\n                      placement=\"bottom\"\r\n                      TransitionProps={{ timeout: 600 }}\r\n                      // arrow\r\n                      className=\"tooltip-style\"\r\n                    >\r\n                      <div>\r\n                        {!this.state.oldPasswordVisible && (\r\n                          <TextField\r\n                            type=\"password\"\r\n                            id=\"input-with-icon-grid1\"\r\n                            label=\"Old Password\"\r\n                            minlength=\"6\"\r\n                            maxLength=\"15\"\r\n                            value={this.state.oldPassword}\r\n                            onChange={this.oldPasswordValidate_SAT}\r\n                            autocomplete=\"new-password\"\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\" className=\"p-0\">\r\n                                  <IconButton>\r\n                                    <VisibilityOffIcon\r\n                                      className=\"login-icon-color\"\r\n                                      onClick={this.oldPasswordVisible}\r\n                                    />\r\n                                  </IconButton>\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        )}\r\n                        {this.state.oldPasswordVisible && (\r\n                          <TextField\r\n                            type=\"text\"\r\n                            id=\"input-with-icon-grid1\"\r\n                            label=\"Old Password\"\r\n                            minlength=\"6\"\r\n                            maxLength=\"15\"\r\n                            value={this.state.oldPassword}\r\n                            onChange={this.oldPasswordValidate_SAT}\r\n                            autocomplete=\"new-password\"\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\" className=\"p-0\">\r\n                                  <IconButton>\r\n                                    <VisibilityIcon\r\n                                      className=\"login-icon-color\"\r\n                                      onClick={this.oldPasswordVisible}\r\n                                    />\r\n                                  </IconButton>\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n          </Container>\r\n          <Container>\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <LockOutlinedIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-password-field-width-style\">\r\n                    <Tooltip\r\n                      // title=\"Password should contain at least 1 captial alphabet, 1 small alphabet, 1 numeric, 1 special symbol and minimum length 8 charecter\"\r\n                      title={\r\n                        <div>\r\n                          <label class=\"pb-1 pt-3\">Password Must :</label>\r\n                          <ul class=\"pr-4\">\r\n                            <li class=\"pb-2\">Contain 8 characters or more</li>\r\n                            <li class=\"pb-2\">\r\n                              Contain at least one lowercase character\r\n                            </li>\r\n                            <li class=\"pb-2\">\r\n                              Contain at least one uppercase character\r\n                            </li>\r\n                            <li class=\"pb-2\">Contain at least one number</li>\r\n                            <li class=\"pb-2\">\r\n                              Contain at least one symbol (like !@#$%^)\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      }\r\n                      placement=\"bottom\"\r\n                      TransitionProps={{ timeout: 600 }}\r\n                      // arrow\r\n                      className=\"tooltip-style\"\r\n                    >\r\n                      <div>\r\n                        {!this.state.newPasswordVisible && (\r\n                          <TextField\r\n                            type=\"password\"\r\n                            id=\"input-with-icon-grid2\"\r\n                            label=\"New Password\"\r\n                            minlength=\"6\"\r\n                            maxLength=\"15\"\r\n                            value={this.state.newPassword}\r\n                            onChange={this.newPasswordValidate_SAT}\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\" className=\"p-0\">\r\n                                  <IconButton>\r\n                                    <VisibilityOffIcon\r\n                                      className=\"login-icon-color\"\r\n                                      onClick={this.newPasswordVisible}\r\n                                    />\r\n                                  </IconButton>\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        )}\r\n                        {this.state.newPasswordVisible && (\r\n                          <TextField\r\n                            type=\"text\"\r\n                            id=\"input-with-icon-grid2\"\r\n                            label=\"New Password\"\r\n                            minlength=\"6\"\r\n                            maxLength=\"15\"\r\n                            value={this.state.newPassword}\r\n                            onChange={this.newPasswordValidate_SAT}\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\" className=\"p-0\">\r\n                                  <IconButton>\r\n                                    <VisibilityIcon\r\n                                      className=\"login-icon-color\"\r\n                                      onClick={this.newPasswordVisible}\r\n                                    />\r\n                                  </IconButton>\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n          </Container>\r\n          <Container>\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <LockOutlinedIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-password-field-width-style\">\r\n                    <Tooltip\r\n                      // title=\"Password should contain at least 1 captial alphabet, 1 small alphabet, 1 numeric, 1 special symbol and minimum length 8 charecter\"\r\n                      title={\r\n                        <div>\r\n                          <label class=\"pb-1 pt-3\">Password Must :</label>\r\n                          <ul class=\"pr-4\">\r\n                            <li class=\"pb-2\">Contain 8 characters or more</li>\r\n                            <li class=\"pb-2\">\r\n                              Contain at least one lowercase character\r\n                            </li>\r\n                            <li class=\"pb-2\">\r\n                              Contain at least one uppercase character\r\n                            </li>\r\n                            <li class=\"pb-2\">Contain at least one number</li>\r\n                            <li class=\"pb-2\">\r\n                              Contain at least one symbol (like !@#$%^)\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      }\r\n                      placement=\"bottom\"\r\n                      TransitionProps={{ timeout: 600 }}\r\n                      // arrow\r\n                      className=\"tooltip-style\"\r\n                    >\r\n                      <div>\r\n                        {!this.state.confirmPasswordVisible && (\r\n                          <TextField\r\n                            type=\"password\"\r\n                            id=\"input-with-icon-grid3\"\r\n                            label=\"Confirm Password\"\r\n                            value=\"\"\r\n                            minlength=\"6\"\r\n                            maxLength=\"15\"\r\n                            value={this.state.conPassword}\r\n                            onChange={this.conPasswordValidate_SAT}\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\" className=\"p-0\">\r\n                                  <IconButton>\r\n                                    <VisibilityOffIcon\r\n                                      className=\"login-icon-color\"\r\n                                      onClick={this.confirmPasswordVisible}\r\n                                    />\r\n                                  </IconButton>\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        )}\r\n                        {this.state.confirmPasswordVisible && (\r\n                          <TextField\r\n                            type=\"text\"\r\n                            id=\"input-with-icon-grid3\"\r\n                            label=\"Confirm Password\"\r\n                            value=\"\"\r\n                            minlength=\"6\"\r\n                            maxLength=\"15\"\r\n                            value={this.state.conPassword}\r\n                            onChange={this.conPasswordValidate_SAT}\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\" className=\"p-0\">\r\n                                  <IconButton>\r\n                                    <VisibilityIcon\r\n                                      className=\"login-icon-color\"\r\n                                      onClick={this.confirmPasswordVisible}\r\n                                    />\r\n                                  </IconButton>\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          {/* <Container>\r\n          <Row className=\"pt-4\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\" className=\"signup-text-message-style\">\r\n                <Button className=\"signup-button-style\" onClick={this.Submit}>\r\n                  {LoginHeadings.Profile_SUBMIT_HMD}\r\n                </Button>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          </Row>\r\n        </Container> */}\r\n\r\n          <Container>\r\n            <Row className=\"pt-4\">\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n              <Col\r\n                xs=\"6\"\r\n                sm=\"6\"\r\n                md=\"6\"\r\n                lg=\"4\"\r\n                xl=\"4\"\r\n                xxl=\"4\"\r\n                className=\"signup-text-message-style\"\r\n              >\r\n                <Button className=\"signup-button-style\" onClick={this.Submit}>\r\n                  {/* <Link to='/dashboard' className=\"share-discuss-button-style pt-2\"> */}\r\n                  {LoginHeadings.Profile_SUBMIT_HMD}\r\n                  {/* </Link> */}\r\n                </Button>\r\n              </Col>\r\n              <Col\r\n                xs=\"6\"\r\n                sm=\"6\"\r\n                md=\"6\"\r\n                lg=\"4\"\r\n                xl=\"4\"\r\n                xxl=\"4\"\r\n                className=\"signup-text-message-style\"\r\n              >\r\n                <Button className=\"skip-button-style\">\r\n                  <Link to=\"/dashboard\" className=\"cancle-button-style\">\r\n                    {LoginHeadings.Profile_CANCEL_HMD}\r\n                  </Link>\r\n                </Button>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          {/* <Row>\r\n          <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n          <Grid container spacing={1} alignItems=\"flex-end\">\r\n            <Grid item>\r\n              <LockOutlinedIcon className=\"login-icon-color\" />\r\n            </Grid>\r\n            <Grid item className=\"login-field-width-style\">\r\n              <TextField type=\"password\" id=\"input-with-icon-grid\" label=\"Password\" minlength=\"6\" maxLength=\"15\" value=\"\" onChange=\"\" />\r\n            </Grid>\r\n          </Grid>\r\n          </Col>\r\n          <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n        </Row> */}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ProfileChangePassword);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\LoadMaps\\LoadMaps.js",["1321","1322","1323","1324","1325","1326","1327","1328","1329","1330","1331","1332","1333","1334","1335","1336","1337","1338","1339","1340","1341"],"import React, { Component } from \"react\";\r\nimport { loadModules } from 'esri-loader';\r\nimport '../../../node_modules/@arcgis/core/assets/esri/themes/light/main.css';\r\nimport \"./LoadMaps.css\"\r\n\r\nconst options = {\r\n  url: 'https://js.arcgis.com/4.20/'\r\n};\r\n\r\nconst styles =  {\r\n  \r\n\r\n  container: {\r\n    width: '100vw',\r\n    padding:'10px',\r\n  },\r\n  mapDiv: {\r\n    padding: '5px',\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n}\r\n\r\n\r\n\r\nclass LoadMaps extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: 'loading'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.style = 'background-image: url();';\r\n    document.body.style = 'background: #F9F9F9';\r\n    loadModules([\"esri/config\",'esri/Map', 'esri/views/MapView','esri/tasks/Locator','esri/widgets/Locate','esri/widgets/Search','esri/Graphic','esri/layers/GraphicsLayer','esri/geometry/Point',\r\n    'esri/symbols/WebStyleSymbol','esri/rest/locator'], options)\r\n      .then(([esriConfig,Map, MapView,Locator,Locate,Search,Graphic,GraphicsLayer,Point,WebStyleSymbol,locator]) => {\r\n        esriConfig.apiKey = \"AAPKa808b66b329d4c20bedf21c30bfea58dkc4s6BDpyyhENXyDlewV2OAkuxnAGDz3LgnOk9Px1LWQBQNG3giBD5f5hX7aRB2R\";\r\n \r\n       \r\n        const locatorUrl = \"https://geocode-api.arcgis.com/arcgis/rest/services/World/GeocodeServer\" ;\r\n\r\n        const map = new Map({ basemap: \"streets-navigation-vector\" });\r\n        const view = new MapView({\r\n          container: \"viewDiv\",\r\n          map:map,\r\n          zoom: 9,\r\n          center: [76.9366, 8.5241]\r\n        });\r\n\r\n\r\n        view.on(\"click\", function (event) {   \r\n          event.stopPropagation();\r\n    \r\n          // Get the coordinates of the click on the view\r\n          var lat = Math.round(event.mapPoint.latitude * 1000) / 1000;\r\n          var lon = Math.round(event.mapPoint.longitude * 1000) / 1000;\r\n\r\n          const params = {\r\n            location: event.mapPoint\r\n          };\r\n          locator\r\n          .locationToAddress(locatorUrl,params)\r\n          .then((response) => {\r\n            // If an address is successfully found, show it in the popup's content\r\n            view.popup.open({\r\n              // Set the popup's title to the coordinates of the location\r\n              title:response.address,\r\n              location: event.mapPoint\r\n            });\r\n            if (sessionStorage.getItem(\"complaintLogBack\") != null || sessionStorage.getItem(\"complaintLogBack\") != undefined) {\r\n              sessionStorage.setItem(\"compliantTempLocation\",response.address); \r\n            }\r\n            if (sessionStorage.getItem(\"incidentBack\") != null || sessionStorage.getItem(\"incidentBack\") != undefined) {\r\n                sessionStorage.setItem(\"incidentTempLocation\",response.address);   \r\n            }\r\n            if (sessionStorage.getItem(\"ideasBack\") != null || sessionStorage.getItem(\"ideasBack\") != undefined) {\r\n              sessionStorage.setItem(\"ideasTempLocation\",response.address);  \r\n            }\r\n            if (sessionStorage.getItem(\"volunterBack\") != null || sessionStorage.getItem(\"volunterBack\") != undefined) {\r\n              sessionStorage.setItem(\"volunterTempLocation\",response.address);  \r\n            }\r\n            if (sessionStorage.getItem(\"volunterEditBack\") != null || sessionStorage.getItem(\"volunterEditBack\") != undefined) {\r\n              sessionStorage.setItem(\"volunterEditTempLocation\",response.address);  \r\n            }\r\n        })\r\n          .catch(() => {\r\n            // If the promise fails and no result is found, show a generic message\r\n            view.popup.open({\r\n              // Set the popup's title to the coordinates of the location\r\n              title: \"No address was found for this location\",\r\n              location: event.mapPoint \r\n            });\r\n          //  view.popup.content = \"No address was found for this location\";\r\n          });\r\n\r\n          view.when(function () {\r\n            if (sessionStorage.getItem(\"complaintLogBack\") != null || sessionStorage.getItem(\"complaintLogBack\") != undefined) {\r\n              sessionStorage.setItem(\"complaintTemplong\", lon);\r\n              sessionStorage.setItem(\"complaintTemplat\", lat); \r\n            }\r\n            if (sessionStorage.getItem(\"incidentBack\") != null || sessionStorage.getItem(\"incidentBack\") != undefined) {\r\n                sessionStorage.setItem(\"incidentTemplong\", lon);\r\n                sessionStorage.setItem(\"incidentTemplat\", lat); \r\n            }\r\n            if (sessionStorage.getItem(\"ideasBack\") != null || sessionStorage.getItem(\"ideasBack\") != undefined) {\r\n              sessionStorage.setItem(\"ideasTemplong\", lon);\r\n              sessionStorage.setItem(\"ideasTemplat\", lat); \r\n            }\r\n            if (sessionStorage.getItem(\"volunterBack\") != null || sessionStorage.getItem(\"volunterBack\") != undefined) {\r\n                sessionStorage.setItem(\"volunterTemplong\", lon);\r\n                sessionStorage.setItem(\"volunterTemplat\", lat); \r\n            }\r\n            if (sessionStorage.getItem(\"volunterEditBack\") != null || sessionStorage.getItem(\"volunterEditBack\") != undefined) {\r\n              sessionStorage.setItem(\"volunterEditTemplong\", lon);\r\n              sessionStorage.setItem(\"volunterEditTemplat\", lat); \r\n          }\r\n           \r\n              addgraphics(lon,lat);\r\n          });\r\n\r\n        });\r\n\r\n        view.when(function () {\r\n          if (sessionStorage.getItem(\"complaintLogBack\") != null || sessionStorage.getItem(\"complaintLogBack\") != undefined) {\r\n            addgraphics(sessionStorage.getItem(\"complaintlong\"),sessionStorage.getItem(\"complaintlat\"));\r\n          }\r\n          if (sessionStorage.getItem(\"incidentBack\") != null || sessionStorage.getItem(\"incidentBack\") != undefined) {\r\n            addgraphics(sessionStorage.getItem(\"incidentlong\"),sessionStorage.getItem(\"incidentlat\"));\r\n          }\r\n          if (sessionStorage.getItem(\"ideasBack\") != null || sessionStorage.getItem(\"ideasBack\") != undefined) {\r\n            addgraphics(sessionStorage.getItem(\"ideaslong\"),sessionStorage.getItem(\"ideaslat\"));\r\n          }\r\n          if (sessionStorage.getItem(\"volunterBack\") != null || sessionStorage.getItem(\"volunterBack\") != undefined) {\r\n            addgraphics(sessionStorage.getItem(\"volunterlong\"),sessionStorage.getItem(\"volunterlat\"));\r\n          }\r\n          if (sessionStorage.getItem(\"volunterEditBack\") != null || sessionStorage.getItem(\"volunterEditBack\") != undefined) {\r\n            addgraphics(sessionStorage.getItem(\"volunterEditlong\"),sessionStorage.getItem(\"volunterEditlat\"));\r\n          }\r\n         \r\n      });\r\n\r\n      let markerSymbol = {\r\n        type: \"simple-marker\",  // autocasts as new SimpleMarkerSymbol()\r\n        color: [226, 119, 40]\r\n      };\r\n        var webStyleSymbol = new WebStyleSymbol({\r\n          name: \"tear-pin-1\",\r\n          styleName: \"Esri2DPointSymbolsStyle\"\r\n        });\r\n\r\n        function addgraphics(a,b) {\r\n\r\n          var markerPoint = new Point({ x: a, y: b });\r\n          var storepoint = new Graphic(markerPoint, webStyleSymbol);\r\n          map.removeAll();\r\n          var layer = new GraphicsLayer();\r\n          layer.add(storepoint);\r\n          map.add(layer);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        var locateBtn = new Locate({\r\n          view: view\r\n\r\n        });\r\n      //  console.log(\"test\",locateBtn)\r\n        var searchWidget = new Search({\r\n          view: view,\r\n        });\r\n       \r\n        searchWidget.on(\"select-result\", function(event){\r\n          const point = { //Create a point\r\n            location: [event.result.feature.geometry.longitude, event.result.feature.geometry.latitude]\r\n         }; \r\n        locator\r\n        .locationToAddress(locatorUrl,point)\r\n        .then((response) => {\r\n          // If an address is successfully found, show it in the popup's content\r\n          if (sessionStorage.getItem(\"complaintLogBack\") != null || sessionStorage.getItem(\"complaintLogBack\") != undefined) {\r\n            sessionStorage.setItem(\"complaintTemplong\",event.result.feature.geometry.longitude);\r\n          sessionStorage.setItem(\"complaintTemplat\",event.result.feature.geometry.latitude);\r\n          sessionStorage.setItem(\"compliantTempLocation\",response.address); \r\n          addgraphics(event.result.feature.geometry.longitude,event.result.feature.geometry.latitude);\r\n          }\r\n\r\n          if (sessionStorage.getItem(\"incidentBack\") != null || sessionStorage.getItem(\"incidentBack\") != undefined) {\r\n              sessionStorage.setItem(\"incidentTemplong\",event.result.feature.geometry.longitude);\r\n              sessionStorage.setItem(\"incidentTemplat\",event.result.feature.geometry.latitude);\r\n              sessionStorage.setItem(\"incidentTempLocation\",response.address);  \r\n              addgraphics(event.result.feature.geometry.longitude,event.result.feature.geometry.latitude);\r\n          }\r\n          if (sessionStorage.getItem(\"ideasBack\") != null || sessionStorage.getItem(\"ideasBack\") != undefined) {\r\n            sessionStorage.setItem(\"ideasTemplong\",event.result.feature.geometry.longitude);\r\n            sessionStorage.setItem(\"ideasTemplat\",event.result.feature.geometry.latitude);\r\n            sessionStorage.setItem(\"ideasTempLocation\",response.address);  \r\n            addgraphics(event.result.feature.geometry.longitude,event.result.feature.geometry.latitude);\r\n          }\r\n          if (sessionStorage.getItem(\"volunterBack\") != null || sessionStorage.getItem(\"volunterBack\") != undefined) {\r\n            sessionStorage.setItem(\"volunterTemplong\",event.result.feature.geometry.longitude);\r\n            sessionStorage.setItem(\"volunterTemplat\",event.result.feature.geometry.latitude);\r\n            sessionStorage.setItem(\"volunterTempLocation\",response.address);  \r\n            addgraphics(event.result.feature.geometry.longitude,event.result.feature.geometry.latitude);\r\n          }\r\n          if (sessionStorage.getItem(\"volunterEditBack\") != null || sessionStorage.getItem(\"volunterEditBack\") != undefined) {\r\n            sessionStorage.setItem(\"volunterEditTemplong\",event.result.feature.geometry.longitude);\r\n            sessionStorage.setItem(\"volunterEditTemplat\",event.result.feature.geometry.latitude);\r\n            sessionStorage.setItem(\"volunterEditTempLocation\",response.address);  \r\n            addgraphics(event.result.feature.geometry.longitude,event.result.feature.geometry.latitude);\r\n          }\r\n          \r\n      })\r\n        .catch(() => {\r\n          // If the promise fails and no result is found, show a generic message\r\n        //  view.popup.content = \"No address was found for this location\";\r\n          sessionStorage.setItem(\"currentAddress\", \"No address was found for this location\");\r\n        });\r\n         // console.log(\"The selected search result: \", event);\r\n        });\r\n      //  console.log(searchWidget);\r\n        view.ui.add(locateBtn, \"top-left\");\r\n        view.ui.add(searchWidget, \"top-right\");\r\n      })\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return(\r\n          <div className=\"Mapscreenres\" style={styles.container}>\r\n            <div id='viewDiv' style={ styles.mapDiv } >\r\n         {/* {<link rel=\"stylesheet\" href=\"https://js.arcgis.com/4.20/esri/themes/light/main.css\" />} */}\r\n            </div>\r\n            {/* <div id=\"instruction\" class=\"esri-widget\">\r\n      Click any location on the map to set marker\r\n    </div> */}\r\n          </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoadMaps;\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Profile-myProfile\\Profile-myProfile.js",["1342","1343","1344","1345","1346","1347","1348","1349","1350","1351","1352","1353"],"import React, { Component } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport LoginHeadings from \"../../jsonFiles/UserInfoJson/userLogin\";\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\r\nimport CallOutlinedIcon from \"@material-ui/icons/CallOutlined\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport OpacityIcon from \"@material-ui/icons/Opacity\";\r\nimport RoomOutlinedIcon from \"@material-ui/icons/RoomOutlined\";\r\nimport LocationCityIcon from \"@material-ui/icons/LocationCity\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport \"./Profile-myProfile.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport CategoryListOfAPI from \"../../jsonFiles/UserInfoJson/categoryList\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n\r\nclass ProfileMyProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      full_name: \"\",\r\n      image_path: \"\",\r\n      phonenumber: \"\",\r\n      dob:\"\",\r\n      gender: \"\",\r\n      email: \"\",\r\n      emergency_number: \"\",\r\n      emergencyNumberValidate_SAT: false,\r\n      blood_group_id: \"\",\r\n      address: \"\",\r\n      city: \"\",\r\n      cityValidate: false,\r\n      state: \"\",\r\n      pincode: \"\",\r\n      pinCodeValue: null,\r\n      pinCodeValidate_SAT: false,\r\n      full_nameValidate_HMD: false,\r\n      SelectedType: \"\",\r\n      SelectedTypeValidate: false,\r\n      BloogGroupList: CategoryListOfAPI.BloodGroup,\r\n      AgeValidate_SAT: false,\r\n      addressValidate_SAT: false,\r\n      pinCodeList: CategoryListOfAPI.PinCodeList,\r\n      file: \"\",\r\n      ward_id: \"\",\r\n      ward_name: \"\",\r\n    };\r\n    this.full_nameValidate_HMD = this.full_nameValidate_HMD.bind(this);\r\n    this.bloodGroupValidate_SAT = this.bloodGroupValidate_SAT.bind(this);\r\n    this.AgeValidate_SAT = this.AgeValidate_SAT.bind(this);\r\n    this.addressValidate_SAT = this.addressValidate_SAT.bind(this);\r\n    this.submit_SAT = this.submit_SAT.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.updateSessionStorage = this.updateSessionStorage.bind(this);\r\n  }\r\n\r\n  bloodGroupValidate_SAT = (Selected_option) => {\r\n    this.setState({\r\n      SelectedType: Selected_option,\r\n      SelectedTypeValidate: true,\r\n    });\r\n  };\r\n\r\n  handleChange(event) {\r\n    console.log(sessionStorage);\r\n    this.setState({\r\n      image_path: URL.createObjectURL(event.target.files[0]),\r\n      file: event.currentTarget.files[0],\r\n    });\r\n  }\r\n\r\n  pinCodeValidate_SAT = (Selected_option) => {\r\n    this.setState({\r\n      pincode: Selected_option,\r\n      pinCodeValidate_SAT: true,\r\n      ward_id: Selected_option.ward_id,\r\n    });\r\n    console.log(\"Selected_option = \", Selected_option.ward_id);\r\n  };\r\n\r\n  full_nameValidate_HMD = (e) => {\r\n    if (e.target.value != null) {\r\n      this.setState({\r\n        full_name: e.target.value,\r\n        full_nameValidate_HMD: true,\r\n      });\r\n      // console.log(\"full_nameValue_SAT \", this.state.full_nameValue_SAT);\r\n    } else {\r\n      this.setState({\r\n        full_name: e.target.value,\r\n        full_nameValidate_HMD: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  AgeValidate_SAT = (e) => {\r\n    if (e.target.value != null) {\r\n      this.setState({\r\n        dob: e.target.value,\r\n        AgeValidate_SAT: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        dob: e.target.value,\r\n        AgeValidate_SAT: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  cityValidate = (e) => {\r\n    if (e.target.value != null) {\r\n      this.setState({\r\n        city: e.target.value,\r\n        cityValidate: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        city: e.target.value,\r\n        cityValidate: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  emergencyNumberValidate_SAT = (e) => {\r\n    if (e.target.value != null) {\r\n      this.setState({\r\n        emergency_number: e.target.value,\r\n        emergencyNumberValidate_SAT: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        emergency_number: e.target.value,\r\n        emergencyNumberValidate_SAT: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  addressValidate_SAT = (e) => {\r\n    if (e.target.value != null || e.target.value != \" \") {\r\n      this.setState({\r\n        address: e.target.value,\r\n        addressValidate_SAT: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        address: e.target.value,\r\n        addressValidate_SAT: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  updateSessionStorage() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n      }),\r\n    };\r\n    fetch(\"https://scity.gmmspl.com:3000/smartcity/profile\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.message === \"Data Found\") {\r\n          console.log(this.state.APIResponse.data[0][\"image_path\"]);\r\n          if(this.state.APIResponse.data[0][\"image_path\"].indexOf('https')!== -1){\r\n            sessionStorage.setItem(\r\n              \"yourProfileImage\",this.state.APIResponse.data[0][\"image_path\"]\r\n            );\r\n          }\r\n          else{\r\n            console.log(\"https absent\");\r\n            sessionStorage.setItem(\r\n              \"yourProfileImage\",\"https://scity.gmmspl.com:3000/\" +this.state.APIResponse.data[0][\"image_path\"]\r\n            );\r\n          }\r\n        } else {\r\n          toast.error(\"updating session storage failed\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () => this.props.history.push(\"/dashboard\"),\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  submit_SAT() {\r\n   \r\n    let formData = new FormData();\r\n    formData.append(\"file\", this.state.file);\r\n    formData.append(\"token\", sessionStorage.getItem(\"token\"));\r\n    formData.append(\"user_id\", sessionStorage.getItem(\"user_id\"));\r\n    if (\r\n      this.state.SelectedType.value == \"undefined\" ||\r\n      this.state.SelectedType.value == undefined\r\n    ) {\r\n      formData.append(\"blood_group\", null);\r\n    } else {\r\n      formData.append(\"blood_group\", this.state.SelectedType.value);\r\n    }\r\n    if (this.state.dob == \" \" || this.state.dob == null) {\r\n      formData.append(\"dob\", null);\r\n    } else {\r\n      formData.append(\"dob\", this.state.dob);\r\n    }\r\n    if (\r\n      this.state.emergency_number == \" \" ||\r\n      this.state.emergency_number == null\r\n    ) {\r\n      formData.append(\"emergency_number\", null);\r\n    } else {\r\n      formData.append(\"emergency_number\", this.state.emergency_number);\r\n    }\r\n\r\n    //formData.append('dob', this.state.dob);\r\n    // formData.append('emergency_number', this.state.emergency_number);\r\n    formData.append(\"address\", this.state.address);\r\n    formData.append(\"city\", this.state.city);\r\n    formData.append(\"pincode\", this.state.pincode.value);\r\n    formData.append(\"ward_id\", this.state.ward_id);\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      body: formData,\r\n    };\r\n\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/smartcity/updateProfile\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.message === \"Update successfull\") {\r\n          this.updateSessionStorage();\r\n          toast.success(\"Profile Updated Successfully.\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () => this.props.history.push(\"/dashboard\"),\r\n          });\r\n        } else {\r\n          toast.error(\"Something went wrong, Please try again\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () => this.props.history.push(\"/dashboard\"),\r\n          });\r\n        }\r\n      });\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.style =\r\n      \"background-image: url(../../assets/headerImage.png);\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n      }),\r\n    };\r\n\r\n    fetch(\"https://scity.gmmspl.com:3000/smartcity/profile\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.message === \"Data Found\") {\r\n          // sessionStorage.setItem(\"user_id\", this.state.APIResponse.data.user_id);\r\n          // sessionStorage.setItem(\"token\", this.state.APIResponse.data.token);\r\n          // console.log(this.state.APIResponse.data.[0]['image_path'])\r\n          this.getBloodList();\r\n          this.getPinCodeList();\r\n          this.setState({\r\n            full_name: this.state.APIResponse.data[0][\"full_name\"],\r\n            // image_path: \"https://scity.gmmspl.com:3000/\" + this.state.APIResponse.data[0]['image_path'],\r\n            //image_path: this.state.APIResponse.data[0][\"image_path\"],\r\n            dob: this.state.APIResponse.data[0][\"dob\"],\r\n            //  gender: this.state.APIResponse.data[0]['gender'],\r\n            phonenumber: this.state.APIResponse.data[0][\"phonenumber\"],\r\n            email: this.state.APIResponse.data[0][\"email\"],\r\n            emergency_number: this.state.APIResponse.data[0][\r\n              \"emergency_number\"\r\n            ],\r\n            blood_group_id: this.state.APIResponse.data[0][\"blood_group_id\"],\r\n            address: this.state.APIResponse.data[0][\"address\"],\r\n            city: this.state.APIResponse.data[0][\"city\"],\r\n            state: this.state.APIResponse.data[0][\"state\"],\r\n            //  pincode: this.state.APIResponse.data[0]['pincode'],\r\n            pinCodeValue: this.state.APIResponse.data[0][\"pincode\"],\r\n            ward_name: this.state.APIResponse.data[0][\"ward_name\"],\r\n            ward_id: this.state.APIResponse.data[0][\"ward_id\"],\r\n          });\r\n          if (this.state.APIResponse.data[0]['image_path'].indexOf('https')=== -1) {\r\n              this.setState({\r\n                image_path:\"https://scity.gmmspl.com:3000/\" + this.state.APIResponse.data[0][\"image_path\"]\r\n              });\r\n            } else {\r\n              this.setState({\r\n                image_path: this.state.APIResponse.data[0][\"image_path\"],\r\n              });\r\n            }\r\n          if (this.state.address === \" \") {\r\n            this.state.address = null;\r\n          }\r\n          if (this.state.dob === 0 || this.state.dob === \"0\") {\r\n            this.state.dob = null;\r\n          }\r\n          if (\r\n            this.state.emergency_number === 0 ||\r\n            this.state.emergency_number === \"0\"\r\n          ) {\r\n            this.state.emergency_number = null;\r\n          }\r\n          const temp = {\r\n            value: this.state.pinCodeValue,\r\n            label: this.state.ward_name + \" - \" + this.state.pinCodeValue,\r\n          };\r\n          this.setState({ pincode: temp });\r\n\r\n          // }\r\n          // this.state.pinCodeValue = ((Number)(this.state.pinCodeValue));\r\n          // console.log(\"pinCodeValue = \", typeof((Number)(this.state.pinCodeValue)))\r\n          // (Number)(this.state.pincode).label = (Number)(this.state.pinCodeValue);\r\n          // this.state.pincode.value = (Number)(this.state.pinCodeValue);\r\n          //\r\n          console.log(this.state.APIResponse);\r\n        } else {\r\n          toast.error(\"Something went wrong, Please try again\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () => this.props.history.push(\"/dashboard\"),\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  getBloodList() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n      }),\r\n    };\r\n\r\n    fetch(\"https://scity.gmmspl.com:3000/smartcity/bloodgroup\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.message === \"Blood Group Data Found\") {\r\n          const options = this.state.APIResponse.data.map((d) => ({\r\n            value: d.blood_group_id,\r\n            label: d.blood_group,\r\n          }));\r\n          this.setState({ BloogGroupList: options });\r\n          if (this.state.blood_group_id != \" \") {\r\n            const tempBloodGrp = {\r\n              value: this.state.blood_group_id,\r\n              label: this.state.BloogGroupList[\r\n                parseInt(this.state.blood_group_id) - 1\r\n              ].label,\r\n            };\r\n            this.setState({ SelectedType: tempBloodGrp });\r\n          } else {\r\n            const tempBloodGrp = {\r\n              value: \"\",\r\n              label: \"Blood Group\",\r\n            };\r\n            this.setState({ SelectedType: tempBloodGrp });\r\n          }\r\n        } else {\r\n          toast.error(\"Something went wrong, Please try again\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () => this.props.history.push(\"/dashboard\"),\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  getPinCodeList() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n      }),\r\n    };\r\n\r\n    fetch(\"https://scity.gmmspl.com:3000/smartcity/pincode\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        if (this.state.APIResponse.message === \"Pincode Data Found\") {\r\n          const options = this.state.APIResponse.data.map((d) => ({\r\n            value: d.pincode,\r\n            label: d.ward_name + \" - \" + d.pincode,\r\n            ward_id: d.ward_id,\r\n          }));\r\n          this.setState({ pinCodeList: options });\r\n        } else {\r\n          toast.error(\"Something went wrong, Please try again\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            onClose: () => this.props.history.push(\"/dashboard\"),\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <ToastContainer\r\n      position=\"top-center\"\r\n      autoClose={1000}\r\n      hideProgressBar={false}\r\n      newestOnTop\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n      pauseOnHover={false}\r\n      className=\"toaster-style\"\r\n    /> */}\r\n\r\n        <Container>\r\n          <Container className=\"pt-4 pb-4\">\r\n            <Row className=\"top-margin\">\r\n              <Col xs lg=\"3\"></Col>\r\n              <Col className=\"profileimage\" md=\"auto\" lg=\"6\">\r\n                <input\r\n                  type=\"file\"\r\n                  onChange={this.handleChange}\r\n                  id=\"userImage\"\r\n                  accept=\"image/*\"\r\n                />\r\n                <label for=\"userImage\">\r\n                  <img src={this.state.image_path} class=\"round-img\" alt=\"\" />\r\n                </label>\r\n              </Col>\r\n              <Col xs lg=\"3\"></Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          <Container className=\"pt-3\">\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <PermIdentityIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-field-width-style\">\r\n                    <TextField\r\n                      id=\"input-with-icon-grid\"\r\n                      label=\"Full Name\"\r\n                      value={this.state.full_name}\r\n                      onChange={this.full_nameValidate_HMD}\r\n                      required\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          <Container className=\"pt-3\">\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <PermIdentityIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-field-width-style\">\r\n                    <TextField\r\n                      id=\"input-with-icon-grid\"\r\n                      type=\"number\"\r\n                      inputmode=\"numeric\"\r\n                      label=\"Age\"\r\n                      maxLength=\"3\"\r\n                      pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{3}\"\r\n                      value={this.state.dob}\r\n                      onChange={this.AgeValidate_SAT}\r\n                      onInput={(e) =>\r\n                        (e.target.value = e.target.value.slice(0, 3))\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          <Container className=\"pt-3\">\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <CallOutlinedIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-field-width-style\">\r\n                    <TextField\r\n                      type=\"number\"\r\n                      inputmode=\"numeric\"\r\n                      id=\"input-with-icon-grid\"\r\n                      maxLength=\"10\"\r\n                      pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{3}\"\r\n                      label=\"Phone Number\"\r\n                      value={this.state.phonenumber}\r\n                      onChange={this.phone_numberValidate_SAT}\r\n                      required\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          <Container className=\"pt-3\">\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <MailOutlineIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-field-width-style\">\r\n                    <TextField\r\n                      id=\"input-with-icon-grid\"\r\n                      label=\"Email\"\r\n                      value={this.state.email}\r\n                      onChange={this.emailValidate_SAT}\r\n                      required\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          <Container className=\"pt-3\">\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <OpacityIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-field-width-style\">\r\n                    {/* <TextField id=\"input-with-icon-grid\" label=\"Blood Group\" value={this.state.blood_group_id} onChange={this.emailValidate_SAT} /> */}\r\n                    <Select\r\n                      placeholder=\"Blood Group\"\r\n                      isSearchable={false}\r\n                      className=\"category-drop-style  category-drop-style-profile\"\r\n                      value={this.state.SelectedType}\r\n                      onChange={this.bloodGroupValidate_SAT}\r\n                      // labelKey='blood_group'\r\n                      // valueKey='blood_group_id'\r\n                      options={this.state.BloogGroupList}\r\n                      menuPlacement=\"top\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          <Container className=\"pt-3\">\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <AccountBoxIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-field-width-style\">\r\n                    <TextField\r\n                      id=\"input-with-icon-grid\"\r\n                      label=\"Address\"\r\n                      value={this.state.address}\r\n                      onChange={this.addressValidate_SAT}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          <Container className=\"pt-3\">\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <LocationCityIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-field-width-style\">\r\n                    <TextField\r\n                      id=\"input-with-icon-grid\"\r\n                      label=\"City\"\r\n                      value={this.state.city}\r\n                      onChange={this.cityValidate}\r\n                      required\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          {/* <Container>\r\n          <Row>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n              <Grid container spacing={1} alignItems=\"flex-end\">\r\n                <Grid item>\r\n                  <RoomOutlinedIcon className=\"login-icon-color\" />\r\n                </Grid>\r\n                <Grid item className=\"login-field-width-style\">\r\n                  <TextField id=\"input-with-icon-grid\" label=\"City\" value={this.state.city} onChange={this.cityValidate_HMD} required />\r\n                </Grid>\r\n              </Grid>\r\n            </Col>\r\n            <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n          </Row>\r\n        </Container> */}\r\n\r\n          <Container className=\"pt-3\">\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <RoomOutlinedIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-field-width-style\">\r\n                    <Select\r\n                           placeholder={\r\n                            <label>\r\n                             Pincode\r\n                              <span class=\"select-astric-red\"> *</span>\r\n                            </label>\r\n                          }\r\n                      isSearchable={true}\r\n                      className=\"category-drop-style drop-down-style-z-index category-drop-style-profile\"\r\n                      value={this.state.pincode}\r\n                      onChange={this.pinCodeValidate_SAT}\r\n                      options={this.state.pinCodeList}\r\n                      menuPlacement=\"top\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          <Container className=\"pt-3\">\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n              <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <CallOutlinedIcon className=\"login-icon-color\" />\r\n                  </Grid>\r\n                  <Grid item className=\"login-field-width-style\">\r\n                    <TextField\r\n                      type=\"number\"\r\n                      inputmode=\"numeric\"\r\n                      id=\"input-with-icon-grid\"\r\n                      label=\"Emergency Number\"\r\n                      value={this.state.emergency_number}\r\n                      onChange={this.emergencyNumberValidate_SAT}\r\n                      onInput={(e) =>\r\n                        (e.target.value = e.target.value.slice(0, 10))\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"3\" xl=\"3\" xxl=\"3\"></Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          <Container className=\"pt-5\">\r\n            <Row>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n              <Col\r\n                xs=\"6\"\r\n                sm=\"6\"\r\n                md=\"6\"\r\n                lg=\"4\"\r\n                xl=\"4\"\r\n                xxl=\"4\"\r\n                className=\"signup-text-message-style\"\r\n              >\r\n                <Button\r\n                  className=\"signup-button-style\"\r\n                  onClick={this.submit_SAT}\r\n                >\r\n                  {LoginHeadings.Profile_SUBMIT_HMD}\r\n                </Button>\r\n              </Col>\r\n              <Col\r\n                xs=\"6\"\r\n                sm=\"6\"\r\n                md=\"6\"\r\n                lg=\"4\"\r\n                xl=\"4\"\r\n                xxl=\"4\"\r\n                className=\"signup-text-message-style\"\r\n              >\r\n                <Button className=\"skip-button-style\">\r\n                  <Link to=\"/dashboard\" className=\"cancle-button-style\">\r\n                    {LoginHeadings.Profile_CANCEL_HMD}\r\n                  </Link>\r\n                </Button>\r\n              </Col>\r\n              <Col xs=\"0\" sm=\"0\" md=\"0\" lg=\"2\" xl=\"2\" xxl=\"2\"></Col>\r\n            </Row>\r\n          </Container>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ProfileMyProfile);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-sDI-MostDiscussed\\Collaboration-sDI-MostDiscussed.js",["1354","1355","1356","1357","1358","1359","1360"],"import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport CollaborationsHeadings from \"../../jsonFiles/CollaborationJson/collaborationDetails\";\r\nimport { MDBIcon } from \"../../../node_modules/mdbreact\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport LinesEllipsis from \"react-lines-ellipsis\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nclass CollaborationSDIMostDiscussed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shareIcons: CollaborationsHeadings.CardsDiscussion,\r\n      APIResponse: \"\",\r\n      cardCounts: 4,\r\n      DeleteSubmit: false,\r\n      DeleteDialogStatus: false,\r\n      deteledID: \"\",\r\n      totalDiscussCard :0\r\n    };\r\n    this.LoadMore_SAT = this.LoadMore_SAT.bind(this);\r\n    this.Delete = this.Delete.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllIdeas();\r\n  }\r\n\r\n  getAllIdeas() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        recordId: 1,\r\n        offset: this.state.cardCounts,\r\n        is_admin: false,\r\n      }),\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/Ideas/GetMostDiscussedIdeas\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.status === true) {\r\n          var JsonDate = this.state.APIResponse.data;\r\n           for(var cardValues in JsonDate)\r\n          {\r\n              //console.log(\"share Icons card values:\",JsonDate[cardValues].cardProfileImage);\r\n              if (JsonDate[cardValues].cardProfileImage.indexOf(\"https\") == -1) {\r\n                JsonDate[cardValues].cardProfileImage=\"https://scity.gmmspl.com:3000/\"+JsonDate[cardValues].cardProfileImage;\r\n              }\r\n          }\r\n          this.setState({\r\n            shareIcons: JsonDate,\r\n            totalDiscussCard: this.state.APIResponse.total_rows\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  LoadMore_SAT() {\r\n    if (this.state.cardCounts <= 100) {\r\n      var currentCount = this.state.cardCounts + 4;\r\n      this.state.cardCounts = currentCount;\r\n      this.getAllIdeas();\r\n    }\r\n  }\r\n\r\n  DeleteACard = () => {\r\n    // console.log(\"CardID = \", CardID);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_Id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        thread_id: this.state.deteledID,\r\n      }),\r\n    };\r\n    fetch(\"https://scity.gmmspl.com:3000/Ideas/DeleteIdea\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.status === true) {\r\n          this.DeleteDialogClose();\r\n          this.getAllIdeas();\r\n        }\r\n      });\r\n  };\r\n\r\n  UpdateACard = (CardDetails) => {\r\n    // Edit Cards Details\r\n    sessionStorage.setItem(\"threadId\", CardDetails.threadId);\r\n    // this.props.history.push(\"/UpdateSharedIdea\");\r\n  };\r\n\r\n  CardDetails = (CardID) => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login for details and to add comment\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      sessionStorage.setItem(\"threadId\", CardID.threadId);\r\n      sessionStorage.setItem(\r\n        \"ideaDetailBack\",\r\n        \"collaboration-shareDiscussIdeas\"\r\n      );\r\n      this.props.history.push(\"/collaboration-ACardDetails\");\r\n    }\r\n    // console.log(\"CardID = \", CardID);\r\n    // sessionStorage.setItem(\"threadId\", CardID.threadId);\r\n    // this.props.history.push(\"/collaboration-ACardDetails\");\r\n  };\r\n\r\n  Delete = (CardID) => {\r\n    this.setState({\r\n      DeleteSubmit: true,\r\n      DeleteDialogStatus: true,\r\n      deteledID: CardID.threadId,\r\n    });\r\n  };\r\n\r\n  DeleteDialogClose = () => {\r\n    this.setState({\r\n      DeleteDialogStatus: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"tab-card-container-style\">\r\n        <Row>\r\n          {this.state.shareIcons.map((CardValues, index) => (\r\n            <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n              <Card className=\"tab-card-style\">\r\n                <div class=\"card-top-border\"></div>\r\n                <Row className=\"pt-3\">\r\n                  <Col\r\n                    xs=\"10\"\r\n                    sm=\"10\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pl-4\"\r\n                  >\r\n                    <Card.Title\r\n                      id=\"rcorners1\"\r\n                      className=\"tab-card-heading-style\"\r\n                    >\r\n                      {CardValues.cardType}\r\n                    </Card.Title>\r\n                  </Col>\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n                    {CardValues.cardUserId ==\r\n                      sessionStorage.getItem(\"user_id\") && (\r\n                      <div>\r\n                        <MDBIcon\r\n                          icon=\"trash-alt\"\r\n                          size=\"sm\"\r\n                          className=\"card-icon-style-delete\"\r\n                          onClick={() => this.Delete(CardValues)}\r\n                        />\r\n                        {this.state.DeleteSubmit && (\r\n                          <Dialog\r\n                            open={this.state.DeleteDialogStatus}\r\n                            onClose={this.DeleteDialogClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                          >\r\n                            <DialogTitle id=\"simple-dialog-title\">\r\n                              Are you sure you want to delete post?\r\n                              <DialogActions>\r\n                                <Button\r\n                                  onClick={this.DeleteACard}\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Yes\r\n                                </Button>\r\n                                <Button\r\n                                  onClick={this.DeleteDialogClose}\r\n                                  color=\"primary\"\r\n                                  autoFocus\r\n                                >\r\n                                  No\r\n                                </Button>\r\n                              </DialogActions>\r\n                            </DialogTitle>\r\n                          </Dialog>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Card.Subtitle className=\"\">\r\n                  <Row className=\"tab-card-subject-style\">\r\n                    <Col className=\"p-0\">\r\n                      <div className=\"tab-title-div-ellipsis\">\r\n                        <span className=\"tab-title-ellipsis\">\r\n                          {CardValues.cardTitle}\r\n                      </span>\r\n                     </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Subtitle>\r\n\r\n                <Card.Body className=\"p-0\">\r\n                  <Card.Text className=\"tab-card-body-style mb-2\">\r\n                    <div className=\"tab-card-body-div-ellipsis\">\r\n                      <span className=\"tab-card-body-ellipsis\">\r\n                        {CardValues.cardDescription}\r\n                     </span>\r\n                    </div> \r\n                  </Card.Text>\r\n                  <Card.Text className=\"tab-card-body-style\">\r\n                    {CardValues.CommentCount === null && (\r\n                      <p className=\"card-comments-style\">\r\n                        <label id=\"rcorners-comment-count\">\r\n                          0 <span class=\"comments-count-style\">Comments</span>\r\n                        </label>\r\n                      </p>\r\n                    )}\r\n                    {CardValues.CommentCount != null && (\r\n                      <p className=\"card-comments-style\">\r\n                        <label id=\"rcorners-comment-count\">\r\n                          {CardValues.CommentCount}{\" \"}\r\n                          <span class=\"comments-count-style\">Comments</span>\r\n                        </label>\r\n                      </p>\r\n                    )}\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <Row className=\"pt-3 card-footer__events\">\r\n                      <Col\r\n                        xs=\"3\"\r\n                        sm=\"3\"\r\n                        md=\"3\"\r\n                        lg=\"3\"\r\n                        xl=\"3\"\r\n                        className=\"card-profile-image-col-style\"\r\n                      >\r\n                        <img\r\n                          src={CardValues.cardProfileImage}\r\n                          alt=\"\"\r\n                          class=\"card-profile-image-style\"\r\n                        />\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"5\"\r\n                        sm=\"5\"\r\n                        md=\"5\"\r\n                        lg=\"5\"\r\n                        xl=\"5\"\r\n                        className=\"card-image-imfo-style\"\r\n                      >\r\n                        <Row className=\"card-image-profile-name-style\">\r\n                          <label>{CardValues.cardPostedBy}</label>\r\n                        </Row>\r\n                        <Row className=\"card-image-imfo-row-style\">\r\n                          <label>{CardValues.cardPostedOn}</label>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"4\"\r\n                        sm=\"4\"\r\n                        md=\"4\"\r\n                        lg=\"4\"\r\n                        xl=\"4\"\r\n                        className=\"p-0 card-icon-alignment\"\r\n                      >\r\n                        <div>\r\n                          <span class=\"\">\r\n                            <MDBIcon\r\n                              far\r\n                              icon=\"eye\"\r\n                              size=\"sm\"\r\n                              className=\"card-icon-style\"\r\n                              onClick={() => this.CardDetails(CardValues)}\r\n                            />\r\n                          </span>\r\n                          <span class=\"pl-2 \">\r\n                            <MDBIcon\r\n                              icon=\"reply\"\r\n                              size=\"sm\"\r\n                              className=\"card-icon-style\"\r\n                              onClick={() => this.CardDetails(CardValues)}\r\n                            />\r\n                          </span>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n\r\n        <Row className=\"pb-5\"></Row>\r\n        <Row>\r\n          <Col xs=\"0\" sm=\"0\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n          <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n            {this.state.totalDiscussCard > this.state.cardCounts && (\r\n              <Button\r\n                className=\"login-button-style\"\r\n                onClick={this.LoadMore_SAT}\r\n              >\r\n                Load More\r\n              </Button>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"pb-5 pt-2\"></Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CollaborationSDIMostDiscussed);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-sDI-MostRecent\\Collaboration-sDI-MostRecent.js",["1361","1362","1363","1364","1365","1366","1367","1368"],"import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"./Collaboration-sDI-MostRecent.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport CollaborationsHeadings from \"../../jsonFiles/CollaborationJson/collaborationDetails\";\r\nimport { MDBIcon } from \"../../../node_modules/mdbreact\";\r\nimport LinesEllipsis from \"react-lines-ellipsis\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nclass CollaborationSDIMostRecent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shareIcons: CollaborationsHeadings.Cards,\r\n      APIResponse: \"\",\r\n      cardCounts: 4,\r\n      DeleteSubmit: false,\r\n      DeleteDialogStatus: false,\r\n      deteledID: \"\",\r\n      totalCardCount:0\r\n    };\r\n    this.LoadMore_SAT = this.LoadMore_SAT.bind(this);\r\n    this.Delete = this.Delete.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllIdeas();\r\n  }\r\n\r\n  getAllIdeas() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        recordId: 1,\r\n        offset: this.state.cardCounts,\r\n        is_admin: false,\r\n      }),\r\n    };\r\n    fetch(\"https://scity.gmmspl.com:3000/Ideas/GetIdeas\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.status === true) {\r\n          var JsonDate = this.state.APIResponse.data;\r\n           for(var cardValues in JsonDate)\r\n          {\r\n              //console.log(\"share Icons card values:\",JsonDate[cardValues].cardProfileImage);\r\n              if (JsonDate[cardValues].cardProfileImage.indexOf(\"https\") == -1) {\r\n                JsonDate[cardValues].cardProfileImage=\"https://scity.gmmspl.com:3000/\"+JsonDate[cardValues].cardProfileImage;\r\n              }\r\n          }\r\n          this.setState({\r\n            shareIcons: JsonDate,\r\n            totalCardCount:this.state.APIResponse.total_rows\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  LoadMore_SAT() {\r\n    if (this.state.cardCounts <= 100) {\r\n      var currentCount = this.state.cardCounts + 4;\r\n      this.state.cardCounts = currentCount;\r\n      this.getAllIdeas();\r\n    }\r\n  }\r\n\r\n  DeleteACard = () => {\r\n    // console.log(\"CardID = \",this.state.deteledID);\r\n    // this.DeleteDialogClose();\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_Id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        thread_id: this.state.deteledID,\r\n      }),\r\n    };\r\n    fetch(\"https://scity.gmmspl.com:3000/Ideas/DeleteIdea\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.status === true) {\r\n          this.DeleteDialogClose();\r\n          this.getAllIdeas();\r\n        }\r\n      });\r\n  };\r\n\r\n  UpdateACard = (CardDetails) => {\r\n    // Edit Cards Details\r\n    sessionStorage.setItem(\"threadId\", CardDetails.threadId);\r\n    // this.props.history.push(\"/UpdateSharedIdea\");\r\n  };\r\n\r\n  CardDetails = (CardID) => {\r\n    // console.log(\"CardID = \", CardID);\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login for details and to add comment\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      sessionStorage.setItem(\"threadId\", CardID.threadId);\r\n      sessionStorage.setItem(\r\n        \"ideaDetailBack\",\r\n        \"collaboration-shareDiscussIdeas\"\r\n      );\r\n      this.props.history.push(\"/collaboration-ACardDetails\");\r\n    }\r\n  };\r\n\r\n  Delete = (CardID) => {\r\n    this.setState({\r\n      DeleteSubmit: true,\r\n      DeleteDialogStatus: true,\r\n      deteledID: CardID.threadId,\r\n    });\r\n  };\r\n\r\n  DeleteDialogClose = () => {\r\n    this.setState({\r\n      DeleteDialogStatus: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"tab-card-container-style\">\r\n        <Row>\r\n          {this.state.shareIcons.map((CardValues, index) => (\r\n            <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\" className=\"\">\r\n              <Card className=\"tab-card-style\">\r\n                <div class=\"card-top-border\"></div>\r\n                <Row className=\"pt-3\">\r\n                  <Col\r\n                    xs=\"10\"\r\n                    sm=\"10\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pl-4\"\r\n                  >\r\n                    <Card.Title\r\n                      id=\"rcorners1\"\r\n                      className=\"tab-card-heading-style\"\r\n                    >\r\n                      {CardValues.cardType}\r\n                    </Card.Title>\r\n                  </Col>\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n                    {CardValues.cardUserId ==\r\n                      sessionStorage.getItem(\"user_id\") && (\r\n                      <div>\r\n                        <MDBIcon\r\n                          icon=\"trash-alt\"\r\n                          size=\"sm\"\r\n                          className=\"card-icon-style-delete\"\r\n                          onClick={() => this.Delete(CardValues)}\r\n                        />\r\n                        {/* <MDBIcon  icon=\"trash-alt\" size=\"sm\" className=\"card-icon-style-delete\" onClick={() => this.DeleteACard(CardValues)}/>  */}\r\n                        {this.state.DeleteSubmit && (\r\n                          <Dialog\r\n                            open={this.state.DeleteDialogStatus}\r\n                            onClose={this.DeleteDialogClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                          >\r\n                            <DialogTitle id=\"simple-dialog-title\">\r\n                              Are you sure you want to delete post?\r\n                              <DialogActions>\r\n                                <Button\r\n                                  onClick={this.DeleteACard}\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Yes\r\n                                </Button>\r\n                                <Button\r\n                                  onClick={this.DeleteDialogClose}\r\n                                  color=\"primary\"\r\n                                  autoFocus\r\n                                >\r\n                                  No\r\n                                </Button>\r\n                              </DialogActions>\r\n                            </DialogTitle>\r\n                          </Dialog>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Card.Subtitle className=\"\">\r\n                  <Row className=\"tab-card-subject-style\">\r\n                    <Col className=\"p-0\">\r\n                      <div className=\"tab-title-div-ellipsis\">\r\n                        <span className=\"tab-title-ellipsis\">\r\n                          {CardValues.cardTitle}\r\n                      </span>\r\n                     </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Subtitle>\r\n\r\n                <Card.Body className=\"p-0\">\r\n                  <Card.Text className=\"tab-card-body-style mb-2\">\r\n                    <div className=\"tab-card-body-div-ellipsis\">\r\n                      <span className=\"tab-card-body-ellipsis\">\r\n                        {CardValues.cardDescription}\r\n                     </span>\r\n                    </div> \r\n                  </Card.Text>\r\n                  <Card.Text className=\"tab-card-body-style\">\r\n                    {CardValues.CommentCount === null && (\r\n                      <p className=\"card-comments-style\">\r\n                        <label id=\"rcorners-comment-count\">\r\n                          0 <span class=\"comments-count-style\">Comments</span>\r\n                        </label>\r\n                      </p>\r\n                    )}\r\n                    {CardValues.CommentCount != null && (\r\n                      <p className=\"card-comments-style\">\r\n                        <label id=\"rcorners-comment-count\">\r\n                          {CardValues.CommentCount}{\" \"}\r\n                          <span class=\"comments-count-style\">Comments</span>\r\n                        </label>\r\n                      </p>\r\n                    )}\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <Row className=\"pt-3 card-footer__events\">\r\n                      <Col\r\n                        xs=\"3\"\r\n                        sm=\"3\"\r\n                        md=\"3\"\r\n                        lg=\"3\"\r\n                        xl=\"3\"\r\n                        className=\"card-profile-image-col-style\"\r\n                      >\r\n                        <img\r\n                          src={CardValues.cardProfileImage}\r\n                          alt=\"\"\r\n                          class=\"card-profile-image-style\"\r\n                        />\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"5\"\r\n                        sm=\"5\"\r\n                        md=\"5\"\r\n                        lg=\"5\"\r\n                        xl=\"5\"\r\n                        className=\"card-image-imfo-style pr-0\"\r\n                      >\r\n                        <Row className=\"card-image-profile-name-style\">\r\n                          <label>{CardValues.cardPostedBy}</label>\r\n                        </Row>\r\n                        <Row className=\"card-image-imfo-row-style\">\r\n                          <label>{CardValues.cardPostedOn}</label>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"4\"\r\n                        sm=\"4\"\r\n                        md=\"4\"\r\n                        lg=\"4\"\r\n                        xl=\"4\"\r\n                        className=\"p-0 card-icon-alignment\"\r\n                      >\r\n                        <div>\r\n                          <span class=\"\">\r\n                            <MDBIcon\r\n                              far\r\n                              icon=\"eye\"\r\n                              size=\"sm\"\r\n                              className=\"card-icon-style\"\r\n                              onClick={() => this.CardDetails(CardValues)}\r\n                            />\r\n                          </span>\r\n                          <span class=\"pl-2 \">\r\n                            <MDBIcon\r\n                              icon=\"reply\"\r\n                              size=\"sm\"\r\n                              className=\"card-icon-style\"\r\n                              onClick={() => this.CardDetails(CardValues)}\r\n                            />\r\n                          </span>\r\n                        </div>\r\n                      </Col>\r\n                      {/* <Col xs=\"3\" sm=\"3\" md=\"3\" lg=\"3\" xl=\"3\" className=\"p-0 card-icon-alignment-reply\">\r\n                <MDBIcon icon=\"reply\" size=\"sm\" className=\"card-icon-style\" onClick={() => this.CardDetails(CardValues)}/>\r\n                </Col> */}\r\n                    </Row>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n\r\n        <Row className=\"pb-5\"></Row>\r\n        <Row>\r\n          <Col xs=\"0\" sm=\"0\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n          <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n            {this.state.totalCardCount > this.state.cardCounts && (\r\n              <Button\r\n                className=\"login-button-style\"\r\n                onClick={this.LoadMore_SAT}\r\n              >\r\n                Load More\r\n              </Button>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"pb-5 pt-2\"></Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CollaborationSDIMostRecent);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\component\\Collaboration-sDI-MostTrending\\Collaboration-sDI-MostTrending.js",["1369","1370","1371","1372","1373","1374","1375"],"import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport CollaborationsHeadings from \"../../jsonFiles/CollaborationJson/collaborationDetails\";\r\nimport { MDBIcon } from \"../../../node_modules/mdbreact\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport LinesEllipsis from \"react-lines-ellipsis\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nclass CollaborationSDIMostTrending extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shareIcons: CollaborationsHeadings.Cards,\r\n      APIResponse: \"\",\r\n      cardCounts: 4,\r\n      DeleteSubmit: false,\r\n      DeleteDialogStatus: false,\r\n      deteledID: \"\",\r\n      totalTrendingCard:0\r\n    };\r\n    this.LoadMore_SAT = this.LoadMore_SAT.bind(this);\r\n    this.Delete = this.Delete.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllIdeas();\r\n  }\r\n\r\n  getAllIdeas() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        recordId: 1,\r\n        offset: this.state.cardCounts,\r\n        is_admin: false,\r\n      }),\r\n    };\r\n    fetch(\r\n      \"https://scity.gmmspl.com:3000/Ideas/GetTrendingIdeas\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.status === true) {\r\n          var JsonDate = this.state.APIResponse.data;\r\n           for(var cardValues in JsonDate)\r\n          {\r\n              //console.log(\"share Icons card values:\",JsonDate[cardValues].cardProfileImage);\r\n              if (JsonDate[cardValues].cardProfileImage.indexOf(\"https\") == -1) {\r\n                JsonDate[cardValues].cardProfileImage=\"https://scity.gmmspl.com:3000/\"+JsonDate[cardValues].cardProfileImage;\r\n              }\r\n          }\r\n          this.setState({\r\n            shareIcons: JsonDate,\r\n            totalTrendingCard:this.state.APIResponse.total_rows\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  DeleteACard = () => {\r\n    // console.log(\"CardID = \", CardID);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_Id: sessionStorage.getItem(\"user_id\"),\r\n        token: sessionStorage.getItem(\"token\"),\r\n        thread_id: this.state.deteledID,\r\n      }),\r\n    };\r\n    fetch(\"https://scity.gmmspl.com:3000/Ideas/DeleteIdea\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          APIResponse: data,\r\n        });\r\n        // console.log(\"APIResponse = \", this.state.APIResponse);\r\n        if (this.state.APIResponse.status === true) {\r\n          this.DeleteDialogClose();\r\n          this.getAllIdeas();\r\n        }\r\n      });\r\n  };\r\n\r\n  UpdateACard = (CardDetails) => {\r\n    // Edit Cards Details\r\n    sessionStorage.setItem(\"threadId\", CardDetails.threadId);\r\n    // this.props.history.push(\"/UpdateSharedIdea\");\r\n  };\r\n\r\n  CardDetails = (CardID) => {\r\n    if (\r\n      sessionStorage.getItem(\"user_id\") == null ||\r\n      sessionStorage.getItem(\"user_id\") == undefined\r\n    ) {\r\n      toast.warn(\"Please Login for details and to add comment\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => this.props.history.push(\"/\"),\r\n      });\r\n    } else {\r\n      sessionStorage.setItem(\"threadId\", CardID.threadId);\r\n      sessionStorage.setItem(\r\n        \"ideaDetailBack\",\r\n        \"collaboration-shareDiscussIdeas\"\r\n      );\r\n      this.props.history.push(\"/collaboration-ACardDetails\");\r\n    }\r\n\r\n    // console.log(\"CardID = \", CardID);\r\n    // sessionStorage.setItem(\"threadId\", CardID.threadId);\r\n    // this.props.history.push(\"/collaboration-ACardDetails\");\r\n  };\r\n\r\n  LoadMore_SAT() {\r\n    if (this.state.cardCounts <= 100) {\r\n      var currentCount = this.state.cardCounts + 4;\r\n      this.state.cardCounts = currentCount;\r\n      this.getAllIdeas();\r\n    }\r\n  }\r\n\r\n  Delete = (CardID) => {\r\n    this.setState({\r\n      DeleteSubmit: true,\r\n      DeleteDialogStatus: true,\r\n      deteledID: CardID.threadId,\r\n    });\r\n  };\r\n\r\n  DeleteDialogClose = () => {\r\n    this.setState({\r\n      DeleteDialogStatus: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"tab-card-container-style\">\r\n        <Row>\r\n          {this.state.shareIcons.map((CardValues, index) => (\r\n            <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n              <Card className=\"tab-card-style \">\r\n                <div class=\"card-top-border\"></div>\r\n                <Row className=\"pt-3\">\r\n                  <Col\r\n                    xs=\"10\"\r\n                    sm=\"10\"\r\n                    md=\"10\"\r\n                    lg=\"10\"\r\n                    xl=\"10\"\r\n                    xxl=\"10\"\r\n                    className=\"pl-4\"\r\n                  >\r\n                    <Card.Title\r\n                      id=\"rcorners1\"\r\n                      className=\"tab-card-heading-style\"\r\n                    >\r\n                      {CardValues.cardType}\r\n                    </Card.Title>\r\n                  </Col>\r\n                  <Col xs=\"2\" sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\" xxl=\"2\">\r\n                    {CardValues.cardUserId ==\r\n                      sessionStorage.getItem(\"user_id\") && (\r\n                      <div>\r\n                        <MDBIcon\r\n                          icon=\"trash-alt\"\r\n                          size=\"sm\"\r\n                          className=\"card-icon-style-delete\"\r\n                          onClick={() => this.Delete(CardValues)}\r\n                        />\r\n                        {this.state.DeleteSubmit && (\r\n                          <Dialog\r\n                            open={this.state.DeleteDialogStatus}\r\n                            onClose={this.DeleteDialogClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                          >\r\n                            <DialogTitle id=\"simple-dialog-title\">\r\n                              Are you sure you want to delete post?\r\n                              <DialogActions>\r\n                                <Button\r\n                                  onClick={this.DeleteACard}\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Yes\r\n                                </Button>\r\n                                <Button\r\n                                  onClick={this.DeleteDialogClose}\r\n                                  color=\"primary\"\r\n                                  autoFocus\r\n                                >\r\n                                  No\r\n                                </Button>\r\n                              </DialogActions>\r\n                            </DialogTitle>\r\n                          </Dialog>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Card.Subtitle className=\"\">\r\n                  <Row className=\"tab-card-subject-style\">\r\n                    <Col className=\"p-0\">\r\n                      <div className=\"tab-title-div-ellipsis\">\r\n                        <span className=\"tab-title-ellipsis\">\r\n                          {CardValues.cardTitle}\r\n                      </span>\r\n                     </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Subtitle>\r\n\r\n                <Card.Body className=\"p-0\">\r\n                  <Card.Text className=\"tab-card-body-style mb-2\">\r\n                    <div className=\"tab-card-body-div-ellipsis\">\r\n                      <span className=\"tab-card-body-ellipsis\">\r\n                        {CardValues.cardDescription}\r\n                     </span>\r\n                    </div> \r\n                  </Card.Text>\r\n\r\n                  <Card.Text className=\"tab-card-body-style  mb-2\">\r\n                    {CardValues.CommentCount === null && (\r\n                      <p className=\"card-comments-style\">\r\n                        <label id=\"rcorners-comment-count\">\r\n                          0 <span class=\"comments-count-style\">Comments</span>\r\n                        </label>\r\n                      </p>\r\n                    )}\r\n                    {CardValues.CommentCount != null && (\r\n                      <p className=\"card-comments-style\">\r\n                        <label id=\"rcorners-comment-count\">\r\n                          {CardValues.CommentCount}{\" \"}\r\n                          <span class=\"comments-count-style\">Comments</span>\r\n                        </label>\r\n                      </p>\r\n                    )}\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <Row className=\"pt-3 card-footer__events\">\r\n                      <Col\r\n                        xs=\"3\"\r\n                        sm=\"3\"\r\n                        md=\"3\"\r\n                        lg=\"3\"\r\n                        xl=\"3\"\r\n                        className=\"card-profile-image-col-style\"\r\n                      >\r\n                        <img\r\n                          src={CardValues.cardProfileImage}\r\n                          alt=\"\"\r\n                          class=\"card-profile-image-style\"\r\n                        />\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"5\"\r\n                        sm=\"5\"\r\n                        md=\"5\"\r\n                        lg=\"5\"\r\n                        xl=\"5\"\r\n                        className=\"card-image-imfo-style\"\r\n                      >\r\n                        <Row className=\"card-image-profile-name-style\">\r\n                          <label>{CardValues.cardPostedBy}</label>\r\n                        </Row>\r\n                        <Row className=\"card-image-imfo-row-style\">\r\n                          <label>{CardValues.cardPostedOn}</label>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col\r\n                        xs=\"4\"\r\n                        sm=\"4\"\r\n                        md=\"4\"\r\n                        lg=\"4\"\r\n                        xl=\"4\"\r\n                        className=\"p-0 card-icon-alignment\"\r\n                      >\r\n                        <div>\r\n                          <span class=\"\">\r\n                            <MDBIcon\r\n                              far\r\n                              icon=\"eye\"\r\n                              size=\"sm\"\r\n                              className=\"card-icon-style\"\r\n                              onClick={() => this.CardDetails(CardValues)}\r\n                            />\r\n                          </span>\r\n                          <span class=\"pl-2 \">\r\n                            <MDBIcon\r\n                              icon=\"reply\"\r\n                              size=\"sm\"\r\n                              className=\"card-icon-style\"\r\n                              onClick={() => this.CardDetails(CardValues)}\r\n                            />\r\n                          </span>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n\r\n        <Row className=\"pb-5\"></Row>\r\n        <Row>\r\n          <Col xs=\"0\" sm=\"0\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\"></Col>\r\n          <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n            {this.state.totalTrendingCard > this.state.cardCounts && (\r\n              <Button\r\n                className=\"login-button-style\"\r\n                onClick={this.LoadMore_SAT}\r\n              >\r\n                Load More\r\n              </Button>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"pb-5 pt-2\"></Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CollaborationSDIMostTrending);\r\n","H:\\react.js\\Smart%20Cities%20V0.1\\SmartCityNewUI\\smart-city-project\\src\\ActionProvider.js",["1376","1377","1378","1379","1380","1381","1382","1383","1384","1385","1386","1387","1388","1389"],"\r\n\r\n//import { withRouter } from 'react-router-dom';\r\nimport React from 'react'\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nclass ActionProvider {\r\n  constructor(createChatBotMessage, setStateFunc,createClientMessage) {\r\n    this.createChatBotMessage = createChatBotMessage;\r\n    this.setState = setStateFunc;\r\n    this.createClientMessage = createClientMessage;\r\n    this.state = {\r\n      APIResponse: \"\",\r\n    }\r\n  }\r\n\r\n  greet() {\r\n    const greetingMessage = this.createChatBotMessage(\"Hello\")\r\n    this.updateChatbotState(greetingMessage)\r\n  }\r\n\r\n  updateChatbotState(message) {\r\n\r\n// NOTE: This function is set in the constructor, and is passed in      // from the top level Chatbot component. The setState function here     // actually manipulates the top level state of the Chatbot, so it's     // important that we make sure that we preserve the previous state.\r\n\r\n\r\n   this.setState(prevState => ({\r\n    \t...prevState, messages: [...prevState.messages, message]\r\n    }))\r\n  }\r\n\r\n  handleRootMainMenu = (id) => {\r\n    sessionStorage.removeItem(\"chatbot\");\r\n    const message = this.createChatBotMessage(\r\n      \"We'll be glad to help you! Please select the options\",\r\n      {\r\n        widget: \"rootOptions\",\r\n      }\r\n    );\r\n    this.updateChatbotState(message);\r\n  };\r\n\r\n\r\n  handleCollaborationList = () => {\r\n    sessionStorage.removeItem(\"chatbot\");\r\n    const message = this.createClientMessage(\r\n      \"Incident Report has been selected\",\r\n      {\r\n        widget: \"CollaborationOptions\",\r\n      }\r\n    );\r\n    const message1 = this.createChatBotMessage(\r\n      \"You have selected the Incident Report.Please click on the below options\",\r\n      {\r\n        widget: \"CollaborationOptions\",\r\n      }\r\n    );\r\n    this.updateChatbotState(message);\r\n    this.updateChatbotState(message1);\r\n  };\r\n\r\n  handleShareDiscuss = () => {\r\n    // const message = this.createChatBotMessage(\r\n    //   \"Share And Discuss - Thiruvananthapuram City App Connect is a platform for collaboration between corporates and the Pune Municipal Corporation (PMC). The objective is to institutionalize a forum for industry and government to work collectively along with NGOs and citizens, towards development of the city.\",\r\n    //   {\r\n    //     widget: \"ShareDiscuss\",\r\n    //   }\r\n    // );\r\n    // this.updateChatbotState(message);\r\n   //\r\n   //\r\n    //alert(\"test\");\r\n //   this.props.history.push(\"/Dashboard\");\r\n//return( event =>  window.location.href='/dashboard')\r\n//return(<Redirect to='/dashboard' />)\r\n};\r\n\r\n  handlePollSurvey = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"Polls And Survey- Thiruvananthapuram City App Connect is a platform for collaboration between corporates and the Pune Municipal Corporation (PMC). The objective is to institutionalize a forum for industry and government to work collectively along with NGOs and citizens, towards development of the city.\",\r\n      {\r\n        widget: \"PollSurvey\",\r\n      }\r\n    );\r\n\r\n    this.updateChatbotState(message);\r\n  };\r\n\r\n  handleDiscussionForum = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"Discussion Forum- Thiruvananthapuram City App Connect is a platform for collaboration between corporates and the Pune Municipal Corporation (PMC). The objective is to institutionalize a forum for industry and government to work collectively along with NGOs and citizens, towards development of the city.\",\r\n      {\r\n        widget: \"DiscussionForum\",\r\n      }\r\n    );\r\n    this.updateChatbotState(message);\r\n  };\r\n\r\n  handleVolunteer = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"Become a volunteer- Thiruvananthapuram City App Connect is a platform for collaboration between corporates and the Pune Municipal Corporation (PMC). The objective is to institutionalize a forum for industry and government to work collectively along with NGOs and citizens, towards development of the city.\",\r\n      {\r\n        widget: \"BecomeVolunteer\",\r\n      }\r\n    );\r\n    this.updateChatbotState(message);\r\n  };\r\n\r\n  handleJoinCommunity = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"Join A Community- Thiruvananthapuram City App Connect is a platform for collaboration between corporates and the Pune Municipal Corporation (PMC). The objective is to institutionalize a forum for industry and government to work collectively along with NGOs and citizens, towards development of the city.\",\r\n      {\r\n        widget: \"JoinCommunity\",\r\n      }\r\n    );\r\n    this.updateChatbotState(message);\r\n  };\r\n\r\n  handleComplainManagement = () => {\r\n    sessionStorage.removeItem(\"chatbot\");\r\n    const message = this.createClientMessage(\r\n      \"Complaint Management has been selected \",\r\n      {\r\n        widget: \"ComplainManagement\",\r\n      }\r\n    );\r\n    const message1 = this.createChatBotMessage(\r\n      \"You have selected the Complaint Management.Please click on the below options\",\r\n      {\r\n        widget: \"ComplainManagement\",\r\n      }\r\n    );\r\n    this.updateChatbotState(message);\r\n    this.updateChatbotState(message1);\r\n  }\r\n\r\n  handleSearchComplain = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"Search A Complain - Pune City Connect is a platform for Manage and track complaints of PMC services and property. The objective is to Log a complaint, Search logged complaint and track a complaint status to check the progress towards development of the city.\",\r\n      {\r\n        widget: \"SearchComplain\",\r\n      }\r\n    );\r\n    this.updateChatbotState(message);\r\n  };\r\n\r\n  handleIncidentStatus = () => {\r\n    sessionStorage.setItem(\"chatbot\",\"incidentbot\");\r\n    if (sessionStorage.getItem(\"user_id\") == null || sessionStorage.getItem(\"user_id\") == undefined){\r\n      toast.warn(\"Please Login to view incident status.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => window.location.href='/',\r\n      });\r\n    }\r\n    else{\r\n    const message = this.createClientMessage(\r\n      \"View Incident Status has been selected\",\r\n      {\r\n        widget: \"IncidentStatus\",\r\n      }\r\n    );\r\n    const message1 = this.createChatBotMessage(\r\n      \"Please type the Incident ID to view the status of the report.\",\r\n      {\r\n        widget: \"IncidentStatus\",\r\n      }\r\n    );\r\n   \r\n    this.updateChatbotState(message);\r\n    this.updateChatbotState(message1);\r\n  }\r\n  };\r\n \r\n\r\n\r\n  handleIncidentStatusAPI = (text) => {\r\n    if (sessionStorage.getItem(\"user_id\") == null || sessionStorage.getItem(\"user_id\") == undefined){\r\n      toast.warn(\"Please Login to view incident status.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => window.location.href='/',\r\n      });\r\n    }\r\n    else{\r\n    if(text!=null && text!=\"\" && text!=\" \"){\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        {\r\n          \"user_id\": sessionStorage.getItem(\"user_id\"),\r\n          \"token\": sessionStorage.getItem(\"token\"),\r\n          \"incident_id\": text\r\n        }\r\n      )\r\n    };\r\n    fetch('https://scity.gmmspl.com:3000/incident/searchincident', requestOptions)\r\n    .then(response => response.json())\r\n    .then(\r\n      (data) => {\r\n       if (data.message === \"Data Found\") {\r\n          const message = this.createChatBotMessage(\r\n            \"You have requested status report for the Incident id: \"+text+\" Status: \"+data.data[0].incident_status_type,\r\n            {\r\n              widget: \"IncidentStatus\",\r\n            }\r\n          );\r\n          this.updateChatbotState(message);\r\n       }\r\n       else {\r\n          const message = this.createChatBotMessage(\r\n            \"Data not found\",\r\n            {\r\n              widget: \"IncidentStatus\",\r\n            }\r\n          );\r\n          this.updateChatbotState(message);\r\n       }\r\n      },\r\n  );}else{\r\n    const message = this.createChatBotMessage(\r\n      \"Please enter Incident id\",\r\n      {\r\n        widget: \"ComplainStatus\",\r\n      }\r\n    );\r\n    this.updateChatbotState(message);\r\n\r\n  }\r\n}\r\n\r\n  };\r\n\r\n\r\n  handleComplainStatus = () => {\r\n    sessionStorage.setItem(\"chatbot\",\"complaintbot\");\r\n    if (sessionStorage.getItem(\"user_id\") == null || sessionStorage.getItem(\"user_id\") == undefined){\r\n      toast.warn(\"Please Login to view complaint status.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => window.location.href='/',\r\n      });\r\n    }\r\n    else{\r\n    const message = this.createClientMessage(\r\n      \"View Complaint Status has been selected\",\r\n      {\r\n        widget: \"ComplainStatus\",\r\n      }\r\n    );\r\n    const message1 = this.createChatBotMessage(\r\n      \"Please type the Complaint ID to view the status of the report.\",\r\n      {\r\n        widget: \"ComplainStatus\",\r\n      }\r\n    );\r\n    this.updateChatbotState(message);\r\n    this.updateChatbotState(message1);\r\n  }\r\n  };\r\n\r\n  handleComplainStatusAPI = (text) => {\r\n    if (sessionStorage.getItem(\"user_id\") == null || sessionStorage.getItem(\"user_id\") == undefined){\r\n      toast.warn(\"Please Login to view complaint status.\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => window.location.href='/',\r\n      });\r\n    }\r\n    else{\r\n    if(text!=null && text!=\"\" && text!=\" \"){\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        {\r\n          \"user_id\": sessionStorage.getItem(\"user_id\"),\r\n          \"token\": sessionStorage.getItem(\"token\"),\r\n          \"thread_id\": text\r\n        }\r\n      )\r\n    };\r\n    fetch('https://scity.gmmspl.com:3000/complaint/searchComplaint', requestOptions)\r\n    .then(response => response.json())\r\n    .then(\r\n      (data) => {\r\n       if (data.message === \"Data Found\") {\r\n          const message = this.createChatBotMessage(\r\n            \"You have requested status report for the complaint id: \"+text+\" Status: \"+data.data[0].status,\r\n            {\r\n              widget: \"ComplainStatus\",\r\n            }\r\n          );\r\n          this.updateChatbotState(message);\r\n       }\r\n       else {\r\n          const message = this.createChatBotMessage(\r\n            \"Data not found\",\r\n            {\r\n              widget: \"ComplainStatus\",\r\n            }\r\n          );\r\n          this.updateChatbotState(message);\r\n       }\r\n      },\r\n  );}else{\r\n    const message = this.createChatBotMessage(\r\n      \"Please enter Complaint id\",\r\n      {\r\n        widget: \"ComplainStatus\",\r\n      }\r\n    );\r\n    this.updateChatbotState(message);\r\n\r\n  }\r\n  }\r\n  };\r\n\r\n  // handleLogComplain = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Log A Complain- Pune City Connect is a platform for Manage and track complaints of PMC services and property. The objective is to Log a complaint, Search logged complaint and track a complaint status to check the progress towards development of the city.\",\r\n  //     {\r\n  //       widget: \"LogComplain\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  handleCitizenService = () => {\r\n    sessionStorage.removeItem(\"chatbot\");\r\n    const message = this.createClientMessage(\r\n      \"Citizen Services has been selected\",\r\n      {\r\n        widget: \"CitizenServices\",\r\n      }\r\n    );\r\n    const message1 = this.createChatBotMessage(\r\n      \"You have selected Citizen Services.Please click on the below options\",\r\n      {\r\n        widget: \"CitizenServices\",\r\n      }\r\n    );\r\n    this.updateChatbotState(message);\r\n    this.updateChatbotState(message1);\r\n  };\r\n\r\n\r\n  // handlePropertyTax = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Property Tax - Pune City connect is a platform for various kind of services for the citizens of pune such as Property Tax, Water Tax, Birth and Death Records, Site Plan, Zone Certificate, Property Tax NOC, Ready Reckoner Rate, Open Data, Request for Self Assessment, Doorstep, DBT, Tree Cutting Services, Slum Tax Billing Services.\",\r\n  //     {\r\n  //       widget: \"CommonReturn\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleWaterTax = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Water Tax - Pune City connect is a platform for various kind of services for the citizens of pune such as Property Tax, Water Tax, Birth and Death Records, Site Plan, Zone Certificate, Property Tax NOC, Ready Reckoner Rate, Open Data, Request for Self Assessment, Doorstep, DBT, Tree Cutting Services, Slum Tax Billing Services.\",\r\n  //     {\r\n  //       widget: \"CommonReturn\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleBirthRecord = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Birth Record - Pune City connect is a platform for various kind of services for the citizens of pune such as Property Tax, Water Tax, Birth and Death Records, Site Plan, Zone Certificate, Property Tax NOC, Ready Reckoner Rate, Open Data, Request for Self Assessment, Doorstep, DBT, Tree Cutting Services, Slum Tax Billing Services.\",\r\n  //     {\r\n  //       widget: \"CommonReturn\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleDeathRecord = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Death Record - Pune City connect is a platform for various kind of services for the citizens of pune such as Property Tax, Water Tax, Birth and Death Records, Site Plan, Zone Certificate, Property Tax NOC, Ready Reckoner Rate, Open Data, Request for Self Assessment, Doorstep, DBT, Tree Cutting Services, Slum Tax Billing Services.\",\r\n  //     {\r\n  //       widget: \"CommonReturn\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleSitePlan = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Site Plan - Pune City connect is a platform for various kind of services for the citizens of pune such as Property Tax, Water Tax, Birth and Death Records, Site Plan, Zone Certificate, Property Tax NOC, Ready Reckoner Rate, Open Data, Request for Self Assessment, Doorstep, DBT, Tree Cutting Services, Slum Tax Billing Services.\",\r\n  //     {\r\n  //       widget: \"CommonReturn\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleZoneCertificate = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Zone Certificate - Pune City connect is a platform for various kind of services for the citizens of pune such as Property Tax, Water Tax, Birth and Death Records, Site Plan, Zone Certificate, Property Tax NOC, Ready Reckoner Rate, Open Data, Request for Self Assessment, Doorstep, DBT, Tree Cutting Services, Slum Tax Billing Services.\",\r\n  //     {\r\n  //       widget: \"CommonReturn\",\r\n  //     }\r\n  //   )\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleMarriageCertificate = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Marriage Certificate - Pune City connect is a platform for various kind of services for the citizens of pune such as Property Tax, Water Tax, Birth and Death Records, Site Plan, Zone Certificate, Property Tax NOC, Ready Reckoner Rate, Open Data, Request for Self Assessment, Doorstep, DBT, Tree Cutting Services, Slum Tax Billing Services.\",\r\n  //     {\r\n  //       widget: \"CommonReturn\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleGasConnection = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Gas Connection - Pune City connect is a platform for various kind of services for the citizens of pune such as Property Tax, Water Tax, Birth and Death Records, Site Plan, Zone Certificate, Property Tax NOC, Ready Reckoner Rate, Open Data, Request for Self Assessment, Doorstep, DBT, Tree Cutting Services, Slum Tax Billing Services.\",\r\n  //     {\r\n  //       widget: \"CommonReturn\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleElectricityConnection = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Electricity Connection - Pune City connect is a platform for various kind of services for the citizens of pune such as Property Tax, Water Tax, Birth and Death Records, Site Plan, Zone Certificate, Property Tax NOC, Ready Reckoner Rate, Open Data, Request for Self Assessment, Doorstep, DBT, Tree Cutting Services, Slum Tax Billing Services.\",\r\n  //     {\r\n  //       widget: \"CommonReturn\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleNeighbourhoodCrime = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Neighbourhood Crime - Pune City connect is a platform for various kind of services for the citizens of pune such as Property Tax, Water Tax, Birth and Death Records, Site Plan, Zone Certificate, Property Tax NOC, Ready Reckoner Rate, Open Data, Request for Self Assessment, Doorstep, DBT, Tree Cutting Services, Slum Tax Billing Services.\",\r\n  //     {\r\n  //       widget: \"CommonReturn\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleNearMe = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Near Me - Pune City Connect is a platform for various kind of available PMC services near my location like Blood Bank, Hositl, PMC Office, Fire Station, Police Station, Wards, Garbage Bin, Public Toilet, Property, Government Office, Heritage Site, Restaurants, Theatres, etc.\",\r\n  //     {\r\n  //       widget: \"NearMeDetails\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleBloodBank = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Blood Bank - Pune City Connect is a platform for various kind of available PMC services near my location like Blood Bank, Hositl, PMC Office, Fire Station, Police Station, Wards, Garbage Bin, Public Toilet, Property, Government Office, Heritage Site, Restaurants, Theatres, etc.\",\r\n  //     {\r\n  //       widget: \"NearMeLink\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleHospital = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Hospital - Pune City Connect is a platform for various kind of available PMC services near my location like Blood Bank, Hositl, PMC Office, Fire Station, Police Station, Wards, Garbage Bin, Public Toilet, Property, Government Office, Heritage Site, Restaurants, Theatres, etc.\",\r\n  //     {\r\n  //       widget: \"NearMeLink\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handlePMCOffice = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"PMC Office - Pune City Connect is a platform for various kind of available PMC services near my location like Blood Bank, Hositl, PMC Office, Fire Station, Police Station, Wards, Garbage Bin, Public Toilet, Property, Government Office, Heritage Site, Restaurants, Theatres, etc.\",\r\n  //     {\r\n  //       widget: \"NearMeLink\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleFireStation = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Fire Station - Pune City Connect is a platform for various kind of available PMC services near my location like Blood Bank, Hositl, PMC Office, Fire Station, Police Station, Wards, Garbage Bin, Public Toilet, Property, Government Office, Heritage Site, Restaurants, Theatres, etc.\",\r\n  //     {\r\n  //       widget: \"NearMeLink\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handlePoliceStation = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Police Station - Pune City Connect is a platform for various kind of available PMC services near my location like Blood Bank, Hositl, PMC Office, Fire Station, Police Station, Wards, Garbage Bin, Public Toilet, Property, Government Office, Heritage Site, Restaurants, Theatres, etc.\",\r\n  //     {\r\n  //       widget: \"NearMeLink\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleWards = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Wards - Pune City Connect is a platform for various kind of available PMC services near my location like Blood Bank, Hositl, PMC Office, Fire Station, Police Station, Wards, Garbage Bin, Public Toilet, Property, Government Office, Heritage Site, Restaurants, Theatres, etc.\",\r\n  //     {\r\n  //       widget: \"NearMeLink\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleGarbageBin = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Garbage Bin - Pune City Connect is a platform for various kind of available PMC services near my location like Blood Bank, Hositl, PMC Office, Fire Station, Police Station, Wards, Garbage Bin, Public Toilet, Property, Government Office, Heritage Site, Restaurants, Theatres, etc.\",\r\n  //     {\r\n  //       widget: \"NearMeLink\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handlePublicToilets = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Public Toilets - Pune City Connect is a platform for various kind of available PMC services near my location like Blood Bank, Hositl, PMC Office, Fire Station, Police Station, Wards, Garbage Bin, Public Toilet, Property, Government Office, Heritage Site, Restaurants, Theatres, etc.\",\r\n  //     {\r\n  //       widget: \"NearMeLink\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleElectricityOffices = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Electricity Offices - Pune City Connect is a platform for various kind of available PMC services near my location like Blood Bank, Hositl, PMC Office, Fire Station, Police Station, Wards, Garbage Bin, Public Toilet, Property, Government Office, Heritage Site, Restaurants, Theatres, etc.\",\r\n  //     {\r\n  //       widget: \"NearMeLink\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleWaterOffices = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Water Offices - Pune City Connect is a platform for various kind of available PMC services near my location like Blood Bank, Hositl, PMC Office, Fire Station, Police Station, Wards, Garbage Bin, Public Toilet, Property, Government Office, Heritage Site, Restaurants, Theatres, etc.\",\r\n  //     {\r\n  //       widget: \"NearMeLink\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handlePostOffices = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Post Offices - Pune City Connect is a platform for various kind of available PMC services near my location like Blood Bank, Hositl, PMC Office, Fire Station, Police Station, Wards, Garbage Bin, Public Toilet, Property, Government Office, Heritage Site, Restaurants, Theatres, etc.\",\r\n  //     {\r\n  //       widget: \"NearMeLink\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleMuncipalOffices = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Muncipal Offices - Pune City Connect is a platform for various kind of available PMC services near my location like Blood Bank, Hositl, PMC Office, Fire Station, Police Station, Wards, Garbage Bin, Public Toilet, Property, Government Office, Heritage Site, Restaurants, Theatres, etc.\",\r\n  //     {\r\n  //       widget: \"NearMeLink\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleIncomeTaxOffices = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Income Tax Offices - Pune City Connect is a platform for various kind of available PMC services near my location like Blood Bank, Hositl, PMC Office, Fire Station, Police Station, Wards, Garbage Bin, Public Toilet, Property, Government Office, Heritage Site, Restaurants, Theatres, etc.\",\r\n  //     {\r\n  //       widget: \"NearMeLink\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleGovtOffices = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Govt. Offices - Pune City Connect is a platform for various kind of available PMC services near my location like Blood Bank, Hositl, PMC Office, Fire Station, Police Station, Wards, Garbage Bin, Public Toilet, Property, Government Office, Heritage Site, Restaurants, Theatres, etc.\",\r\n  //     {\r\n  //       widget: \"NearMeLink\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleReportedIssues = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Reported Issues - Pune City Connect is a platform for various kind of available PMC services near my location like Blood Bank, Hositl, PMC Office, Fire Station, Police Station, Wards, Garbage Bin, Public Toilet, Property, Government Office, Heritage Site, Restaurants, Theatres, etc.\",\r\n  //     {\r\n  //       widget: \"NearMeLink\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleBusStops = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Bus Stops - Pune City Connect is a platform for various kind of available PMC services near my location like Blood Bank, Hositl, PMC Office, Fire Station, Police Station, Wards, Garbage Bin, Public Toilet, Property, Government Office, Heritage Site, Restaurants, Theatres, etc.\",\r\n  //     {\r\n  //       widget: \"NearMeLink\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleRailwayStation = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Railway Station - Pune City Connect is a platform for various kind of available PMC services near my location like Blood Bank, Hositl, PMC Office, Fire Station, Police Station, Wards, Garbage Bin, Public Toilet, Property, Government Office, Heritage Site, Restaurants, Theatres, etc.\",\r\n  //     {\r\n  //       widget: \"NearMeLink\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleAirports = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Airports - Pune City Connect is a platform for various kind of available PMC services near my location like Blood Bank, Hositl, PMC Office, Fire Station, Police Station, Wards, Garbage Bin, Public Toilet, Property, Government Office, Heritage Site, Restaurants, Theatres, etc.\",\r\n  //     {\r\n  //       widget: \"NearMeLink\",\r\n  //     }\r\n  //   );\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n\r\n  // handleAnalytics = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Analytics - Pune City Connect is a platform for different types of Analytics such as Web, Social Media, Collaboration for different type of articles, topics.\",\r\n  //     {\r\n  //       widget: \"AnalyticsDetails\",\r\n  //     }\r\n  //   );\r\n\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleWeb = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Web - Pune City Connect is a platform for different types of Analytics such as Web, Social Media, Collaboration for different type of articles, topics.\",\r\n  //     {\r\n  //       widget: \"WebAndMedia\",\r\n  //     }\r\n  //   );\r\n\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  // handleSocialMedia = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Social Media - Pune City Connect is a platform for different types of Analytics such as Web, Social Media, Collaboration for different type of articles, topics.\",\r\n  //     {\r\n  //       widget: \"WebAndMedia\",\r\n  //     }\r\n  //   );\r\n\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n\r\n  handleContactAdmin =()=>{\r\n    sessionStorage.setItem(\"chatbot\",\"contactAdmin\");\r\n    const message = this.createClientMessage(\r\n      \"Contact Admin has been selected\",\r\n      {\r\n        widget: \"contactAdmin\",\r\n      }\r\n    );\r\n    const message1 = this.createChatBotMessage(\r\n      \"Please mention your query\",\r\n      {\r\n        widget: \"contactAdmin\",\r\n      }\r\n    );\r\n   \r\n    this.updateChatbotState(message);\r\n    this.updateChatbotState(message1);\r\n  }\r\n\r\n  handleContactAdminAPI = (text) => {\r\n\r\n    if(text!=null && text!=\"\" && text!=\" \"){\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        {\r\n          \"user_id\": sessionStorage.getItem(\"user_id\"),\r\n          \"token\": sessionStorage.getItem(\"token\"),\r\n          \"concern_query\": text\r\n        }\r\n      )\r\n    };\r\n    fetch('https://scity.gmmspl.com:3000/chatbot/createchatbot', requestOptions)\r\n    .then(response => response.json())\r\n    .then(\r\n      (data) => {\r\n       if (data.message === \"Chatbot Concern Register Successfully\") {\r\n          const message = this.createChatBotMessage(\r\n            \"Your details has been shared with civic authorities.\",\r\n            {\r\n              widget: \"ShareDiscuss\",\r\n            }\r\n          );\r\n          this.updateChatbotState(message);\r\n       }\r\n       else {\r\n          const message = this.createChatBotMessage(\r\n            \"Please Login for details and to contact admin\",\r\n            {\r\n              widget: \"contactAdmin\",\r\n            }\r\n          );\r\n          this.updateChatbotState(message);\r\n       toast.warn(\"Please Login for details and to contact admin\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        onClose: () => window.location.href='/',\r\n      });\r\n    }\r\n      // ;\r\n      },\r\n  );}else{\r\n    const message = this.createChatBotMessage(\r\n      \"Please enter your query\",\r\n      {\r\n        widget: \"contactAdmin\",\r\n      }\r\n    );\r\n    this.updateChatbotState(message);\r\n\r\n  }\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  // handleTrendingNow = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Trending Now - Pune City Connect is a platform to check which things or ideas has more trend in the current situation. All citizens can check All trending items, Polls/Survey of perticular area, discussion forums, Ideas shared and discussed by citizens,etc.\",\r\n  //     {\r\n  //       widget: \"TrendingSection\",\r\n  //     }\r\n  //   );\r\n\r\n  //   this.updateChatbotState(message);\r\n  // };\r\n\r\n  handleError = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"Oops Invalid Input.\",{\r\n        widget: \"\",\r\n      }\r\n    );\r\n    this.updateChatbotState(message);\r\n  };\r\n\r\n  updateChatbotState(message) {\r\n    // NOTICE: This function is set in the constructor, and is passed in from the top level Chatbot component. The setState function here actually manipulates the top level state of the Chatbot, so it's important that we make sure that we preserve the previous state.\r\n\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      messages: [...prevState.messages, message],\r\n    }\r\n    )\r\n    );\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default ActionProvider;\r\n",{"ruleId":"1390","replacedBy":"1391"},{"ruleId":"1392","replacedBy":"1393"},{"ruleId":"1394","severity":1,"message":"1395","line":35,"column":8,"nodeType":"1396","messageId":"1397","endLine":35,"endColumn":18},{"ruleId":"1394","severity":1,"message":"1398","line":3,"column":8,"nodeType":"1396","messageId":"1397","endLine":3,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1399","line":17,"column":8,"nodeType":"1396","messageId":"1397","endLine":17,"endColumn":19},{"ruleId":"1394","severity":1,"message":"1400","line":18,"column":10,"nodeType":"1396","messageId":"1397","endLine":18,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1401","line":19,"column":8,"nodeType":"1396","messageId":"1397","endLine":19,"endColumn":15},{"ruleId":"1394","severity":1,"message":"1402","line":20,"column":10,"nodeType":"1396","messageId":"1397","endLine":20,"endColumn":17},{"ruleId":"1394","severity":1,"message":"1403","line":21,"column":10,"nodeType":"1396","messageId":"1397","endLine":21,"endColumn":24},{"ruleId":"1404","severity":1,"message":"1405","line":37,"column":107,"nodeType":"1406","messageId":"1407","endLine":37,"endColumn":109},{"ruleId":"1404","severity":1,"message":"1408","line":54,"column":41,"nodeType":"1406","messageId":"1407","endLine":54,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":74,"column":41,"nodeType":"1406","messageId":"1407","endLine":74,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":227,"column":55,"nodeType":"1406","messageId":"1407","endLine":227,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":235,"column":55,"nodeType":"1406","messageId":"1407","endLine":235,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1398","line":6,"column":8,"nodeType":"1396","messageId":"1397","endLine":6,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1409","line":11,"column":8,"nodeType":"1396","messageId":"1397","endLine":11,"endColumn":15},{"ruleId":"1394","severity":1,"message":"1410","line":12,"column":19,"nodeType":"1396","messageId":"1397","endLine":12,"endColumn":27},{"ruleId":"1404","severity":1,"message":"1408","line":51,"column":41,"nodeType":"1406","messageId":"1407","endLine":51,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":65,"column":30,"nodeType":"1406","messageId":"1407","endLine":65,"endColumn":32},{"ruleId":"1404","severity":1,"message":"1405","line":67,"column":53,"nodeType":"1406","messageId":"1407","endLine":67,"endColumn":55},{"ruleId":"1404","severity":1,"message":"1408","line":113,"column":41,"nodeType":"1406","messageId":"1407","endLine":113,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":134,"column":41,"nodeType":"1406","messageId":"1407","endLine":134,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":154,"column":41,"nodeType":"1406","messageId":"1407","endLine":154,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":323,"column":55,"nodeType":"1406","messageId":"1407","endLine":323,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":331,"column":55,"nodeType":"1406","messageId":"1407","endLine":331,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1411","line":9,"column":8,"nodeType":"1396","messageId":"1397","endLine":9,"endColumn":23},{"ruleId":"1394","severity":1,"message":"1412","line":12,"column":8,"nodeType":"1396","messageId":"1397","endLine":12,"endColumn":16},{"ruleId":"1394","severity":1,"message":"1413","line":16,"column":8,"nodeType":"1396","messageId":"1397","endLine":16,"endColumn":17},{"ruleId":"1394","severity":1,"message":"1414","line":19,"column":8,"nodeType":"1396","messageId":"1397","endLine":19,"endColumn":19},{"ruleId":"1394","severity":1,"message":"1415","line":20,"column":8,"nodeType":"1396","messageId":"1397","endLine":20,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1416","line":23,"column":8,"nodeType":"1396","messageId":"1397","endLine":23,"endColumn":18},{"ruleId":"1394","severity":1,"message":"1402","line":26,"column":10,"nodeType":"1396","messageId":"1397","endLine":26,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1408","line":121,"column":172,"nodeType":"1406","messageId":"1407","endLine":121,"endColumn":174},{"ruleId":"1404","severity":1,"message":"1408","line":202,"column":171,"nodeType":"1406","messageId":"1407","endLine":202,"endColumn":173},{"ruleId":"1404","severity":1,"message":"1405","line":402,"column":60,"nodeType":"1406","messageId":"1407","endLine":402,"endColumn":62},{"ruleId":"1404","severity":1,"message":"1408","line":416,"column":41,"nodeType":"1406","messageId":"1407","endLine":416,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":428,"column":36,"nodeType":"1406","messageId":"1407","endLine":428,"endColumn":38},{"ruleId":"1417","severity":1,"message":"1418","line":447,"column":7,"nodeType":"1419","endLine":447,"endColumn":17},{"ruleId":"1417","severity":1,"message":"1418","line":448,"column":7,"nodeType":"1419","endLine":448,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1408","line":489,"column":174,"nodeType":"1406","messageId":"1407","endLine":489,"endColumn":176},{"ruleId":"1394","severity":1,"message":"1420","line":741,"column":11,"nodeType":"1396","messageId":"1397","endLine":741,"endColumn":17},{"ruleId":"1394","severity":1,"message":"1398","line":7,"column":8,"nodeType":"1396","messageId":"1397","endLine":7,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1403","line":16,"column":10,"nodeType":"1396","messageId":"1397","endLine":16,"endColumn":24},{"ruleId":"1404","severity":1,"message":"1408","line":53,"column":41,"nodeType":"1406","messageId":"1407","endLine":53,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":73,"column":41,"nodeType":"1406","messageId":"1407","endLine":73,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":229,"column":55,"nodeType":"1406","messageId":"1407","endLine":229,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":237,"column":55,"nodeType":"1406","messageId":"1407","endLine":237,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1398","line":6,"column":8,"nodeType":"1396","messageId":"1397","endLine":6,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1403","line":13,"column":10,"nodeType":"1396","messageId":"1397","endLine":13,"endColumn":24},{"ruleId":"1404","severity":1,"message":"1408","line":53,"column":41,"nodeType":"1406","messageId":"1407","endLine":53,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":73,"column":41,"nodeType":"1406","messageId":"1407","endLine":73,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":122,"column":41,"nodeType":"1406","messageId":"1407","endLine":122,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":143,"column":41,"nodeType":"1406","messageId":"1407","endLine":143,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":164,"column":41,"nodeType":"1406","messageId":"1407","endLine":164,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":293,"column":55,"nodeType":"1406","messageId":"1407","endLine":293,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":301,"column":55,"nodeType":"1406","messageId":"1407","endLine":301,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1398","line":3,"column":8,"nodeType":"1396","messageId":"1397","endLine":3,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1421","line":8,"column":8,"nodeType":"1396","messageId":"1397","endLine":8,"endColumn":29},{"ruleId":"1394","severity":1,"message":"1422","line":24,"column":8,"nodeType":"1396","messageId":"1397","endLine":24,"endColumn":23},{"ruleId":"1404","severity":1,"message":"1405","line":70,"column":44,"nodeType":"1406","messageId":"1407","endLine":70,"endColumn":46},{"ruleId":"1404","severity":1,"message":"1408","line":109,"column":41,"nodeType":"1406","messageId":"1407","endLine":109,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":135,"column":41,"nodeType":"1406","messageId":"1407","endLine":135,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":158,"column":41,"nodeType":"1406","messageId":"1407","endLine":158,"endColumn":43},{"ruleId":"1417","severity":1,"message":"1418","line":204,"column":5,"nodeType":"1419","endLine":204,"endColumn":15},{"ruleId":"1404","severity":1,"message":"1408","line":227,"column":74,"nodeType":"1406","messageId":"1407","endLine":227,"endColumn":76},{"ruleId":"1404","severity":1,"message":"1408","line":257,"column":41,"nodeType":"1406","messageId":"1407","endLine":257,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":388,"column":55,"nodeType":"1406","messageId":"1407","endLine":388,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":396,"column":55,"nodeType":"1406","messageId":"1407","endLine":396,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":575,"column":54,"nodeType":"1406","messageId":"1407","endLine":575,"endColumn":56},{"ruleId":"1394","severity":1,"message":"1398","line":2,"column":8,"nodeType":"1396","messageId":"1397","endLine":2,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1423","line":6,"column":8,"nodeType":"1396","messageId":"1397","endLine":6,"endColumn":30},{"ruleId":"1394","severity":1,"message":"1421","line":8,"column":8,"nodeType":"1396","messageId":"1397","endLine":8,"endColumn":29},{"ruleId":"1394","severity":1,"message":"1424","line":16,"column":8,"nodeType":"1396","messageId":"1397","endLine":16,"endColumn":21},{"ruleId":"1394","severity":1,"message":"1403","line":19,"column":10,"nodeType":"1396","messageId":"1397","endLine":19,"endColumn":24},{"ruleId":"1404","severity":1,"message":"1408","line":87,"column":41,"nodeType":"1406","messageId":"1407","endLine":87,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":180,"column":41,"nodeType":"1406","messageId":"1407","endLine":180,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":200,"column":41,"nodeType":"1406","messageId":"1407","endLine":200,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":247,"column":38,"nodeType":"1406","messageId":"1407","endLine":247,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1405","line":297,"column":15,"nodeType":"1406","messageId":"1407","endLine":297,"endColumn":17},{"ruleId":"1417","severity":1,"message":"1418","line":351,"column":11,"nodeType":"1419","endLine":351,"endColumn":21},{"ruleId":"1417","severity":1,"message":"1418","line":373,"column":10,"nodeType":"1419","endLine":373,"endColumn":20},{"ruleId":"1394","severity":1,"message":"1425","line":400,"column":9,"nodeType":"1396","messageId":"1397","endLine":400,"endColumn":14},{"ruleId":"1417","severity":1,"message":"1418","line":408,"column":11,"nodeType":"1419","endLine":408,"endColumn":21},{"ruleId":"1426","severity":1,"message":"1427","line":420,"column":18,"nodeType":"1396","messageId":"1428","endLine":420,"endColumn":19},{"ruleId":"1417","severity":1,"message":"1418","line":441,"column":10,"nodeType":"1419","endLine":441,"endColumn":20},{"ruleId":"1404","severity":1,"message":"1408","line":478,"column":32,"nodeType":"1406","messageId":"1407","endLine":478,"endColumn":34},{"ruleId":"1404","severity":1,"message":"1408","line":479,"column":32,"nodeType":"1406","messageId":"1407","endLine":479,"endColumn":34},{"ruleId":"1404","severity":1,"message":"1408","line":702,"column":55,"nodeType":"1406","messageId":"1407","endLine":702,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":710,"column":55,"nodeType":"1406","messageId":"1407","endLine":710,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1429","line":3,"column":19,"nodeType":"1396","messageId":"1397","endLine":3,"endColumn":29},{"ruleId":"1394","severity":1,"message":"1430","line":14,"column":3,"nodeType":"1396","messageId":"1397","endLine":14,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1431","line":15,"column":3,"nodeType":"1396","messageId":"1397","endLine":15,"endColumn":20},{"ruleId":"1394","severity":1,"message":"1432","line":16,"column":3,"nodeType":"1396","messageId":"1397","endLine":16,"endColumn":18},{"ruleId":"1394","severity":1,"message":"1433","line":17,"column":3,"nodeType":"1396","messageId":"1397","endLine":17,"endColumn":18},{"ruleId":"1404","severity":1,"message":"1408","line":64,"column":41,"nodeType":"1406","messageId":"1407","endLine":64,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":106,"column":88,"nodeType":"1406","messageId":"1407","endLine":106,"endColumn":90},{"ruleId":"1394","severity":1,"message":"1398","line":2,"column":8,"nodeType":"1396","messageId":"1397","endLine":2,"endColumn":14},{"ruleId":"1404","severity":1,"message":"1405","line":23,"column":50,"nodeType":"1406","messageId":"1407","endLine":23,"endColumn":52},{"ruleId":"1404","severity":1,"message":"1405","line":29,"column":46,"nodeType":"1406","messageId":"1407","endLine":29,"endColumn":48},{"ruleId":"1404","severity":1,"message":"1405","line":35,"column":43,"nodeType":"1406","messageId":"1407","endLine":35,"endColumn":45},{"ruleId":"1404","severity":1,"message":"1405","line":41,"column":46,"nodeType":"1406","messageId":"1407","endLine":41,"endColumn":48},{"ruleId":"1404","severity":1,"message":"1405","line":47,"column":50,"nodeType":"1406","messageId":"1407","endLine":47,"endColumn":52},{"ruleId":"1404","severity":1,"message":"1405","line":56,"column":50,"nodeType":"1406","messageId":"1407","endLine":56,"endColumn":52},{"ruleId":"1404","severity":1,"message":"1405","line":60,"column":57,"nodeType":"1406","messageId":"1407","endLine":60,"endColumn":59},{"ruleId":"1404","severity":1,"message":"1405","line":92,"column":46,"nodeType":"1406","messageId":"1407","endLine":92,"endColumn":48},{"ruleId":"1404","severity":1,"message":"1405","line":96,"column":56,"nodeType":"1406","messageId":"1407","endLine":96,"endColumn":58},{"ruleId":"1404","severity":1,"message":"1405","line":128,"column":43,"nodeType":"1406","messageId":"1407","endLine":128,"endColumn":45},{"ruleId":"1404","severity":1,"message":"1405","line":132,"column":53,"nodeType":"1406","messageId":"1407","endLine":132,"endColumn":55},{"ruleId":"1404","severity":1,"message":"1405","line":164,"column":46,"nodeType":"1406","messageId":"1407","endLine":164,"endColumn":48},{"ruleId":"1404","severity":1,"message":"1405","line":168,"column":56,"nodeType":"1406","messageId":"1407","endLine":168,"endColumn":58},{"ruleId":"1404","severity":1,"message":"1405","line":200,"column":50,"nodeType":"1406","messageId":"1407","endLine":200,"endColumn":52},{"ruleId":"1404","severity":1,"message":"1405","line":204,"column":60,"nodeType":"1406","messageId":"1407","endLine":204,"endColumn":62},{"ruleId":"1394","severity":1,"message":"1434","line":10,"column":8,"nodeType":"1396","messageId":"1397","endLine":10,"endColumn":22},{"ruleId":"1394","severity":1,"message":"1435","line":11,"column":8,"nodeType":"1396","messageId":"1397","endLine":11,"endColumn":12},{"ruleId":"1394","severity":1,"message":"1436","line":13,"column":8,"nodeType":"1396","messageId":"1397","endLine":13,"endColumn":29},{"ruleId":"1394","severity":1,"message":"1414","line":14,"column":8,"nodeType":"1396","messageId":"1397","endLine":14,"endColumn":19},{"ruleId":"1394","severity":1,"message":"1415","line":15,"column":8,"nodeType":"1396","messageId":"1397","endLine":15,"endColumn":14},{"ruleId":"1404","severity":1,"message":"1405","line":175,"column":60,"nodeType":"1406","messageId":"1407","endLine":175,"endColumn":62},{"ruleId":"1404","severity":1,"message":"1408","line":230,"column":39,"nodeType":"1406","messageId":"1407","endLine":230,"endColumn":41},{"ruleId":"1404","severity":1,"message":"1408","line":242,"column":36,"nodeType":"1406","messageId":"1407","endLine":242,"endColumn":38},{"ruleId":"1394","severity":1,"message":"1398","line":3,"column":8,"nodeType":"1396","messageId":"1397","endLine":3,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1421","line":7,"column":8,"nodeType":"1396","messageId":"1397","endLine":7,"endColumn":29},{"ruleId":"1404","severity":1,"message":"1408","line":65,"column":41,"nodeType":"1406","messageId":"1407","endLine":65,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":88,"column":41,"nodeType":"1406","messageId":"1407","endLine":88,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":135,"column":44,"nodeType":"1406","messageId":"1407","endLine":135,"endColumn":46},{"ruleId":"1404","severity":1,"message":"1408","line":149,"column":41,"nodeType":"1406","messageId":"1407","endLine":149,"endColumn":43},{"ruleId":"1417","severity":1,"message":"1418","line":172,"column":5,"nodeType":"1419","endLine":172,"endColumn":15},{"ruleId":"1404","severity":1,"message":"1408","line":326,"column":55,"nodeType":"1406","messageId":"1407","endLine":326,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":334,"column":55,"nodeType":"1406","messageId":"1407","endLine":334,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1402","line":12,"column":10,"nodeType":"1396","messageId":"1397","endLine":12,"endColumn":17},{"ruleId":"1394","severity":1,"message":"1437","line":17,"column":10,"nodeType":"1396","messageId":"1397","endLine":17,"endColumn":16},{"ruleId":"1394","severity":1,"message":"1398","line":6,"column":8,"nodeType":"1396","messageId":"1397","endLine":6,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1403","line":12,"column":10,"nodeType":"1396","messageId":"1397","endLine":12,"endColumn":24},{"ruleId":"1404","severity":1,"message":"1408","line":53,"column":41,"nodeType":"1406","messageId":"1407","endLine":53,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":73,"column":41,"nodeType":"1406","messageId":"1407","endLine":73,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":122,"column":41,"nodeType":"1406","messageId":"1407","endLine":122,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":143,"column":41,"nodeType":"1406","messageId":"1407","endLine":143,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":164,"column":41,"nodeType":"1406","messageId":"1407","endLine":164,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":293,"column":55,"nodeType":"1406","messageId":"1407","endLine":293,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":301,"column":55,"nodeType":"1406","messageId":"1407","endLine":301,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1398","line":2,"column":8,"nodeType":"1396","messageId":"1397","endLine":2,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1421","line":8,"column":8,"nodeType":"1396","messageId":"1397","endLine":8,"endColumn":29},{"ruleId":"1394","severity":1,"message":"1403","line":14,"column":10,"nodeType":"1396","messageId":"1397","endLine":14,"endColumn":24},{"ruleId":"1394","severity":1,"message":"1438","line":31,"column":33,"nodeType":"1396","messageId":"1397","endLine":31,"endColumn":41},{"ruleId":"1394","severity":1,"message":"1439","line":33,"column":8,"nodeType":"1396","messageId":"1397","endLine":33,"endColumn":22},{"ruleId":"1394","severity":1,"message":"1440","line":34,"column":10,"nodeType":"1396","messageId":"1397","endLine":34,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1408","line":89,"column":41,"nodeType":"1406","messageId":"1407","endLine":89,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":110,"column":17,"nodeType":"1406","messageId":"1407","endLine":110,"endColumn":19},{"ruleId":"1404","severity":1,"message":"1408","line":110,"column":37,"nodeType":"1406","messageId":"1407","endLine":110,"endColumn":39},{"ruleId":"1404","severity":1,"message":"1408","line":112,"column":23,"nodeType":"1406","messageId":"1407","endLine":112,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":114,"column":23,"nodeType":"1406","messageId":"1407","endLine":114,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":116,"column":23,"nodeType":"1406","messageId":"1407","endLine":116,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":118,"column":23,"nodeType":"1406","messageId":"1407","endLine":118,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":120,"column":23,"nodeType":"1406","messageId":"1407","endLine":120,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":122,"column":23,"nodeType":"1406","messageId":"1407","endLine":122,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":124,"column":23,"nodeType":"1406","messageId":"1407","endLine":124,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":126,"column":23,"nodeType":"1406","messageId":"1407","endLine":126,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":128,"column":23,"nodeType":"1406","messageId":"1407","endLine":128,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":130,"column":23,"nodeType":"1406","messageId":"1407","endLine":130,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":132,"column":23,"nodeType":"1406","messageId":"1407","endLine":132,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":157,"column":37,"nodeType":"1406","messageId":"1407","endLine":157,"endColumn":39},{"ruleId":"1404","severity":1,"message":"1408","line":204,"column":89,"nodeType":"1406","messageId":"1407","endLine":204,"endColumn":91},{"ruleId":"1404","severity":1,"message":"1408","line":212,"column":192,"nodeType":"1406","messageId":"1407","endLine":212,"endColumn":194},{"ruleId":"1404","severity":1,"message":"1408","line":236,"column":41,"nodeType":"1406","messageId":"1407","endLine":236,"endColumn":43},{"ruleId":"1417","severity":1,"message":"1418","line":257,"column":7,"nodeType":"1419","endLine":257,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1405","line":264,"column":41,"nodeType":"1406","messageId":"1407","endLine":264,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":324,"column":39,"nodeType":"1406","messageId":"1407","endLine":324,"endColumn":41},{"ruleId":"1404","severity":1,"message":"1408","line":557,"column":55,"nodeType":"1406","messageId":"1407","endLine":557,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":565,"column":55,"nodeType":"1406","messageId":"1407","endLine":565,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":601,"column":35,"nodeType":"1406","messageId":"1407","endLine":601,"endColumn":37},{"ruleId":"1404","severity":1,"message":"1408","line":777,"column":38,"nodeType":"1406","messageId":"1407","endLine":777,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":782,"column":40,"nodeType":"1406","messageId":"1407","endLine":782,"endColumn":42},{"ruleId":"1404","severity":1,"message":"1408","line":787,"column":40,"nodeType":"1406","messageId":"1407","endLine":787,"endColumn":42},{"ruleId":"1404","severity":1,"message":"1408","line":799,"column":38,"nodeType":"1406","messageId":"1407","endLine":799,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":810,"column":38,"nodeType":"1406","messageId":"1407","endLine":810,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":815,"column":40,"nodeType":"1406","messageId":"1407","endLine":815,"endColumn":42},{"ruleId":"1404","severity":1,"message":"1408","line":826,"column":38,"nodeType":"1406","messageId":"1407","endLine":826,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":837,"column":38,"nodeType":"1406","messageId":"1407","endLine":837,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":848,"column":38,"nodeType":"1406","messageId":"1407","endLine":848,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":853,"column":40,"nodeType":"1406","messageId":"1407","endLine":853,"endColumn":42},{"ruleId":"1404","severity":1,"message":"1408","line":864,"column":38,"nodeType":"1406","messageId":"1407","endLine":864,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":875,"column":38,"nodeType":"1406","messageId":"1407","endLine":875,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":880,"column":40,"nodeType":"1406","messageId":"1407","endLine":880,"endColumn":42},{"ruleId":"1404","severity":1,"message":"1408","line":1043,"column":48,"nodeType":"1406","messageId":"1407","endLine":1043,"endColumn":50},{"ruleId":"1394","severity":1,"message":"1441","line":12,"column":8,"nodeType":"1396","messageId":"1397","endLine":12,"endColumn":33},{"ruleId":"1394","severity":1,"message":"1399","line":13,"column":8,"nodeType":"1396","messageId":"1397","endLine":13,"endColumn":19},{"ruleId":"1394","severity":1,"message":"1442","line":14,"column":8,"nodeType":"1396","messageId":"1397","endLine":14,"endColumn":27},{"ruleId":"1394","severity":1,"message":"1401","line":15,"column":8,"nodeType":"1396","messageId":"1397","endLine":15,"endColumn":15},{"ruleId":"1394","severity":1,"message":"1400","line":16,"column":10,"nodeType":"1396","messageId":"1397","endLine":16,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1402","line":17,"column":10,"nodeType":"1396","messageId":"1397","endLine":17,"endColumn":17},{"ruleId":"1394","severity":1,"message":"1443","line":19,"column":8,"nodeType":"1396","messageId":"1397","endLine":19,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1444","line":33,"column":10,"nodeType":"1396","messageId":"1397","endLine":33,"endColumn":23},{"ruleId":"1417","severity":1,"message":"1418","line":221,"column":13,"nodeType":"1419","endLine":221,"endColumn":23},{"ruleId":"1417","severity":1,"message":"1418","line":224,"column":13,"nodeType":"1419","endLine":224,"endColumn":23},{"ruleId":"1417","severity":1,"message":"1418","line":230,"column":13,"nodeType":"1419","endLine":230,"endColumn":23},{"ruleId":"1404","severity":1,"message":"1408","line":369,"column":41,"nodeType":"1406","messageId":"1407","endLine":369,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":393,"column":41,"nodeType":"1406","messageId":"1407","endLine":393,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":522,"column":50,"nodeType":"1406","messageId":"1407","endLine":522,"endColumn":52},{"ruleId":"1404","severity":1,"message":"1408","line":569,"column":39,"nodeType":"1406","messageId":"1407","endLine":569,"endColumn":41},{"ruleId":"1404","severity":1,"message":"1408","line":570,"column":39,"nodeType":"1406","messageId":"1407","endLine":570,"endColumn":41},{"ruleId":"1404","severity":1,"message":"1408","line":571,"column":39,"nodeType":"1406","messageId":"1407","endLine":571,"endColumn":41},{"ruleId":"1404","severity":1,"message":"1408","line":577,"column":26,"nodeType":"1406","messageId":"1407","endLine":577,"endColumn":28},{"ruleId":"1404","severity":1,"message":"1408","line":583,"column":37,"nodeType":"1406","messageId":"1407","endLine":583,"endColumn":39},{"ruleId":"1404","severity":1,"message":"1408","line":652,"column":47,"nodeType":"1406","messageId":"1407","endLine":652,"endColumn":49},{"ruleId":"1404","severity":1,"message":"1405","line":653,"column":78,"nodeType":"1406","messageId":"1407","endLine":653,"endColumn":80},{"ruleId":"1404","severity":1,"message":"1408","line":659,"column":39,"nodeType":"1406","messageId":"1407","endLine":659,"endColumn":41},{"ruleId":"1404","severity":1,"message":"1408","line":660,"column":39,"nodeType":"1406","messageId":"1407","endLine":660,"endColumn":41},{"ruleId":"1404","severity":1,"message":"1408","line":666,"column":26,"nodeType":"1406","messageId":"1407","endLine":666,"endColumn":28},{"ruleId":"1404","severity":1,"message":"1408","line":672,"column":37,"nodeType":"1406","messageId":"1407","endLine":672,"endColumn":39},{"ruleId":"1404","severity":1,"message":"1408","line":858,"column":55,"nodeType":"1406","messageId":"1407","endLine":858,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":866,"column":55,"nodeType":"1406","messageId":"1407","endLine":866,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1398","line":3,"column":8,"nodeType":"1396","messageId":"1397","endLine":3,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1421","line":8,"column":8,"nodeType":"1396","messageId":"1397","endLine":8,"endColumn":29},{"ruleId":"1404","severity":1,"message":"1408","line":70,"column":41,"nodeType":"1406","messageId":"1407","endLine":70,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":93,"column":41,"nodeType":"1406","messageId":"1407","endLine":93,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":140,"column":44,"nodeType":"1406","messageId":"1407","endLine":140,"endColumn":46},{"ruleId":"1417","severity":1,"message":"1418","line":152,"column":5,"nodeType":"1419","endLine":152,"endColumn":15},{"ruleId":"1404","severity":1,"message":"1408","line":178,"column":74,"nodeType":"1406","messageId":"1407","endLine":178,"endColumn":76},{"ruleId":"1404","severity":1,"message":"1408","line":207,"column":41,"nodeType":"1406","messageId":"1407","endLine":207,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":262,"column":41,"nodeType":"1406","messageId":"1407","endLine":262,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":397,"column":55,"nodeType":"1406","messageId":"1407","endLine":397,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":405,"column":55,"nodeType":"1406","messageId":"1407","endLine":405,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":593,"column":50,"nodeType":"1406","messageId":"1407","endLine":593,"endColumn":52},{"ruleId":"1404","severity":1,"message":"1408","line":605,"column":54,"nodeType":"1406","messageId":"1407","endLine":605,"endColumn":56},{"ruleId":"1394","severity":1,"message":"1398","line":2,"column":8,"nodeType":"1396","messageId":"1397","endLine":2,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1421","line":11,"column":8,"nodeType":"1396","messageId":"1397","endLine":11,"endColumn":29},{"ruleId":"1404","severity":1,"message":"1408","line":71,"column":41,"nodeType":"1406","messageId":"1407","endLine":71,"endColumn":43},{"ruleId":"1417","severity":1,"message":"1418","line":88,"column":5,"nodeType":"1419","endLine":88,"endColumn":15},{"ruleId":"1417","severity":1,"message":"1418","line":114,"column":11,"nodeType":"1419","endLine":114,"endColumn":21},{"ruleId":"1404","severity":1,"message":"1405","line":116,"column":61,"nodeType":"1406","messageId":"1407","endLine":116,"endColumn":63},{"ruleId":"1417","severity":1,"message":"1418","line":129,"column":21,"nodeType":"1419","endLine":129,"endColumn":52},{"ruleId":"1417","severity":1,"message":"1418","line":132,"column":21,"nodeType":"1419","endLine":132,"endColumn":52},{"ruleId":"1417","severity":1,"message":"1418","line":135,"column":19,"nodeType":"1419","endLine":135,"endColumn":50},{"ruleId":"1417","severity":1,"message":"1418","line":139,"column":15,"nodeType":"1419","endLine":139,"endColumn":46},{"ruleId":"1404","severity":1,"message":"1408","line":173,"column":48,"nodeType":"1406","messageId":"1407","endLine":173,"endColumn":50},{"ruleId":"1417","severity":1,"message":"1418","line":174,"column":7,"nodeType":"1419","endLine":174,"endColumn":38},{"ruleId":"1417","severity":1,"message":"1418","line":176,"column":7,"nodeType":"1419","endLine":176,"endColumn":38},{"ruleId":"1404","severity":1,"message":"1408","line":190,"column":46,"nodeType":"1406","messageId":"1407","endLine":190,"endColumn":48},{"ruleId":"1417","severity":1,"message":"1418","line":197,"column":7,"nodeType":"1419","endLine":197,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1408","line":268,"column":41,"nodeType":"1406","messageId":"1407","endLine":268,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":288,"column":41,"nodeType":"1406","messageId":"1407","endLine":288,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":453,"column":55,"nodeType":"1406","messageId":"1407","endLine":453,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":461,"column":55,"nodeType":"1406","messageId":"1407","endLine":461,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1405","line":552,"column":68,"nodeType":"1406","messageId":"1407","endLine":552,"endColumn":70},{"ruleId":"1404","severity":1,"message":"1408","line":600,"column":68,"nodeType":"1406","messageId":"1407","endLine":600,"endColumn":70},{"ruleId":"1394","severity":1,"message":"1398","line":2,"column":8,"nodeType":"1396","messageId":"1397","endLine":2,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1423","line":6,"column":8,"nodeType":"1396","messageId":"1397","endLine":6,"endColumn":30},{"ruleId":"1394","severity":1,"message":"1421","line":8,"column":8,"nodeType":"1396","messageId":"1397","endLine":8,"endColumn":29},{"ruleId":"1394","severity":1,"message":"1445","line":14,"column":3,"nodeType":"1396","messageId":"1397","endLine":14,"endColumn":26},{"ruleId":"1394","severity":1,"message":"1446","line":15,"column":3,"nodeType":"1396","messageId":"1397","endLine":15,"endColumn":21},{"ruleId":"1394","severity":1,"message":"1424","line":19,"column":8,"nodeType":"1396","messageId":"1397","endLine":19,"endColumn":21},{"ruleId":"1394","severity":1,"message":"1403","line":22,"column":10,"nodeType":"1396","messageId":"1397","endLine":22,"endColumn":24},{"ruleId":"1404","severity":1,"message":"1408","line":95,"column":41,"nodeType":"1406","messageId":"1407","endLine":95,"endColumn":43},{"ruleId":"1417","severity":1,"message":"1418","line":133,"column":5,"nodeType":"1419","endLine":133,"endColumn":15},{"ruleId":"1404","severity":1,"message":"1408","line":159,"column":38,"nodeType":"1406","messageId":"1407","endLine":159,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":220,"column":41,"nodeType":"1406","messageId":"1407","endLine":220,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":240,"column":41,"nodeType":"1406","messageId":"1407","endLine":240,"endColumn":43},{"ruleId":"1394","severity":1,"message":"1425","line":287,"column":9,"nodeType":"1396","messageId":"1397","endLine":287,"endColumn":14},{"ruleId":"1417","severity":1,"message":"1418","line":295,"column":11,"nodeType":"1419","endLine":295,"endColumn":21},{"ruleId":"1426","severity":1,"message":"1427","line":307,"column":18,"nodeType":"1396","messageId":"1428","endLine":307,"endColumn":19},{"ruleId":"1417","severity":1,"message":"1418","line":328,"column":10,"nodeType":"1419","endLine":328,"endColumn":20},{"ruleId":"1404","severity":1,"message":"1405","line":366,"column":15,"nodeType":"1406","messageId":"1407","endLine":366,"endColumn":17},{"ruleId":"1417","severity":1,"message":"1418","line":422,"column":11,"nodeType":"1419","endLine":422,"endColumn":21},{"ruleId":"1417","severity":1,"message":"1418","line":454,"column":10,"nodeType":"1419","endLine":454,"endColumn":20},{"ruleId":"1404","severity":1,"message":"1405","line":489,"column":28,"nodeType":"1406","messageId":"1407","endLine":489,"endColumn":30},{"ruleId":"1404","severity":1,"message":"1405","line":489,"column":88,"nodeType":"1406","messageId":"1407","endLine":489,"endColumn":90},{"ruleId":"1404","severity":1,"message":"1408","line":505,"column":32,"nodeType":"1406","messageId":"1407","endLine":505,"endColumn":34},{"ruleId":"1404","severity":1,"message":"1408","line":506,"column":32,"nodeType":"1406","messageId":"1407","endLine":506,"endColumn":34},{"ruleId":"1404","severity":1,"message":"1408","line":794,"column":55,"nodeType":"1406","messageId":"1407","endLine":794,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":802,"column":55,"nodeType":"1406","messageId":"1407","endLine":802,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1447","line":7,"column":8,"nodeType":"1396","messageId":"1397","endLine":7,"endColumn":21},{"ruleId":"1394","severity":1,"message":"1414","line":9,"column":8,"nodeType":"1396","messageId":"1397","endLine":9,"endColumn":19},{"ruleId":"1394","severity":1,"message":"1415","line":10,"column":8,"nodeType":"1396","messageId":"1397","endLine":10,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1437","line":11,"column":10,"nodeType":"1396","messageId":"1397","endLine":11,"endColumn":16},{"ruleId":"1404","severity":1,"message":"1408","line":44,"column":39,"nodeType":"1406","messageId":"1407","endLine":44,"endColumn":41},{"ruleId":"1404","severity":1,"message":"1408","line":56,"column":43,"nodeType":"1406","messageId":"1407","endLine":56,"endColumn":45},{"ruleId":"1448","severity":1,"message":"1449","line":355,"column":27,"nodeType":"1450","endLine":355,"endColumn":57},{"ruleId":"1448","severity":1,"message":"1449","line":379,"column":27,"nodeType":"1450","endLine":379,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1451","line":6,"column":8,"nodeType":"1396","messageId":"1397","endLine":6,"endColumn":25},{"ruleId":"1394","severity":1,"message":"1421","line":11,"column":8,"nodeType":"1396","messageId":"1397","endLine":11,"endColumn":29},{"ruleId":"1394","severity":1,"message":"1424","line":12,"column":8,"nodeType":"1396","messageId":"1397","endLine":12,"endColumn":21},{"ruleId":"1394","severity":1,"message":"1452","line":18,"column":8,"nodeType":"1396","messageId":"1397","endLine":18,"endColumn":17},{"ruleId":"1394","severity":1,"message":"1453","line":19,"column":8,"nodeType":"1396","messageId":"1397","endLine":19,"endColumn":16},{"ruleId":"1394","severity":1,"message":"1454","line":20,"column":8,"nodeType":"1396","messageId":"1397","endLine":20,"endColumn":20},{"ruleId":"1394","severity":1,"message":"1455","line":24,"column":8,"nodeType":"1396","messageId":"1397","endLine":24,"endColumn":16},{"ruleId":"1394","severity":1,"message":"1456","line":27,"column":8,"nodeType":"1396","messageId":"1397","endLine":27,"endColumn":24},{"ruleId":"1394","severity":1,"message":"1403","line":31,"column":10,"nodeType":"1396","messageId":"1397","endLine":31,"endColumn":24},{"ruleId":"1457","severity":1,"message":"1458","line":44,"column":7,"nodeType":"1459","messageId":"1407","endLine":44,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":77,"column":42,"nodeType":"1406","messageId":"1407","endLine":77,"endColumn":44},{"ruleId":"1404","severity":1,"message":"1408","line":93,"column":41,"nodeType":"1406","messageId":"1407","endLine":93,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":119,"column":42,"nodeType":"1406","messageId":"1407","endLine":119,"endColumn":44},{"ruleId":"1404","severity":1,"message":"1408","line":242,"column":100,"nodeType":"1406","messageId":"1407","endLine":242,"endColumn":102},{"ruleId":"1404","severity":1,"message":"1408","line":251,"column":98,"nodeType":"1406","messageId":"1407","endLine":251,"endColumn":100},{"ruleId":"1394","severity":1,"message":"1460","line":2,"column":8,"nodeType":"1396","messageId":"1397","endLine":2,"endColumn":16},{"ruleId":"1394","severity":1,"message":"1461","line":18,"column":10,"nodeType":"1396","messageId":"1397","endLine":18,"endColumn":19},{"ruleId":"1394","severity":1,"message":"1398","line":2,"column":8,"nodeType":"1396","messageId":"1397","endLine":2,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1421","line":9,"column":8,"nodeType":"1396","messageId":"1397","endLine":9,"endColumn":29},{"ruleId":"1394","severity":1,"message":"1462","line":11,"column":8,"nodeType":"1396","messageId":"1397","endLine":11,"endColumn":21},{"ruleId":"1394","severity":1,"message":"1403","line":23,"column":10,"nodeType":"1396","messageId":"1397","endLine":23,"endColumn":24},{"ruleId":"1404","severity":1,"message":"1408","line":49,"column":41,"nodeType":"1406","messageId":"1407","endLine":49,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":64,"column":30,"nodeType":"1406","messageId":"1407","endLine":64,"endColumn":32},{"ruleId":"1404","severity":1,"message":"1408","line":71,"column":33,"nodeType":"1406","messageId":"1407","endLine":71,"endColumn":35},{"ruleId":"1404","severity":1,"message":"1408","line":76,"column":23,"nodeType":"1406","messageId":"1407","endLine":76,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":133,"column":41,"nodeType":"1406","messageId":"1407","endLine":133,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":156,"column":41,"nodeType":"1406","messageId":"1407","endLine":156,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":317,"column":55,"nodeType":"1406","messageId":"1407","endLine":317,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":325,"column":55,"nodeType":"1406","messageId":"1407","endLine":325,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1414","line":8,"column":8,"nodeType":"1396","messageId":"1397","endLine":8,"endColumn":19},{"ruleId":"1394","severity":1,"message":"1415","line":9,"column":8,"nodeType":"1396","messageId":"1397","endLine":9,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1437","line":10,"column":10,"nodeType":"1396","messageId":"1397","endLine":10,"endColumn":16},{"ruleId":"1394","severity":1,"message":"1398","line":2,"column":8,"nodeType":"1396","messageId":"1397","endLine":2,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1421","line":8,"column":8,"nodeType":"1396","messageId":"1397","endLine":8,"endColumn":29},{"ruleId":"1394","severity":1,"message":"1403","line":19,"column":10,"nodeType":"1396","messageId":"1397","endLine":19,"endColumn":24},{"ruleId":"1394","severity":1,"message":"1463","line":22,"column":8,"nodeType":"1396","messageId":"1397","endLine":22,"endColumn":19},{"ruleId":"1457","severity":1,"message":"1464","line":60,"column":7,"nodeType":"1459","messageId":"1407","endLine":60,"endColumn":22},{"ruleId":"1404","severity":1,"message":"1408","line":90,"column":41,"nodeType":"1406","messageId":"1407","endLine":90,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":128,"column":41,"nodeType":"1406","messageId":"1407","endLine":128,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":148,"column":41,"nodeType":"1406","messageId":"1407","endLine":148,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":272,"column":15,"nodeType":"1406","messageId":"1407","endLine":272,"endColumn":17},{"ruleId":"1394","severity":1,"message":"1465","line":308,"column":9,"nodeType":"1396","messageId":"1397","endLine":308,"endColumn":13},{"ruleId":"1417","severity":1,"message":"1418","line":315,"column":11,"nodeType":"1419","endLine":315,"endColumn":21},{"ruleId":"1417","severity":1,"message":"1418","line":340,"column":10,"nodeType":"1419","endLine":340,"endColumn":20},{"ruleId":"1394","severity":1,"message":"1425","line":385,"column":9,"nodeType":"1396","messageId":"1397","endLine":385,"endColumn":14},{"ruleId":"1417","severity":1,"message":"1418","line":393,"column":11,"nodeType":"1419","endLine":393,"endColumn":21},{"ruleId":"1426","severity":1,"message":"1427","line":405,"column":18,"nodeType":"1396","messageId":"1428","endLine":405,"endColumn":19},{"ruleId":"1417","severity":1,"message":"1418","line":437,"column":10,"nodeType":"1419","endLine":437,"endColumn":20},{"ruleId":"1404","severity":1,"message":"1408","line":465,"column":32,"nodeType":"1406","messageId":"1407","endLine":465,"endColumn":34},{"ruleId":"1404","severity":1,"message":"1408","line":466,"column":32,"nodeType":"1406","messageId":"1407","endLine":466,"endColumn":34},{"ruleId":"1466","severity":1,"message":"1467","line":575,"column":3,"nodeType":"1468","messageId":"1407","endLine":579,"endColumn":4},{"ruleId":"1404","severity":1,"message":"1408","line":698,"column":55,"nodeType":"1406","messageId":"1407","endLine":698,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":706,"column":55,"nodeType":"1406","messageId":"1407","endLine":706,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1398","line":3,"column":8,"nodeType":"1396","messageId":"1397","endLine":3,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1421","line":9,"column":8,"nodeType":"1396","messageId":"1397","endLine":9,"endColumn":29},{"ruleId":"1394","severity":1,"message":"1445","line":15,"column":3,"nodeType":"1396","messageId":"1397","endLine":15,"endColumn":26},{"ruleId":"1394","severity":1,"message":"1446","line":16,"column":3,"nodeType":"1396","messageId":"1397","endLine":16,"endColumn":21},{"ruleId":"1394","severity":1,"message":"1424","line":19,"column":8,"nodeType":"1396","messageId":"1397","endLine":19,"endColumn":21},{"ruleId":"1394","severity":1,"message":"1403","line":22,"column":10,"nodeType":"1396","messageId":"1397","endLine":22,"endColumn":24},{"ruleId":"1394","severity":1,"message":"1469","line":24,"column":8,"nodeType":"1396","messageId":"1397","endLine":24,"endColumn":21},{"ruleId":"1394","severity":1,"message":"1470","line":25,"column":8,"nodeType":"1396","messageId":"1397","endLine":25,"endColumn":18},{"ruleId":"1394","severity":1,"message":"1438","line":36,"column":33,"nodeType":"1396","messageId":"1397","endLine":36,"endColumn":41},{"ruleId":"1394","severity":1,"message":"1439","line":38,"column":8,"nodeType":"1396","messageId":"1397","endLine":38,"endColumn":22},{"ruleId":"1394","severity":1,"message":"1440","line":39,"column":10,"nodeType":"1396","messageId":"1397","endLine":39,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1408","line":113,"column":41,"nodeType":"1406","messageId":"1407","endLine":113,"endColumn":43},{"ruleId":"1417","severity":1,"message":"1418","line":152,"column":5,"nodeType":"1419","endLine":152,"endColumn":15},{"ruleId":"1404","severity":1,"message":"1408","line":186,"column":38,"nodeType":"1406","messageId":"1407","endLine":186,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":209,"column":17,"nodeType":"1406","messageId":"1407","endLine":209,"endColumn":19},{"ruleId":"1404","severity":1,"message":"1408","line":209,"column":37,"nodeType":"1406","messageId":"1407","endLine":209,"endColumn":39},{"ruleId":"1404","severity":1,"message":"1408","line":211,"column":23,"nodeType":"1406","messageId":"1407","endLine":211,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":213,"column":23,"nodeType":"1406","messageId":"1407","endLine":213,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":215,"column":23,"nodeType":"1406","messageId":"1407","endLine":215,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":217,"column":23,"nodeType":"1406","messageId":"1407","endLine":217,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":219,"column":23,"nodeType":"1406","messageId":"1407","endLine":219,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":221,"column":23,"nodeType":"1406","messageId":"1407","endLine":221,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":223,"column":23,"nodeType":"1406","messageId":"1407","endLine":223,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":225,"column":23,"nodeType":"1406","messageId":"1407","endLine":225,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":227,"column":23,"nodeType":"1406","messageId":"1407","endLine":227,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":229,"column":23,"nodeType":"1406","messageId":"1407","endLine":229,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":231,"column":23,"nodeType":"1406","messageId":"1407","endLine":231,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":256,"column":37,"nodeType":"1406","messageId":"1407","endLine":256,"endColumn":39},{"ruleId":"1404","severity":1,"message":"1408","line":389,"column":41,"nodeType":"1406","messageId":"1407","endLine":389,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":409,"column":41,"nodeType":"1406","messageId":"1407","endLine":409,"endColumn":43},{"ruleId":"1394","severity":1,"message":"1425","line":455,"column":9,"nodeType":"1396","messageId":"1397","endLine":455,"endColumn":14},{"ruleId":"1417","severity":1,"message":"1418","line":463,"column":11,"nodeType":"1419","endLine":463,"endColumn":21},{"ruleId":"1426","severity":1,"message":"1427","line":475,"column":18,"nodeType":"1396","messageId":"1428","endLine":475,"endColumn":19},{"ruleId":"1404","severity":1,"message":"1405","line":523,"column":15,"nodeType":"1406","messageId":"1407","endLine":523,"endColumn":17},{"ruleId":"1417","severity":1,"message":"1418","line":578,"column":11,"nodeType":"1419","endLine":578,"endColumn":21},{"ruleId":"1404","severity":1,"message":"1405","line":644,"column":27,"nodeType":"1406","messageId":"1407","endLine":644,"endColumn":29},{"ruleId":"1404","severity":1,"message":"1405","line":646,"column":27,"nodeType":"1406","messageId":"1407","endLine":646,"endColumn":29},{"ruleId":"1404","severity":1,"message":"1408","line":665,"column":32,"nodeType":"1406","messageId":"1407","endLine":665,"endColumn":34},{"ruleId":"1404","severity":1,"message":"1408","line":666,"column":32,"nodeType":"1406","messageId":"1407","endLine":666,"endColumn":34},{"ruleId":"1404","severity":1,"message":"1408","line":949,"column":55,"nodeType":"1406","messageId":"1407","endLine":949,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":957,"column":55,"nodeType":"1406","messageId":"1407","endLine":957,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":993,"column":35,"nodeType":"1406","messageId":"1407","endLine":993,"endColumn":37},{"ruleId":"1404","severity":1,"message":"1408","line":1258,"column":38,"nodeType":"1406","messageId":"1407","endLine":1258,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":1263,"column":40,"nodeType":"1406","messageId":"1407","endLine":1263,"endColumn":42},{"ruleId":"1404","severity":1,"message":"1408","line":1268,"column":40,"nodeType":"1406","messageId":"1407","endLine":1268,"endColumn":42},{"ruleId":"1404","severity":1,"message":"1408","line":1280,"column":38,"nodeType":"1406","messageId":"1407","endLine":1280,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":1291,"column":38,"nodeType":"1406","messageId":"1407","endLine":1291,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":1296,"column":40,"nodeType":"1406","messageId":"1407","endLine":1296,"endColumn":42},{"ruleId":"1404","severity":1,"message":"1408","line":1307,"column":38,"nodeType":"1406","messageId":"1407","endLine":1307,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":1318,"column":38,"nodeType":"1406","messageId":"1407","endLine":1318,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":1329,"column":38,"nodeType":"1406","messageId":"1407","endLine":1329,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":1334,"column":40,"nodeType":"1406","messageId":"1407","endLine":1334,"endColumn":42},{"ruleId":"1404","severity":1,"message":"1408","line":1345,"column":38,"nodeType":"1406","messageId":"1407","endLine":1345,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":1356,"column":38,"nodeType":"1406","messageId":"1407","endLine":1356,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":1361,"column":40,"nodeType":"1406","messageId":"1407","endLine":1361,"endColumn":42},{"ruleId":"1394","severity":1,"message":"1398","line":2,"column":8,"nodeType":"1396","messageId":"1397","endLine":2,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1421","line":7,"column":8,"nodeType":"1396","messageId":"1397","endLine":7,"endColumn":29},{"ruleId":"1394","severity":1,"message":"1403","line":14,"column":10,"nodeType":"1396","messageId":"1397","endLine":14,"endColumn":24},{"ruleId":"1394","severity":1,"message":"1423","line":23,"column":8,"nodeType":"1396","messageId":"1397","endLine":23,"endColumn":30},{"ruleId":"1404","severity":1,"message":"1408","line":64,"column":41,"nodeType":"1406","messageId":"1407","endLine":64,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":79,"column":41,"nodeType":"1406","messageId":"1407","endLine":79,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":99,"column":41,"nodeType":"1406","messageId":"1407","endLine":99,"endColumn":43},{"ruleId":"1394","severity":1,"message":"1471","line":152,"column":9,"nodeType":"1396","messageId":"1397","endLine":152,"endColumn":14},{"ruleId":"1404","severity":1,"message":"1408","line":446,"column":55,"nodeType":"1406","messageId":"1407","endLine":446,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":454,"column":55,"nodeType":"1406","messageId":"1407","endLine":454,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1398","line":2,"column":8,"nodeType":"1396","messageId":"1397","endLine":2,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1421","line":7,"column":8,"nodeType":"1396","messageId":"1397","endLine":7,"endColumn":29},{"ruleId":"1394","severity":1,"message":"1472","line":9,"column":8,"nodeType":"1396","messageId":"1397","endLine":9,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1473","line":12,"column":8,"nodeType":"1396","messageId":"1397","endLine":12,"endColumn":12},{"ruleId":"1404","severity":1,"message":"1408","line":61,"column":41,"nodeType":"1406","messageId":"1407","endLine":61,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":74,"column":41,"nodeType":"1406","messageId":"1407","endLine":74,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":94,"column":41,"nodeType":"1406","messageId":"1407","endLine":94,"endColumn":43},{"ruleId":"1394","severity":1,"message":"1471","line":140,"column":9,"nodeType":"1396","messageId":"1397","endLine":140,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1474","line":274,"column":11,"nodeType":"1396","messageId":"1397","endLine":274,"endColumn":24},{"ruleId":"1404","severity":1,"message":"1408","line":396,"column":55,"nodeType":"1406","messageId":"1407","endLine":396,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":404,"column":55,"nodeType":"1406","messageId":"1407","endLine":404,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1398","line":2,"column":8,"nodeType":"1396","messageId":"1397","endLine":2,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1421","line":7,"column":8,"nodeType":"1396","messageId":"1397","endLine":7,"endColumn":29},{"ruleId":"1394","severity":1,"message":"1475","line":8,"column":8,"nodeType":"1396","messageId":"1397","endLine":8,"endColumn":24},{"ruleId":"1394","severity":1,"message":"1472","line":9,"column":8,"nodeType":"1396","messageId":"1397","endLine":9,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1473","line":12,"column":8,"nodeType":"1396","messageId":"1397","endLine":12,"endColumn":12},{"ruleId":"1394","severity":1,"message":"1476","line":30,"column":8,"nodeType":"1396","messageId":"1397","endLine":30,"endColumn":18},{"ruleId":"1404","severity":1,"message":"1408","line":59,"column":41,"nodeType":"1406","messageId":"1407","endLine":59,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":72,"column":41,"nodeType":"1406","messageId":"1407","endLine":72,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":92,"column":41,"nodeType":"1406","messageId":"1407","endLine":92,"endColumn":43},{"ruleId":"1394","severity":1,"message":"1471","line":166,"column":9,"nodeType":"1396","messageId":"1397","endLine":166,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1474","line":265,"column":11,"nodeType":"1396","messageId":"1397","endLine":265,"endColumn":24},{"ruleId":"1404","severity":1,"message":"1408","line":394,"column":55,"nodeType":"1406","messageId":"1407","endLine":394,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":402,"column":55,"nodeType":"1406","messageId":"1407","endLine":402,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1398","line":2,"column":8,"nodeType":"1396","messageId":"1397","endLine":2,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1421","line":8,"column":8,"nodeType":"1396","messageId":"1397","endLine":8,"endColumn":29},{"ruleId":"1394","severity":1,"message":"1438","line":33,"column":33,"nodeType":"1396","messageId":"1397","endLine":33,"endColumn":41},{"ruleId":"1394","severity":1,"message":"1439","line":35,"column":8,"nodeType":"1396","messageId":"1397","endLine":35,"endColumn":22},{"ruleId":"1394","severity":1,"message":"1440","line":36,"column":10,"nodeType":"1396","messageId":"1397","endLine":36,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1408","line":90,"column":41,"nodeType":"1406","messageId":"1407","endLine":90,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":126,"column":97,"nodeType":"1406","messageId":"1407","endLine":126,"endColumn":99},{"ruleId":"1404","severity":1,"message":"1408","line":136,"column":186,"nodeType":"1406","messageId":"1407","endLine":136,"endColumn":188},{"ruleId":"1404","severity":1,"message":"1408","line":172,"column":41,"nodeType":"1406","messageId":"1407","endLine":172,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":195,"column":41,"nodeType":"1406","messageId":"1407","endLine":195,"endColumn":43},{"ruleId":"1417","severity":1,"message":"1418","line":243,"column":7,"nodeType":"1419","endLine":243,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1405","line":277,"column":32,"nodeType":"1406","messageId":"1407","endLine":277,"endColumn":34},{"ruleId":"1404","severity":1,"message":"1408","line":298,"column":46,"nodeType":"1406","messageId":"1407","endLine":298,"endColumn":48},{"ruleId":"1404","severity":1,"message":"1408","line":450,"column":17,"nodeType":"1406","messageId":"1407","endLine":450,"endColumn":19},{"ruleId":"1404","severity":1,"message":"1408","line":450,"column":37,"nodeType":"1406","messageId":"1407","endLine":450,"endColumn":39},{"ruleId":"1404","severity":1,"message":"1408","line":452,"column":23,"nodeType":"1406","messageId":"1407","endLine":452,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":454,"column":23,"nodeType":"1406","messageId":"1407","endLine":454,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":456,"column":23,"nodeType":"1406","messageId":"1407","endLine":456,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":458,"column":23,"nodeType":"1406","messageId":"1407","endLine":458,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":460,"column":23,"nodeType":"1406","messageId":"1407","endLine":460,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":462,"column":23,"nodeType":"1406","messageId":"1407","endLine":462,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":464,"column":23,"nodeType":"1406","messageId":"1407","endLine":464,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":466,"column":23,"nodeType":"1406","messageId":"1407","endLine":466,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":468,"column":23,"nodeType":"1406","messageId":"1407","endLine":468,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":470,"column":23,"nodeType":"1406","messageId":"1407","endLine":470,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":472,"column":23,"nodeType":"1406","messageId":"1407","endLine":472,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":486,"column":37,"nodeType":"1406","messageId":"1407","endLine":486,"endColumn":39},{"ruleId":"1404","severity":1,"message":"1408","line":643,"column":55,"nodeType":"1406","messageId":"1407","endLine":643,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":651,"column":55,"nodeType":"1406","messageId":"1407","endLine":651,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":687,"column":35,"nodeType":"1406","messageId":"1407","endLine":687,"endColumn":37},{"ruleId":"1404","severity":1,"message":"1408","line":949,"column":38,"nodeType":"1406","messageId":"1407","endLine":949,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":954,"column":40,"nodeType":"1406","messageId":"1407","endLine":954,"endColumn":42},{"ruleId":"1404","severity":1,"message":"1408","line":959,"column":40,"nodeType":"1406","messageId":"1407","endLine":959,"endColumn":42},{"ruleId":"1404","severity":1,"message":"1408","line":971,"column":38,"nodeType":"1406","messageId":"1407","endLine":971,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":982,"column":38,"nodeType":"1406","messageId":"1407","endLine":982,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":993,"column":38,"nodeType":"1406","messageId":"1407","endLine":993,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":998,"column":40,"nodeType":"1406","messageId":"1407","endLine":998,"endColumn":42},{"ruleId":"1404","severity":1,"message":"1408","line":1009,"column":38,"nodeType":"1406","messageId":"1407","endLine":1009,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":1020,"column":38,"nodeType":"1406","messageId":"1407","endLine":1020,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":1031,"column":38,"nodeType":"1406","messageId":"1407","endLine":1031,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":1036,"column":40,"nodeType":"1406","messageId":"1407","endLine":1036,"endColumn":42},{"ruleId":"1404","severity":1,"message":"1408","line":1047,"column":38,"nodeType":"1406","messageId":"1407","endLine":1047,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":1052,"column":40,"nodeType":"1406","messageId":"1407","endLine":1052,"endColumn":42},{"ruleId":"1404","severity":1,"message":"1408","line":1206,"column":48,"nodeType":"1406","messageId":"1407","endLine":1206,"endColumn":50},{"ruleId":"1404","severity":1,"message":"1405","line":1295,"column":64,"nodeType":"1406","messageId":"1407","endLine":1295,"endColumn":66},{"ruleId":"1394","severity":1,"message":"1398","line":2,"column":8,"nodeType":"1396","messageId":"1397","endLine":2,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1421","line":7,"column":8,"nodeType":"1396","messageId":"1397","endLine":7,"endColumn":29},{"ruleId":"1394","severity":1,"message":"1403","line":13,"column":10,"nodeType":"1396","messageId":"1397","endLine":13,"endColumn":24},{"ruleId":"1404","severity":1,"message":"1408","line":61,"column":41,"nodeType":"1406","messageId":"1407","endLine":61,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":158,"column":41,"nodeType":"1406","messageId":"1407","endLine":158,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":178,"column":41,"nodeType":"1406","messageId":"1407","endLine":178,"endColumn":43},{"ruleId":"1394","severity":1,"message":"1471","line":231,"column":9,"nodeType":"1396","messageId":"1397","endLine":231,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1474","line":330,"column":11,"nodeType":"1396","messageId":"1397","endLine":330,"endColumn":24},{"ruleId":"1394","severity":1,"message":"1477","line":349,"column":11,"nodeType":"1396","messageId":"1397","endLine":349,"endColumn":26},{"ruleId":"1404","severity":1,"message":"1408","line":466,"column":55,"nodeType":"1406","messageId":"1407","endLine":466,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":474,"column":55,"nodeType":"1406","messageId":"1407","endLine":474,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1398","line":2,"column":8,"nodeType":"1396","messageId":"1397","endLine":2,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1421","line":8,"column":8,"nodeType":"1396","messageId":"1397","endLine":8,"endColumn":29},{"ruleId":"1394","severity":1,"message":"1478","line":14,"column":10,"nodeType":"1396","messageId":"1397","endLine":14,"endColumn":22},{"ruleId":"1394","severity":1,"message":"1479","line":14,"column":24,"nodeType":"1396","messageId":"1397","endLine":14,"endColumn":33},{"ruleId":"1394","severity":1,"message":"1480","line":33,"column":10,"nodeType":"1396","messageId":"1397","endLine":33,"endColumn":15},{"ruleId":"1394","severity":1,"message":"1438","line":37,"column":33,"nodeType":"1396","messageId":"1397","endLine":37,"endColumn":41},{"ruleId":"1394","severity":1,"message":"1440","line":40,"column":10,"nodeType":"1396","messageId":"1397","endLine":40,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1408","line":97,"column":41,"nodeType":"1406","messageId":"1407","endLine":97,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":133,"column":97,"nodeType":"1406","messageId":"1407","endLine":133,"endColumn":99},{"ruleId":"1404","severity":1,"message":"1408","line":143,"column":186,"nodeType":"1406","messageId":"1407","endLine":143,"endColumn":188},{"ruleId":"1404","severity":1,"message":"1408","line":188,"column":41,"nodeType":"1406","messageId":"1407","endLine":188,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":211,"column":41,"nodeType":"1406","messageId":"1407","endLine":211,"endColumn":43},{"ruleId":"1417","severity":1,"message":"1418","line":259,"column":7,"nodeType":"1419","endLine":259,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1405","line":293,"column":32,"nodeType":"1406","messageId":"1407","endLine":293,"endColumn":34},{"ruleId":"1404","severity":1,"message":"1408","line":468,"column":17,"nodeType":"1406","messageId":"1407","endLine":468,"endColumn":19},{"ruleId":"1404","severity":1,"message":"1408","line":468,"column":37,"nodeType":"1406","messageId":"1407","endLine":468,"endColumn":39},{"ruleId":"1404","severity":1,"message":"1408","line":470,"column":23,"nodeType":"1406","messageId":"1407","endLine":470,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":472,"column":23,"nodeType":"1406","messageId":"1407","endLine":472,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":474,"column":23,"nodeType":"1406","messageId":"1407","endLine":474,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":476,"column":23,"nodeType":"1406","messageId":"1407","endLine":476,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":478,"column":23,"nodeType":"1406","messageId":"1407","endLine":478,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":480,"column":23,"nodeType":"1406","messageId":"1407","endLine":480,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":482,"column":23,"nodeType":"1406","messageId":"1407","endLine":482,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":484,"column":23,"nodeType":"1406","messageId":"1407","endLine":484,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":486,"column":23,"nodeType":"1406","messageId":"1407","endLine":486,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":488,"column":23,"nodeType":"1406","messageId":"1407","endLine":488,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":490,"column":23,"nodeType":"1406","messageId":"1407","endLine":490,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":515,"column":37,"nodeType":"1406","messageId":"1407","endLine":515,"endColumn":39},{"ruleId":"1404","severity":1,"message":"1408","line":703,"column":55,"nodeType":"1406","messageId":"1407","endLine":703,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":711,"column":55,"nodeType":"1406","messageId":"1407","endLine":711,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":747,"column":35,"nodeType":"1406","messageId":"1407","endLine":747,"endColumn":37},{"ruleId":"1404","severity":1,"message":"1408","line":842,"column":60,"nodeType":"1406","messageId":"1407","endLine":842,"endColumn":62},{"ruleId":"1404","severity":1,"message":"1408","line":1046,"column":38,"nodeType":"1406","messageId":"1407","endLine":1046,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":1051,"column":40,"nodeType":"1406","messageId":"1407","endLine":1051,"endColumn":42},{"ruleId":"1404","severity":1,"message":"1408","line":1056,"column":40,"nodeType":"1406","messageId":"1407","endLine":1056,"endColumn":42},{"ruleId":"1404","severity":1,"message":"1408","line":1068,"column":38,"nodeType":"1406","messageId":"1407","endLine":1068,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":1079,"column":38,"nodeType":"1406","messageId":"1407","endLine":1079,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":1090,"column":38,"nodeType":"1406","messageId":"1407","endLine":1090,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":1095,"column":40,"nodeType":"1406","messageId":"1407","endLine":1095,"endColumn":42},{"ruleId":"1404","severity":1,"message":"1408","line":1106,"column":38,"nodeType":"1406","messageId":"1407","endLine":1106,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":1117,"column":38,"nodeType":"1406","messageId":"1407","endLine":1117,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":1128,"column":38,"nodeType":"1406","messageId":"1407","endLine":1128,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":1133,"column":40,"nodeType":"1406","messageId":"1407","endLine":1133,"endColumn":42},{"ruleId":"1404","severity":1,"message":"1408","line":1144,"column":38,"nodeType":"1406","messageId":"1407","endLine":1144,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":1149,"column":40,"nodeType":"1406","messageId":"1407","endLine":1149,"endColumn":42},{"ruleId":"1404","severity":1,"message":"1408","line":1293,"column":48,"nodeType":"1406","messageId":"1407","endLine":1293,"endColumn":50},{"ruleId":"1404","severity":1,"message":"1405","line":1382,"column":64,"nodeType":"1406","messageId":"1407","endLine":1382,"endColumn":66},{"ruleId":"1394","severity":1,"message":"1398","line":2,"column":8,"nodeType":"1396","messageId":"1397","endLine":2,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1421","line":9,"column":8,"nodeType":"1396","messageId":"1397","endLine":9,"endColumn":29},{"ruleId":"1394","severity":1,"message":"1462","line":10,"column":8,"nodeType":"1396","messageId":"1397","endLine":10,"endColumn":21},{"ruleId":"1394","severity":1,"message":"1403","line":22,"column":10,"nodeType":"1396","messageId":"1397","endLine":22,"endColumn":24},{"ruleId":"1404","severity":1,"message":"1408","line":47,"column":41,"nodeType":"1406","messageId":"1407","endLine":47,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":60,"column":29,"nodeType":"1406","messageId":"1407","endLine":60,"endColumn":31},{"ruleId":"1404","severity":1,"message":"1408","line":67,"column":32,"nodeType":"1406","messageId":"1407","endLine":67,"endColumn":34},{"ruleId":"1404","severity":1,"message":"1408","line":72,"column":25,"nodeType":"1406","messageId":"1407","endLine":72,"endColumn":27},{"ruleId":"1404","severity":1,"message":"1408","line":120,"column":41,"nodeType":"1406","messageId":"1407","endLine":120,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":143,"column":41,"nodeType":"1406","messageId":"1407","endLine":143,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":307,"column":55,"nodeType":"1406","messageId":"1407","endLine":307,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":315,"column":55,"nodeType":"1406","messageId":"1407","endLine":315,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1398","line":6,"column":8,"nodeType":"1396","messageId":"1397","endLine":6,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1481","line":8,"column":8,"nodeType":"1396","messageId":"1397","endLine":8,"endColumn":22},{"ruleId":"1394","severity":1,"message":"1482","line":11,"column":10,"nodeType":"1396","messageId":"1397","endLine":11,"endColumn":20},{"ruleId":"1394","severity":1,"message":"1483","line":21,"column":8,"nodeType":"1396","messageId":"1397","endLine":21,"endColumn":18},{"ruleId":"1394","severity":1,"message":"1484","line":22,"column":8,"nodeType":"1396","messageId":"1397","endLine":22,"endColumn":22},{"ruleId":"1394","severity":1,"message":"1462","line":26,"column":8,"nodeType":"1396","messageId":"1397","endLine":26,"endColumn":21},{"ruleId":"1417","severity":1,"message":"1418","line":103,"column":7,"nodeType":"1419","endLine":103,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1408","line":111,"column":41,"nodeType":"1406","messageId":"1407","endLine":111,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":131,"column":41,"nodeType":"1406","messageId":"1407","endLine":131,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":179,"column":41,"nodeType":"1406","messageId":"1407","endLine":179,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":193,"column":26,"nodeType":"1406","messageId":"1407","endLine":193,"endColumn":28},{"ruleId":"1404","severity":1,"message":"1408","line":197,"column":33,"nodeType":"1406","messageId":"1407","endLine":197,"endColumn":35},{"ruleId":"1404","severity":1,"message":"1408","line":201,"column":33,"nodeType":"1406","messageId":"1407","endLine":201,"endColumn":35},{"ruleId":"1404","severity":1,"message":"1408","line":335,"column":55,"nodeType":"1406","messageId":"1407","endLine":335,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":343,"column":55,"nodeType":"1406","messageId":"1407","endLine":343,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":432,"column":51,"nodeType":"1406","messageId":"1407","endLine":432,"endColumn":53},{"ruleId":"1404","severity":1,"message":"1408","line":438,"column":51,"nodeType":"1406","messageId":"1407","endLine":438,"endColumn":53},{"ruleId":"1404","severity":1,"message":"1408","line":445,"column":51,"nodeType":"1406","messageId":"1407","endLine":445,"endColumn":53},{"ruleId":"1404","severity":1,"message":"1408","line":451,"column":52,"nodeType":"1406","messageId":"1407","endLine":451,"endColumn":54},{"ruleId":"1394","severity":1,"message":"1398","line":2,"column":8,"nodeType":"1396","messageId":"1397","endLine":2,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1403","line":19,"column":10,"nodeType":"1396","messageId":"1397","endLine":19,"endColumn":24},{"ruleId":"1404","severity":1,"message":"1408","line":47,"column":41,"nodeType":"1406","messageId":"1407","endLine":47,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":67,"column":41,"nodeType":"1406","messageId":"1407","endLine":67,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":221,"column":55,"nodeType":"1406","messageId":"1407","endLine":221,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":229,"column":55,"nodeType":"1406","messageId":"1407","endLine":229,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1485","line":3,"column":10,"nodeType":"1396","messageId":"1397","endLine":3,"endColumn":13},{"ruleId":"1394","severity":1,"message":"1486","line":6,"column":7,"nodeType":"1396","messageId":"1397","endLine":6,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1487","line":50,"column":9,"nodeType":"1396","messageId":"1397","endLine":50,"endColumn":13},{"ruleId":"1417","severity":1,"message":"1418","line":62,"column":5,"nodeType":"1419","endLine":62,"endColumn":15},{"ruleId":"1394","severity":1,"message":"1488","line":68,"column":16,"nodeType":"1396","messageId":"1397","endLine":68,"endColumn":23},{"ruleId":"1394","severity":1,"message":"1489","line":70,"column":7,"nodeType":"1396","messageId":"1397","endLine":70,"endColumn":19},{"ruleId":"1394","severity":1,"message":"1490","line":71,"column":7,"nodeType":"1396","messageId":"1397","endLine":71,"endColumn":25},{"ruleId":"1394","severity":1,"message":"1491","line":73,"column":7,"nodeType":"1396","messageId":"1397","endLine":73,"endColumn":26},{"ruleId":"1394","severity":1,"message":"1492","line":74,"column":14,"nodeType":"1396","messageId":"1397","endLine":74,"endColumn":28},{"ruleId":"1394","severity":1,"message":"1493","line":74,"column":30,"nodeType":"1396","messageId":"1397","endLine":74,"endColumn":35},{"ruleId":"1394","severity":1,"message":"1494","line":74,"column":36,"nodeType":"1396","messageId":"1397","endLine":74,"endColumn":41},{"ruleId":"1394","severity":1,"message":"1495","line":74,"column":42,"nodeType":"1396","messageId":"1397","endLine":74,"endColumn":55},{"ruleId":"1394","severity":1,"message":"1398","line":6,"column":8,"nodeType":"1396","messageId":"1397","endLine":6,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1403","line":17,"column":10,"nodeType":"1396","messageId":"1397","endLine":17,"endColumn":24},{"ruleId":"1404","severity":1,"message":"1408","line":50,"column":41,"nodeType":"1406","messageId":"1407","endLine":50,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":70,"column":41,"nodeType":"1406","messageId":"1407","endLine":70,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":119,"column":41,"nodeType":"1406","messageId":"1407","endLine":119,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":254,"column":55,"nodeType":"1406","messageId":"1407","endLine":254,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":262,"column":55,"nodeType":"1406","messageId":"1407","endLine":262,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1398","line":3,"column":8,"nodeType":"1396","messageId":"1397","endLine":3,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1421","line":8,"column":8,"nodeType":"1396","messageId":"1397","endLine":8,"endColumn":29},{"ruleId":"1394","severity":1,"message":"1496","line":18,"column":8,"nodeType":"1396","messageId":"1397","endLine":18,"endColumn":24},{"ruleId":"1394","severity":1,"message":"1438","line":35,"column":33,"nodeType":"1396","messageId":"1397","endLine":35,"endColumn":41},{"ruleId":"1394","severity":1,"message":"1439","line":37,"column":8,"nodeType":"1396","messageId":"1397","endLine":37,"endColumn":22},{"ruleId":"1394","severity":1,"message":"1440","line":38,"column":10,"nodeType":"1396","messageId":"1397","endLine":38,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1408","line":90,"column":41,"nodeType":"1406","messageId":"1407","endLine":90,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":125,"column":89,"nodeType":"1406","messageId":"1407","endLine":125,"endColumn":91},{"ruleId":"1404","severity":1,"message":"1408","line":135,"column":159,"nodeType":"1406","messageId":"1407","endLine":135,"endColumn":161},{"ruleId":"1417","severity":1,"message":"1418","line":157,"column":13,"nodeType":"1419","endLine":157,"endColumn":23},{"ruleId":"1417","severity":1,"message":"1418","line":159,"column":13,"nodeType":"1419","endLine":159,"endColumn":23},{"ruleId":"1404","severity":1,"message":"1408","line":183,"column":41,"nodeType":"1406","messageId":"1407","endLine":183,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":203,"column":41,"nodeType":"1406","messageId":"1407","endLine":203,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":367,"column":50,"nodeType":"1406","messageId":"1407","endLine":367,"endColumn":52},{"ruleId":"1417","severity":1,"message":"1418","line":383,"column":7,"nodeType":"1419","endLine":383,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1408","line":389,"column":17,"nodeType":"1406","messageId":"1407","endLine":389,"endColumn":19},{"ruleId":"1404","severity":1,"message":"1408","line":389,"column":37,"nodeType":"1406","messageId":"1407","endLine":389,"endColumn":39},{"ruleId":"1404","severity":1,"message":"1408","line":391,"column":23,"nodeType":"1406","messageId":"1407","endLine":391,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":393,"column":23,"nodeType":"1406","messageId":"1407","endLine":393,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":395,"column":23,"nodeType":"1406","messageId":"1407","endLine":395,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":397,"column":23,"nodeType":"1406","messageId":"1407","endLine":397,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":399,"column":23,"nodeType":"1406","messageId":"1407","endLine":399,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":401,"column":23,"nodeType":"1406","messageId":"1407","endLine":401,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":403,"column":23,"nodeType":"1406","messageId":"1407","endLine":403,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":405,"column":23,"nodeType":"1406","messageId":"1407","endLine":405,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":407,"column":23,"nodeType":"1406","messageId":"1407","endLine":407,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":409,"column":23,"nodeType":"1406","messageId":"1407","endLine":409,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":411,"column":23,"nodeType":"1406","messageId":"1407","endLine":411,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1408","line":435,"column":37,"nodeType":"1406","messageId":"1407","endLine":435,"endColumn":39},{"ruleId":"1404","severity":1,"message":"1408","line":588,"column":55,"nodeType":"1406","messageId":"1407","endLine":588,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":596,"column":55,"nodeType":"1406","messageId":"1407","endLine":596,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":632,"column":35,"nodeType":"1406","messageId":"1407","endLine":632,"endColumn":37},{"ruleId":"1404","severity":1,"message":"1408","line":783,"column":42,"nodeType":"1406","messageId":"1407","endLine":783,"endColumn":44},{"ruleId":"1404","severity":1,"message":"1408","line":788,"column":44,"nodeType":"1406","messageId":"1407","endLine":788,"endColumn":46},{"ruleId":"1404","severity":1,"message":"1408","line":793,"column":44,"nodeType":"1406","messageId":"1407","endLine":793,"endColumn":46},{"ruleId":"1404","severity":1,"message":"1408","line":805,"column":42,"nodeType":"1406","messageId":"1407","endLine":805,"endColumn":44},{"ruleId":"1404","severity":1,"message":"1408","line":816,"column":42,"nodeType":"1406","messageId":"1407","endLine":816,"endColumn":44},{"ruleId":"1404","severity":1,"message":"1408","line":827,"column":42,"nodeType":"1406","messageId":"1407","endLine":827,"endColumn":44},{"ruleId":"1404","severity":1,"message":"1408","line":832,"column":44,"nodeType":"1406","messageId":"1407","endLine":832,"endColumn":46},{"ruleId":"1404","severity":1,"message":"1408","line":843,"column":42,"nodeType":"1406","messageId":"1407","endLine":843,"endColumn":44},{"ruleId":"1404","severity":1,"message":"1408","line":854,"column":42,"nodeType":"1406","messageId":"1407","endLine":854,"endColumn":44},{"ruleId":"1404","severity":1,"message":"1408","line":865,"column":42,"nodeType":"1406","messageId":"1407","endLine":865,"endColumn":44},{"ruleId":"1404","severity":1,"message":"1408","line":870,"column":44,"nodeType":"1406","messageId":"1407","endLine":870,"endColumn":46},{"ruleId":"1404","severity":1,"message":"1408","line":881,"column":42,"nodeType":"1406","messageId":"1407","endLine":881,"endColumn":44},{"ruleId":"1404","severity":1,"message":"1408","line":886,"column":44,"nodeType":"1406","messageId":"1407","endLine":886,"endColumn":46},{"ruleId":"1404","severity":1,"message":"1408","line":1059,"column":54,"nodeType":"1406","messageId":"1407","endLine":1059,"endColumn":56},{"ruleId":"1394","severity":1,"message":"1398","line":2,"column":8,"nodeType":"1396","messageId":"1397","endLine":2,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1421","line":8,"column":8,"nodeType":"1396","messageId":"1397","endLine":8,"endColumn":29},{"ruleId":"1394","severity":1,"message":"1482","line":13,"column":10,"nodeType":"1396","messageId":"1397","endLine":13,"endColumn":20},{"ruleId":"1394","severity":1,"message":"1424","line":17,"column":8,"nodeType":"1396","messageId":"1397","endLine":17,"endColumn":21},{"ruleId":"1457","severity":1,"message":"1464","line":58,"column":7,"nodeType":"1459","messageId":"1407","endLine":58,"endColumn":22},{"ruleId":"1404","severity":1,"message":"1408","line":91,"column":41,"nodeType":"1406","messageId":"1407","endLine":91,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":184,"column":41,"nodeType":"1406","messageId":"1407","endLine":184,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":204,"column":41,"nodeType":"1406","messageId":"1407","endLine":204,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":274,"column":15,"nodeType":"1406","messageId":"1407","endLine":274,"endColumn":17},{"ruleId":"1394","severity":1,"message":"1465","line":306,"column":9,"nodeType":"1396","messageId":"1397","endLine":306,"endColumn":13},{"ruleId":"1417","severity":1,"message":"1418","line":313,"column":11,"nodeType":"1419","endLine":313,"endColumn":21},{"ruleId":"1417","severity":1,"message":"1418","line":338,"column":10,"nodeType":"1419","endLine":338,"endColumn":20},{"ruleId":"1404","severity":1,"message":"1408","line":357,"column":34,"nodeType":"1406","messageId":"1407","endLine":357,"endColumn":36},{"ruleId":"1394","severity":1,"message":"1425","line":387,"column":9,"nodeType":"1396","messageId":"1397","endLine":387,"endColumn":14},{"ruleId":"1417","severity":1,"message":"1418","line":395,"column":11,"nodeType":"1419","endLine":395,"endColumn":21},{"ruleId":"1426","severity":1,"message":"1427","line":407,"column":18,"nodeType":"1396","messageId":"1428","endLine":407,"endColumn":19},{"ruleId":"1417","severity":1,"message":"1418","line":440,"column":10,"nodeType":"1419","endLine":440,"endColumn":20},{"ruleId":"1404","severity":1,"message":"1408","line":477,"column":32,"nodeType":"1406","messageId":"1407","endLine":477,"endColumn":34},{"ruleId":"1404","severity":1,"message":"1408","line":478,"column":32,"nodeType":"1406","messageId":"1407","endLine":478,"endColumn":34},{"ruleId":"1466","severity":1,"message":"1467","line":589,"column":3,"nodeType":"1468","messageId":"1407","endLine":593,"endColumn":4},{"ruleId":"1404","severity":1,"message":"1408","line":706,"column":55,"nodeType":"1406","messageId":"1407","endLine":706,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":714,"column":55,"nodeType":"1406","messageId":"1407","endLine":714,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1497","line":1,"column":8,"nodeType":"1396","messageId":"1397","endLine":1,"endColumn":30},{"ruleId":"1457","severity":1,"message":"1498","line":76,"column":4,"nodeType":"1459","messageId":"1407","endLine":76,"endColumn":21},{"ruleId":"1394","severity":1,"message":"1451","line":7,"column":8,"nodeType":"1396","messageId":"1397","endLine":7,"endColumn":25},{"ruleId":"1394","severity":1,"message":"1455","line":13,"column":8,"nodeType":"1396","messageId":"1397","endLine":13,"endColumn":16},{"ruleId":"1394","severity":1,"message":"1496","line":14,"column":8,"nodeType":"1396","messageId":"1397","endLine":14,"endColumn":24},{"ruleId":"1394","severity":1,"message":"1499","line":15,"column":8,"nodeType":"1396","messageId":"1397","endLine":15,"endColumn":12},{"ruleId":"1394","severity":1,"message":"1500","line":16,"column":8,"nodeType":"1396","messageId":"1397","endLine":16,"endColumn":16},{"ruleId":"1394","severity":1,"message":"1402","line":17,"column":10,"nodeType":"1396","messageId":"1397","endLine":17,"endColumn":17},{"ruleId":"1394","severity":1,"message":"1400","line":19,"column":10,"nodeType":"1396","messageId":"1397","endLine":19,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1456","line":21,"column":8,"nodeType":"1396","messageId":"1397","endLine":21,"endColumn":24},{"ruleId":"1394","severity":1,"message":"1401","line":22,"column":8,"nodeType":"1396","messageId":"1397","endLine":22,"endColumn":15},{"ruleId":"1404","severity":1,"message":"1408","line":59,"column":41,"nodeType":"1406","messageId":"1407","endLine":59,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":79,"column":41,"nodeType":"1406","messageId":"1407","endLine":79,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":234,"column":55,"nodeType":"1406","messageId":"1407","endLine":234,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1408","line":242,"column":55,"nodeType":"1406","messageId":"1407","endLine":242,"endColumn":57},{"ruleId":"1394","severity":1,"message":"1485","line":3,"column":10,"nodeType":"1396","messageId":"1397","endLine":3,"endColumn":13},{"ruleId":"1394","severity":1,"message":"1501","line":68,"column":15,"nodeType":"1396","messageId":"1397","endLine":68,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1405","line":173,"column":94,"nodeType":"1406","messageId":"1407","endLine":173,"endColumn":96},{"ruleId":"1404","severity":1,"message":"1408","line":173,"column":145,"nodeType":"1406","messageId":"1407","endLine":173,"endColumn":147},{"ruleId":"1404","severity":1,"message":"1408","line":174,"column":44,"nodeType":"1406","messageId":"1407","endLine":174,"endColumn":46},{"ruleId":"1404","severity":1,"message":"1405","line":181,"column":94,"nodeType":"1406","messageId":"1407","endLine":181,"endColumn":96},{"ruleId":"1404","severity":1,"message":"1408","line":181,"column":145,"nodeType":"1406","messageId":"1407","endLine":181,"endColumn":147},{"ruleId":"1404","severity":1,"message":"1408","line":182,"column":44,"nodeType":"1406","messageId":"1407","endLine":182,"endColumn":46},{"ruleId":"1404","severity":1,"message":"1405","line":189,"column":94,"nodeType":"1406","messageId":"1407","endLine":189,"endColumn":96},{"ruleId":"1404","severity":1,"message":"1408","line":189,"column":145,"nodeType":"1406","messageId":"1407","endLine":189,"endColumn":147},{"ruleId":"1394","severity":1,"message":"1502","line":6,"column":9,"nodeType":"1396","messageId":"1397","endLine":6,"endColumn":18},{"ruleId":"1394","severity":1,"message":"1503","line":18,"column":8,"nodeType":"1396","messageId":"1397","endLine":18,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1443","line":19,"column":8,"nodeType":"1396","messageId":"1397","endLine":19,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1403","line":10,"column":10,"nodeType":"1396","messageId":"1397","endLine":10,"endColumn":24},{"ruleId":"1394","severity":1,"message":"1462","line":12,"column":8,"nodeType":"1396","messageId":"1397","endLine":12,"endColumn":21},{"ruleId":"1404","severity":1,"message":"1408","line":67,"column":74,"nodeType":"1406","messageId":"1407","endLine":67,"endColumn":76},{"ruleId":"1404","severity":1,"message":"1408","line":110,"column":41,"nodeType":"1406","messageId":"1407","endLine":110,"endColumn":43},{"ruleId":"1417","severity":1,"message":"1418","line":145,"column":7,"nodeType":"1419","endLine":145,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1408","line":199,"column":44,"nodeType":"1406","messageId":"1407","endLine":199,"endColumn":46},{"ruleId":"1404","severity":1,"message":"1408","line":211,"column":44,"nodeType":"1406","messageId":"1407","endLine":211,"endColumn":46},{"ruleId":"1394","severity":1,"message":"1403","line":10,"column":10,"nodeType":"1396","messageId":"1397","endLine":10,"endColumn":24},{"ruleId":"1394","severity":1,"message":"1462","line":12,"column":8,"nodeType":"1396","messageId":"1397","endLine":12,"endColumn":21},{"ruleId":"1404","severity":1,"message":"1408","line":67,"column":74,"nodeType":"1406","messageId":"1407","endLine":67,"endColumn":76},{"ruleId":"1404","severity":1,"message":"1408","line":111,"column":41,"nodeType":"1406","messageId":"1407","endLine":111,"endColumn":43},{"ruleId":"1417","severity":1,"message":"1418","line":145,"column":7,"nodeType":"1419","endLine":145,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1408","line":199,"column":44,"nodeType":"1406","messageId":"1407","endLine":199,"endColumn":46},{"ruleId":"1404","severity":1,"message":"1408","line":211,"column":44,"nodeType":"1406","messageId":"1407","endLine":211,"endColumn":46},{"ruleId":"1394","severity":1,"message":"1462","line":10,"column":8,"nodeType":"1396","messageId":"1397","endLine":10,"endColumn":21},{"ruleId":"1394","severity":1,"message":"1403","line":11,"column":10,"nodeType":"1396","messageId":"1397","endLine":11,"endColumn":24},{"ruleId":"1404","severity":1,"message":"1408","line":66,"column":74,"nodeType":"1406","messageId":"1407","endLine":66,"endColumn":76},{"ruleId":"1404","severity":1,"message":"1408","line":110,"column":41,"nodeType":"1406","messageId":"1407","endLine":110,"endColumn":43},{"ruleId":"1417","severity":1,"message":"1418","line":142,"column":7,"nodeType":"1419","endLine":142,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1408","line":196,"column":44,"nodeType":"1406","messageId":"1407","endLine":196,"endColumn":46},{"ruleId":"1404","severity":1,"message":"1408","line":208,"column":44,"nodeType":"1406","messageId":"1407","endLine":208,"endColumn":46},{"ruleId":"1394","severity":1,"message":"1400","line":8,"column":10,"nodeType":"1396","messageId":"1397","endLine":8,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1403","line":11,"column":10,"nodeType":"1396","messageId":"1397","endLine":11,"endColumn":24},{"ruleId":"1394","severity":1,"message":"1462","line":13,"column":8,"nodeType":"1396","messageId":"1397","endLine":13,"endColumn":21},{"ruleId":"1404","severity":1,"message":"1408","line":66,"column":41,"nodeType":"1406","messageId":"1407","endLine":66,"endColumn":43},{"ruleId":"1417","severity":1,"message":"1418","line":95,"column":7,"nodeType":"1419","endLine":95,"endColumn":17},{"ruleId":"1394","severity":1,"message":"1400","line":8,"column":10,"nodeType":"1396","messageId":"1397","endLine":8,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1403","line":11,"column":10,"nodeType":"1396","messageId":"1397","endLine":11,"endColumn":24},{"ruleId":"1394","severity":1,"message":"1462","line":13,"column":8,"nodeType":"1396","messageId":"1397","endLine":13,"endColumn":21},{"ruleId":"1404","severity":1,"message":"1408","line":69,"column":41,"nodeType":"1406","messageId":"1407","endLine":69,"endColumn":43},{"ruleId":"1417","severity":1,"message":"1418","line":94,"column":7,"nodeType":"1419","endLine":94,"endColumn":17},{"ruleId":"1394","severity":1,"message":"1403","line":3,"column":10,"nodeType":"1396","messageId":"1397","endLine":3,"endColumn":24},{"ruleId":"1404","severity":1,"message":"1408","line":12,"column":92,"nodeType":"1406","messageId":"1407","endLine":12,"endColumn":94},{"ruleId":"1394","severity":1,"message":"1403","line":3,"column":10,"nodeType":"1396","messageId":"1397","endLine":3,"endColumn":24},{"ruleId":"1404","severity":1,"message":"1408","line":10,"column":90,"nodeType":"1406","messageId":"1407","endLine":10,"endColumn":92},{"ruleId":"1394","severity":1,"message":"1403","line":3,"column":10,"nodeType":"1396","messageId":"1397","endLine":3,"endColumn":24},{"ruleId":"1404","severity":1,"message":"1408","line":10,"column":88,"nodeType":"1406","messageId":"1407","endLine":10,"endColumn":90},{"ruleId":"1404","severity":1,"message":"1408","line":28,"column":88,"nodeType":"1406","messageId":"1407","endLine":28,"endColumn":90},{"ruleId":"1404","severity":1,"message":"1408","line":46,"column":88,"nodeType":"1406","messageId":"1407","endLine":46,"endColumn":90},{"ruleId":"1404","severity":1,"message":"1408","line":64,"column":90,"nodeType":"1406","messageId":"1407","endLine":64,"endColumn":92},{"ruleId":"1404","severity":1,"message":"1408","line":86,"column":90,"nodeType":"1406","messageId":"1407","endLine":86,"endColumn":92},{"ruleId":"1404","severity":1,"message":"1408","line":106,"column":90,"nodeType":"1406","messageId":"1407","endLine":106,"endColumn":92},{"ruleId":"1404","severity":1,"message":"1408","line":125,"column":90,"nodeType":"1406","messageId":"1407","endLine":125,"endColumn":92},{"ruleId":"1394","severity":1,"message":"1400","line":9,"column":10,"nodeType":"1396","messageId":"1397","endLine":9,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1403","line":12,"column":10,"nodeType":"1396","messageId":"1397","endLine":12,"endColumn":24},{"ruleId":"1394","severity":1,"message":"1462","line":14,"column":8,"nodeType":"1396","messageId":"1397","endLine":14,"endColumn":21},{"ruleId":"1404","severity":1,"message":"1408","line":64,"column":41,"nodeType":"1406","messageId":"1407","endLine":64,"endColumn":43},{"ruleId":"1417","severity":1,"message":"1418","line":89,"column":7,"nodeType":"1419","endLine":89,"endColumn":17},{"ruleId":"1394","severity":1,"message":"1434","line":6,"column":8,"nodeType":"1396","messageId":"1397","endLine":6,"endColumn":22},{"ruleId":"1394","severity":1,"message":"1414","line":10,"column":8,"nodeType":"1396","messageId":"1397","endLine":10,"endColumn":19},{"ruleId":"1394","severity":1,"message":"1415","line":11,"column":8,"nodeType":"1396","messageId":"1397","endLine":11,"endColumn":14},{"ruleId":"1404","severity":1,"message":"1408","line":49,"column":39,"nodeType":"1406","messageId":"1407","endLine":49,"endColumn":41},{"ruleId":"1404","severity":1,"message":"1408","line":61,"column":39,"nodeType":"1406","messageId":"1407","endLine":61,"endColumn":41},{"ruleId":"1404","severity":1,"message":"1408","line":73,"column":43,"nodeType":"1406","messageId":"1407","endLine":73,"endColumn":45},{"ruleId":"1404","severity":1,"message":"1405","line":131,"column":34,"nodeType":"1406","messageId":"1407","endLine":131,"endColumn":36},{"ruleId":"1404","severity":1,"message":"1408","line":194,"column":41,"nodeType":"1406","messageId":"1407","endLine":194,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":194,"column":73,"nodeType":"1406","messageId":"1407","endLine":194,"endColumn":75},{"ruleId":"1448","severity":1,"message":"1449","line":487,"column":29,"nodeType":"1450","endLine":487,"endColumn":59},{"ruleId":"1448","severity":1,"message":"1449","line":511,"column":29,"nodeType":"1450","endLine":511,"endColumn":59},{"ruleId":"1404","severity":1,"message":"1405","line":73,"column":114,"nodeType":"1406","messageId":"1407","endLine":73,"endColumn":116},{"ruleId":"1404","severity":1,"message":"1405","line":76,"column":106,"nodeType":"1406","messageId":"1407","endLine":76,"endColumn":108},{"ruleId":"1404","severity":1,"message":"1405","line":79,"column":100,"nodeType":"1406","messageId":"1407","endLine":79,"endColumn":102},{"ruleId":"1404","severity":1,"message":"1405","line":82,"column":106,"nodeType":"1406","messageId":"1407","endLine":82,"endColumn":108},{"ruleId":"1404","severity":1,"message":"1405","line":85,"column":114,"nodeType":"1406","messageId":"1407","endLine":85,"endColumn":116},{"ruleId":"1404","severity":1,"message":"1405","line":100,"column":114,"nodeType":"1406","messageId":"1407","endLine":100,"endColumn":116},{"ruleId":"1404","severity":1,"message":"1405","line":104,"column":106,"nodeType":"1406","messageId":"1407","endLine":104,"endColumn":108},{"ruleId":"1404","severity":1,"message":"1405","line":108,"column":100,"nodeType":"1406","messageId":"1407","endLine":108,"endColumn":102},{"ruleId":"1404","severity":1,"message":"1405","line":112,"column":106,"nodeType":"1406","messageId":"1407","endLine":112,"endColumn":108},{"ruleId":"1404","severity":1,"message":"1405","line":116,"column":114,"nodeType":"1406","messageId":"1407","endLine":116,"endColumn":116},{"ruleId":"1404","severity":1,"message":"1405","line":127,"column":112,"nodeType":"1406","messageId":"1407","endLine":127,"endColumn":114},{"ruleId":"1404","severity":1,"message":"1405","line":130,"column":104,"nodeType":"1406","messageId":"1407","endLine":130,"endColumn":106},{"ruleId":"1404","severity":1,"message":"1405","line":133,"column":98,"nodeType":"1406","messageId":"1407","endLine":133,"endColumn":100},{"ruleId":"1404","severity":1,"message":"1405","line":136,"column":104,"nodeType":"1406","messageId":"1407","endLine":136,"endColumn":106},{"ruleId":"1404","severity":1,"message":"1405","line":139,"column":112,"nodeType":"1406","messageId":"1407","endLine":139,"endColumn":114},{"ruleId":"1394","severity":1,"message":"1504","line":145,"column":11,"nodeType":"1396","messageId":"1397","endLine":145,"endColumn":23},{"ruleId":"1404","severity":1,"message":"1405","line":187,"column":112,"nodeType":"1406","messageId":"1407","endLine":187,"endColumn":114},{"ruleId":"1404","severity":1,"message":"1405","line":194,"column":104,"nodeType":"1406","messageId":"1407","endLine":194,"endColumn":106},{"ruleId":"1404","severity":1,"message":"1405","line":200,"column":98,"nodeType":"1406","messageId":"1407","endLine":200,"endColumn":100},{"ruleId":"1404","severity":1,"message":"1405","line":206,"column":104,"nodeType":"1406","messageId":"1407","endLine":206,"endColumn":106},{"ruleId":"1404","severity":1,"message":"1405","line":212,"column":112,"nodeType":"1406","messageId":"1407","endLine":212,"endColumn":114},{"ruleId":"1394","severity":1,"message":"1414","line":16,"column":8,"nodeType":"1396","messageId":"1397","endLine":16,"endColumn":19},{"ruleId":"1394","severity":1,"message":"1415","line":17,"column":8,"nodeType":"1396","messageId":"1397","endLine":17,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1403","line":22,"column":10,"nodeType":"1396","messageId":"1397","endLine":22,"endColumn":24},{"ruleId":"1404","severity":1,"message":"1405","line":149,"column":50,"nodeType":"1406","messageId":"1407","endLine":149,"endColumn":52},{"ruleId":"1404","severity":1,"message":"1408","line":213,"column":37,"nodeType":"1406","messageId":"1407","endLine":213,"endColumn":39},{"ruleId":"1404","severity":1,"message":"1408","line":214,"column":37,"nodeType":"1406","messageId":"1407","endLine":214,"endColumn":39},{"ruleId":"1404","severity":1,"message":"1408","line":220,"column":24,"nodeType":"1406","messageId":"1407","endLine":220,"endColumn":26},{"ruleId":"1404","severity":1,"message":"1408","line":226,"column":35,"nodeType":"1406","messageId":"1407","endLine":226,"endColumn":37},{"ruleId":"1417","severity":1,"message":"1418","line":339,"column":13,"nodeType":"1419","endLine":339,"endColumn":23},{"ruleId":"1417","severity":1,"message":"1418","line":342,"column":13,"nodeType":"1419","endLine":342,"endColumn":23},{"ruleId":"1417","severity":1,"message":"1418","line":348,"column":13,"nodeType":"1419","endLine":348,"endColumn":23},{"ruleId":"1404","severity":1,"message":"1405","line":401,"column":41,"nodeType":"1406","messageId":"1407","endLine":401,"endColumn":43},{"ruleId":"1394","severity":1,"message":"1401","line":10,"column":8,"nodeType":"1396","messageId":"1397","endLine":10,"endColumn":15},{"ruleId":"1394","severity":1,"message":"1403","line":11,"column":10,"nodeType":"1396","messageId":"1397","endLine":11,"endColumn":24},{"ruleId":"1394","severity":1,"message":"1462","line":13,"column":8,"nodeType":"1396","messageId":"1397","endLine":13,"endColumn":21},{"ruleId":"1404","severity":1,"message":"1408","line":65,"column":74,"nodeType":"1406","messageId":"1407","endLine":65,"endColumn":76},{"ruleId":"1417","severity":1,"message":"1418","line":80,"column":7,"nodeType":"1419","endLine":80,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1408","line":119,"column":41,"nodeType":"1406","messageId":"1407","endLine":119,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":185,"column":44,"nodeType":"1406","messageId":"1407","endLine":185,"endColumn":46},{"ruleId":"1394","severity":1,"message":"1462","line":9,"column":8,"nodeType":"1396","messageId":"1397","endLine":9,"endColumn":21},{"ruleId":"1394","severity":1,"message":"1400","line":10,"column":10,"nodeType":"1396","messageId":"1397","endLine":10,"endColumn":14},{"ruleId":"1394","severity":1,"message":"1401","line":13,"column":8,"nodeType":"1396","messageId":"1397","endLine":13,"endColumn":15},{"ruleId":"1394","severity":1,"message":"1403","line":14,"column":10,"nodeType":"1396","messageId":"1397","endLine":14,"endColumn":24},{"ruleId":"1404","severity":1,"message":"1408","line":64,"column":74,"nodeType":"1406","messageId":"1407","endLine":64,"endColumn":76},{"ruleId":"1417","severity":1,"message":"1418","line":79,"column":7,"nodeType":"1419","endLine":79,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1408","line":120,"column":41,"nodeType":"1406","messageId":"1407","endLine":120,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1408","line":183,"column":44,"nodeType":"1406","messageId":"1407","endLine":183,"endColumn":46},{"ruleId":"1394","severity":1,"message":"1401","line":10,"column":8,"nodeType":"1396","messageId":"1397","endLine":10,"endColumn":15},{"ruleId":"1394","severity":1,"message":"1403","line":11,"column":10,"nodeType":"1396","messageId":"1397","endLine":11,"endColumn":24},{"ruleId":"1394","severity":1,"message":"1462","line":13,"column":8,"nodeType":"1396","messageId":"1397","endLine":13,"endColumn":21},{"ruleId":"1404","severity":1,"message":"1408","line":65,"column":74,"nodeType":"1406","messageId":"1407","endLine":65,"endColumn":76},{"ruleId":"1404","severity":1,"message":"1408","line":111,"column":41,"nodeType":"1406","messageId":"1407","endLine":111,"endColumn":43},{"ruleId":"1417","severity":1,"message":"1418","line":141,"column":7,"nodeType":"1419","endLine":141,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1408","line":186,"column":44,"nodeType":"1406","messageId":"1407","endLine":186,"endColumn":46},{"ruleId":"1394","severity":1,"message":"1505","line":4,"column":8,"nodeType":"1396","messageId":"1397","endLine":4,"endColumn":13},{"ruleId":"1394","severity":1,"message":"1506","line":5,"column":11,"nodeType":"1396","messageId":"1397","endLine":5,"endColumn":19},{"ruleId":"1394","severity":1,"message":"1403","line":6,"column":10,"nodeType":"1396","messageId":"1397","endLine":6,"endColumn":24},{"ruleId":"1404","severity":1,"message":"1408","line":151,"column":88,"nodeType":"1406","messageId":"1407","endLine":151,"endColumn":90},{"ruleId":"1404","severity":1,"message":"1408","line":186,"column":88,"nodeType":"1406","messageId":"1407","endLine":186,"endColumn":90},{"ruleId":"1404","severity":1,"message":"1405","line":200,"column":26,"nodeType":"1406","messageId":"1407","endLine":200,"endColumn":28},{"ruleId":"1404","severity":1,"message":"1405","line":200,"column":38,"nodeType":"1406","messageId":"1407","endLine":200,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1408","line":252,"column":88,"nodeType":"1406","messageId":"1407","endLine":252,"endColumn":90},{"ruleId":"1404","severity":1,"message":"1408","line":284,"column":88,"nodeType":"1406","messageId":"1407","endLine":284,"endColumn":90},{"ruleId":"1404","severity":1,"message":"1405","line":298,"column":26,"nodeType":"1406","messageId":"1407","endLine":298,"endColumn":28},{"ruleId":"1404","severity":1,"message":"1405","line":298,"column":38,"nodeType":"1406","messageId":"1407","endLine":298,"endColumn":40},{"ruleId":"1404","severity":1,"message":"1405","line":721,"column":26,"nodeType":"1406","messageId":"1407","endLine":721,"endColumn":28},{"ruleId":"1404","severity":1,"message":"1405","line":721,"column":38,"nodeType":"1406","messageId":"1407","endLine":721,"endColumn":40},{"ruleId":"1466","severity":1,"message":"1507","line":805,"column":3,"nodeType":"1468","messageId":"1407","endLine":816,"endColumn":4},"no-native-reassign",["1508"],"no-negated-in-lhs",["1509"],"no-unused-vars","'NearByInfo' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'footer_data' is defined but never used.","'Link' is defined but never used.","'Tooltip' is defined but never used.","'MDBIcon' is defined but never used.","'ToastContainer' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'AppLink' is defined but never used.","'Platform' is defined but never used.","'MailOutlineIcon' is defined but never used.","'Checkbox' is defined but never used.","'tweet_img' is defined but never used.","'DialogTitle' is defined but never used.","'Dialog' is defined but never used.","'Background' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'styles' is assigned a value but never used.","'KeyboardBackspaceIcon' is defined but never used.","'CollabBannerImg' is defined but never used.","'CollaborationsHeadings' is defined but never used.","'AddCircleIcon' is defined but never used.","'files' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'MDBNavLink' is defined but never used.","'MDBDropdown' is defined but never used.","'MDBDropdownToggle' is defined but never used.","'MDBDropdownMenu' is defined but never used.","'MDBDropdownItem' is defined but never used.","'AccountBoxIcon' is defined but never used.","'Grid' is defined but never used.","'AccountBoxRoundedIcon' is defined but never used.","'Navbar' is defined but never used.","'Encoding' is defined but never used.","'LoadingOverlay' is defined but never used.","'confirm' is defined but never used.","'PersonOutlineOutlinedIcon' is defined but never used.","'UserGeoMapComponent' is defined but never used.","'Footer' is defined but never used.","'FacebookLogin' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'LoginHeadings' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'DashboardHeadings' is defined but never used.","'TextField' is defined but never used.","'CallIcon' is defined but never used.","'ContactsIcon' is defined but never used.","'MenuIcon' is defined but never used.","'LockOutlinedIcon' is defined but never used.","no-dupe-keys","Duplicate key 'submit'.","ObjectExpression","'OtpInput' is defined but never used.","'textAlign' is defined but never used.","'LinesEllipsis' is defined but never used.","'DefaultMaps' is defined but never used.","Duplicate key 'dialogBoxStatus'.","'test' is assigned a value but never used.","no-dupe-class-members","Duplicate name 'handleClose'.","MethodDefinition","'PublishUpload' is defined but never used.","'CancelIcon' is defined but never used.","'title' is assigned a value but never used.","'Select' is defined but never used.","'Card' is defined but never used.","'ComplaintType' is assigned a value but never used.","'ComplaintDetails' is defined but never used.","'ReplayIcon' is defined but never used.","'ComplaintStatus' is assigned a value but never used.","'MDBContainer' is defined but never used.","'MDBRating' is defined but never used.","'Alert' is defined but never used.","'DashboardIcons' is defined but never used.","'withRouter' is defined but never used.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'Map' is defined but never used.","'options' is assigned a value but never used.","'data' is assigned a value but never used.","'Locator' is assigned a value but never used.","'FeatureLayer' is assigned a value but never used.","'SimpleMarkerSymbol' is assigned a value but never used.","'PictureMarkerSymbol' is assigned a value but never used.","'WebStyleSymbol' is assigned a value but never used.","'Track' is assigned a value but never used.","'Popup' is assigned a value but never used.","'PopupTemplate' is assigned a value but never used.","'HomeOutlinedIcon' is defined but never used.","'LogComplaintBackButton' is defined but never used.","Duplicate key 'complaint_media'.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'locatorUrl' is assigned a value but never used.","'BotAvatar' is defined but never used.","'Button' is defined but never used.","'markerSymbol' is assigned a value but never used.","'React' is defined but never used.","'Redirect' is defined but never used.","Duplicate name 'updateChatbotState'.","no-global-assign","no-unsafe-negation"]